<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vincent&#39;s Notes</title>
    <link>https://missuo.me/</link>
    <description>Recent content on Vincent&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 16 Jun 2023 00:10:47 +0800</lastBuildDate><atom:link href="https://missuo.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>U.S. Visa Interview in Hong Kong</title>
      <link>https://missuo.me/posts/hongkong-us-visa/</link>
      <pubDate>Fri, 16 Jun 2023 00:10:47 +0800</pubDate>
      
      <guid>https://missuo.me/posts/hongkong-us-visa/</guid>
      <description>平时生活在浙江和上海，正常情况下最方便美国签证的地方应该是上海。但是我特地跑到了香港，主要有两方面的原因，第一是因为我申请的 Master 专业是 CS，属于 STEM 专业，在中国大陆签证被 check 的概率非常高，被 check 需要等待至少 4 周以上的时间，而且最后给的 F1 签证也很有可能是 1 年。第二是因为美国驻上海领事馆的预约最快要在一个月之后，需要等待的时间会比较久。
本文仅分享我的个人经历，由于专业、时间以及签证官的不同，可能会有所差别。
面签的准备 其实和中国大陆面签准备的材料是一样的，这里就不过多赘述。这里我简单说一下关于帐号的问题。 如果你在中国大陆有帐号的情况下，最好是发邮件联系 美国驻香港领事馆，把你的帐号区域转移到 香港，否则你在预约的时候选项里面是没有香港的。当然你也可以重新注册一个香港区域的帐号，但是可能会存在一些奇奇怪怪的 Bug（比如个人信息中部分内容无法修改等等）。
除此之外，你需要准备好 港澳通行证 以及 有效签注，这是用于你成功离境中国大陆和入境香港，签证的时候并不会用到。
另外有关于小红书提到的 香港身份证 (HKID) 的问题，我可以非常肯定地告诉你 不需要，但是会被询问，这个后来会提到。
面签的时间尽量不要选择星期五，星期五可能第二天拿不到护照。另外预约的时间段在 10 点多是最好的，太早的话可能需要起很早。到达的时间可以提早，我提早了差不多一个多小时，可以进去。但是网上说不能迟到超过 15 分钟，否则无法进入（有待考证）。
关于自提护照和邮寄的问题，我的建议是自取，邮寄的收货地址只能是香港，而且邮寄的速度肯定没有自取快。自取点建议选择 Shau Kei Wan (筲箕灣)，这是唯一一个免费的自取点，别的自取点都需要支付 100HKD 左右的快递费用。我猜可能是因为 筲箕灣 是顺丰快递护照分发的网点，所以是不需要快递费用的，可能所有的护照都会被先送到 筲箕灣。（注意：这个 筲箕灣 自提点是顺丰快递网点）
正式面签 Consulate General Of The United States Of America, 26 Garden Rd, Central
如果乘坐地铁的话，可以到 中环 步行，但是需要一路往上爬，地点在山顶，大概 700 米，但是会比较累。
美国驻香港总领事馆允许携带手机和小型包，只要你的包的大小可能放进篮子就可以，篮子的大小大概和 A4 纸差不多。刚进去的时候，需要将口袋里的东西和手机还有背包放到篮子里。然后开始排队，首先会检查你的材料，帮你把需要的材料钉在一起，然后会在你的护照上贴上一张 Label，应该是方便追踪你的护照。这个时候工作人员会问你要 HKID，如果你来自中国大陆，你可以直接说 NO HKID，他会让你给他 I-20 和 SEVIS Fee 支付凭证。别的材料可以依然在文件袋内。再下一个排队，是需要去窗口提交你的 签证照，窗口的工作人员会问你 香港话 还是 普通话，然后会问你什么时候拍的照片。这些步骤完成之后，会再经过一次材料检查和安检，还需要将东西全部过安检机器，手机和小包这个过完安检机器会引导你寄存。寄存完了之后就正式进入到了大厅。</description>
      <content:encoded><![CDATA[<blockquote>
<p>平时生活在浙江和上海，正常情况下最方便美国签证的地方应该是上海。但是我特地跑到了香港，主要有两方面的原因，第一是因为我申请的 Master 专业是 CS，属于 STEM 专业，在中国大陆签证被 check 的概率非常高，被 check 需要等待至少 4 周以上的时间，而且最后给的 F1 签证也很有可能是 1 年。第二是因为美国驻上海领事馆的预约最快要在一个月之后，需要等待的时间会比较久。</p>
</blockquote>
<p>本文仅分享我的个人经历，由于专业、时间以及签证官的不同，可能会有所差别。</p>
<h2 id="面签的准备">面签的准备</h2>
<p>其实和中国大陆面签准备的材料是一样的，这里就不过多赘述。这里我简单说一下关于帐号的问题。
如果你在中国大陆有帐号的情况下，最好是发邮件联系 <strong>美国驻香港领事馆</strong>，把你的帐号区域转移到 <strong>香港</strong>，否则你在预约的时候选项里面是没有香港的。当然你也可以重新注册一个香港区域的帐号，但是可能会存在一些奇奇怪怪的 Bug（比如个人信息中部分内容无法修改等等）。</p>
<p>除此之外，你需要准备好 <strong>港澳通行证</strong> 以及 <strong>有效签注</strong>，这是用于你成功离境中国大陆和入境香港，签证的时候并不会用到。</p>
<p>另外有关于小红书提到的 <strong>香港身份证 (HKID)</strong> 的问题，我可以非常肯定地告诉你 <strong>不需要</strong>，但是会被询问，这个后来会提到。</p>
<p>面签的时间尽量不要选择星期五，星期五可能第二天拿不到护照。另外预约的时间段在 10 点多是最好的，太早的话可能需要起很早。到达的时间可以提早，我提早了差不多一个多小时，可以进去。但是网上说不能迟到超过 15 分钟，否则无法进入（有待考证）。</p>
<p>关于自提护照和邮寄的问题，我的建议是自取，邮寄的收货地址只能是香港，而且邮寄的速度肯定没有自取快。自取点建议选择 <strong>Shau Kei Wan (筲箕灣)</strong>，这是唯一一个免费的自取点，别的自取点都需要支付 <strong>100HKD</strong> 左右的快递费用。我猜可能是因为 <strong>筲箕灣</strong> 是顺丰快递护照分发的网点，所以是不需要快递费用的，可能所有的护照都会被先送到 <strong>筲箕灣</strong>。（注意：这个 <strong>筲箕灣</strong> 自提点是顺丰快递网点）</p>
<h2 id="正式面签">正式面签</h2>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/2023061685zc1s.jpeg" alt="2023061685zc1s"  />
</p>
<p><strong>Consulate General Of The United States Of America, 26 Garden Rd, Central</strong></p>
<p>如果乘坐地铁的话，可以到 <strong>中环</strong> 步行，但是需要一路往上爬，地点在山顶，大概 700 米，但是会比较累。</p>
<p>美国驻香港总领事馆允许携带手机和小型包，只要你的包的大小可能放进篮子就可以，篮子的大小大概和 A4 纸差不多。刚进去的时候，需要将口袋里的东西和手机还有背包放到篮子里。然后开始排队，首先会检查你的材料，帮你把需要的材料钉在一起，然后会在你的护照上贴上一张 Label，应该是方便追踪你的护照。这个时候工作人员会问你要 <strong>HKID</strong>，如果你来自中国大陆，你可以直接说 <strong>NO HKID</strong>，他会让你给他 <strong>I-20</strong> 和 <strong>SEVIS Fee 支付凭证</strong>。别的材料可以依然在文件袋内。再下一个排队，是需要去窗口提交你的 <strong>签证照</strong>，窗口的工作人员会问你 <strong>香港话</strong> 还是 <strong>普通话</strong>，然后会问你什么时候拍的照片。这些步骤完成之后，会再经过一次材料检查和安检，还需要将东西全部过安检机器，手机和小包这个过完安检机器会引导你寄存。寄存完了之后就正式进入到了大厅。</p>
<p>首先需要录入十根手指的指纹，先是两个手的八根手指，最后是两个大拇指，这个步骤很快估计就 10 秒钟，完了之后开始等待面签的窗口了，所有的窗口都是一样的，可以处理所有的签证类型。我去的时候大概是上午 10 点，基本前面就三四个人，非常快，不到十分钟。我轮到的是倒数第二个窗口，是个白胡子老爷爷，我给他我的 <strong>护照、I-20 和 SEVIS Fee 支付凭证</strong>，他开始提问。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">- Hello, Good Morning!
</span></span><span class="line"><span class="cl">- Good Morning!
</span></span><span class="line"><span class="cl">- Are you going to the University of Pittsburgh for a Master of Computer Science?
</span></span><span class="line"><span class="cl">- Yes.
</span></span><span class="line"><span class="cl">- Did you study for a bachelor&#39;s degree in Shanghai?
</span></span><span class="line"><span class="cl">- Yes.
</span></span><span class="line"><span class="cl">- Are you going to graduate school in the same field?
</span></span><span class="line"><span class="cl">- Yes.
</span></span><span class="line"><span class="cl">- Do you have any future plans?
</span></span><span class="line"><span class="cl">- When I finish my studies, I plan to go back to China.
</span></span><span class="line"><span class="cl">- Your parents are both in China, right?
</span></span><span class="line"><span class="cl">- Yes.
</span></span><span class="line"><span class="cl">- Do you have a financial certificate?
</span></span><span class="line"><span class="cl">- Yes. (给他存款证明)
</span></span><span class="line"><span class="cl">- Your visa has been approved.
</span></span><span class="line"><span class="cl">- Thanks. Have a nice day!
</span></span></code></pre></div><p>留下护照，别的都还给你，整理好材料，取回寄存的手机和小包，走出领事馆。</p>
<h2 id="取回护照">取回护照</h2>
<p>面签通过之后，理论上可以查询到你的签证状态了，正常应该是显示 <strong>Approved</strong>。第二天我起来的时候状态还是 <strong>Approved</strong>，差不多到中午的时候变成了 <strong>Issued</strong>。在下午 5 点整，收到了邮件，让我去取护照，总共耗时 30 小时左右，效率非常高。拿到护照翻开一看，签发的 5 年 F1。</p>
<h2 id="建议">建议</h2>
<p>如果你是敏感专业，想早点拿到签证，不想被 <strong>check</strong> 的话，香港是一个非常不错的选择。但是如果你是非 <strong>STEM</strong> 专业的话，可以直接在国内面签。另外，如果当场通过的 F1 签证一般是给五年的，而被 <strong>check</strong> 之后通过的 F1 签证一般是给一年的，意味着你快递到手之后，你的签证是不满一年的，那么也不能在 <strong>国际旅行中心</strong> 免费体检。</p>
<h2 id="附加-b2-签证的问题">附加 B2 签证的问题</h2>
<p>我也在网上查了一些资料，因为 B2 签证的排期非常久，即使是香港也要超过一个月，又因为 B2 签证最高可以 10 年有效期，性价比非常高，可以在开学前提早入境美国，当然之后开学需要出境重新用 F1 入境。如果你在面签 F1 的时候同时面签 B2，需要填写两份 <strong>DS-160</strong>，一起递交给签证官就可以了，会不会影响各自的通过率不知道，如果都通过了，会给你的护照上两个美国签证。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>SIM card I am using</title>
      <link>https://missuo.me/posts/sim-card/</link>
      <pubDate>Tue, 30 May 2023 18:50:58 +0800</pubDate>
      
      <guid>https://missuo.me/posts/sim-card/</guid>
      <description>境外 中国移动香港 CMHK 资费：2HKD/mo
保号：每充值 50HKD 续费 180 天
用途：绑定 BOCHK 账户，注册 WeChat 等
上车价格：30CNY（几年前的价格，现在涨价了）
Giffgaff 资费：0GBP
保号：每半年发送一次短信或者拨打一次电话
用途：注册 OpenAI，绑定 WeChat 等
上车价格：30CNY/2 张
Globe 资费：0PHP
保号：半年充值 5CNY
用途：注册 Paymaya，注册 Gcash 等
上车价格：11CNY
PayGo 资费：3USD/mo
保号：每月正常扣款 3USD，没有别的要求
用途：绑定美区 PayPal 等
上车价格：13USD eBay
境内 中国移动 China Mobile 套餐：8 元飞享套餐
资费：8CNY/mo
用途：这是我最老的号码，绑定了不少服务，现在使用 无忧行 App 仅收短信
中国联通 China Unicom 套餐：浙江沃派 5G 套餐（44G + 300 分钟）
资费：28CNY/mo
用途：主用上网通话卡
中国联通 China Unicom 套餐：大王卡（70G）
资费：29CNY/mo
用途：备用上网卡</description>
      <content:encoded><![CDATA[<h1 id="境外">境外</h1>
<h3 id="中国移动香港-cmhk">中国移动香港 CMHK</h3>
<p>资费：2HKD/mo<br>
保号：每充值 50HKD 续费 180 天<br>
用途：绑定 BOCHK 账户，注册 WeChat 等<br>
上车价格：30CNY（几年前的价格，现在涨价了）</p>
<h3 id="giffgaff">Giffgaff</h3>
<p>资费：0GBP<br>
保号：每半年发送一次短信或者拨打一次电话<br>
用途：注册 OpenAI，绑定 WeChat 等<br>
上车价格：30CNY/2 张</p>
<h3 id="globe">Globe</h3>
<p>资费：0PHP<br>
保号：半年充值 5CNY<br>
用途：注册 Paymaya，注册 Gcash 等<br>
上车价格：11CNY</p>
<h3 id="paygo">PayGo</h3>
<p>资费：3USD/mo<br>
保号：每月正常扣款 3USD，没有别的要求<br>
用途：绑定美区 PayPal 等<br>
上车价格：13USD  <a href="https://www.ebay.com/itm/285112988423?mkcid=16&amp;mkevt=1&amp;mkrid=711-127632-2357-0&amp;ssspo=gHfqfctQT8S&amp;sssrc=2349624&amp;ssuid=dcrueftqrgg&amp;var=&amp;widget_ver=artemis&amp;media=COPY">eBay</a></p>
<h1 id="境内">境内</h1>
<h3 id="中国移动-china-mobile">中国移动 China Mobile</h3>
<p>套餐：8 元飞享套餐<br>
资费：8CNY/mo<br>
用途：这是我最老的号码，绑定了不少服务，现在使用 <strong>无忧行 App</strong> 仅收短信</p>
<h3 id="中国联通-china-unicom">中国联通 China Unicom</h3>
<p>套餐：浙江沃派 5G 套餐（44G + 300 分钟）<br>
资费：28CNY/mo<br>
用途：主用上网通话卡</p>
<h3 id="中国联通-china-unicom-1">中国联通 China Unicom</h3>
<p>套餐：大王卡（70G）<br>
资费：29CNY/mo<br>
用途：备用上网卡</p>
<h3 id="中国电信-china-telecom">中国电信 China Telecom</h3>
<p>套餐：上海飞 Young 校园卡（36G + 300 分钟）<br>
资费：99CNY/yr<br>
用途：备用上网卡</p>
<h3 id="中国电信-china-telecom-1">中国电信 China Telecom</h3>
<p>套餐：星卡（125G + 100 分钟）<br>
资费：29CNY/mo<br>
用途：备用上网卡</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Rime on Mac Tutorial</title>
      <link>https://missuo.me/posts/rime-mac/</link>
      <pubDate>Mon, 29 May 2023 19:57:54 +0800</pubDate>
      
      <guid>https://missuo.me/posts/rime-mac/</guid>
      <description>之前有用过 Mac 原生输入法、搜狗输入法。原生输入法缺点就是词库太烂了，很多时候打出来的侯选词都不是我想要的。而搜狗输入法的词库是无可挑剔的，毕竟是联网的词库，但是会有一定的隐私安全。直到我在 Twitter 看到 luolei 用上了 Rime。
我第一次接触 Rime 估计过去了快一年了，第一次配置简直是噩梦，因为 Rime 可以自定义的东西太多了，几乎你能想到的一切都可以自定义，这就导致了你要弄明白每一个设置的参数是干什么用的。配置完之后，使用的体验也不算太好，很多时候都出现不了我想要的侯选词，不过随着个人词库的训练，会变得越来越“智能”。老实说，放在以前我不会向你推荐 Rime，我相信很多朋友刚设置完没几天就换回 搜狗 了。直到 雾凇拼音 的出现。雾凇拼音 的好处我就不多赘述了，直接来说说使用方法吧！
1. 安装 Rime (Squirrel) brew install --cask squirrel 2. 安装 东风破 (plum) cd ~/Library/Rime git clone --depth=1 https://github.com/rime/plum 3. 安装 雾凇拼音 cd plum bash rime-install iDvel/rime-ice:others/recipes/full 到这里安装部分基本上已经是完成了。你已经可以开始使用了。下面的部分是一些优化和高阶玩法的部分。
使用 微信输入法 Mac 的主题 修改 squirrel.custom.yaml 文件。
# squirrel.custom.yaml patch: # 通知栏显示方式以及 ascii_mode 应用，与外观无关 show_notifications_via_notification_center: true # 以下软件默认英文模式 app_options: com.svend.uPic: ascii_mode: true # 如果想要修改皮肤，直接更改 color_scheme 的值即可 style: color_scheme: wechat_light color_scheme_dark: wechat_dark preset_color_schemes: wechat_light: name: 微信键盘浅色 horizontal: true # true横排，false竖排 back_color: 0xFFFFFF # 候选条背景色 border_height: 0 # 窗口上下高度，大于圆角半径才生效 border_width: 8 # 窗口左右宽度，大于圆角半径才生效 candidate_format: &amp;#39;%c %@ &amp;#39; # 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间 comment_text_color: 0x999999 # 拼音等提示文字颜色 corner_radius: 5 # 窗口圆角 hilited_corner_radius: 5 # 高亮圆角 font_face: PingFangSC # 候选词字体 font_point: 16 # 候选字大小 hilited_candidate_back_color: 0x75B100 # 第一候选项背景色 hilited_candidate_text_color: 0xFFFFFF # 第一候选项文字颜色 label_font_point: 12 # 候选编号大小 text_color: 0x424242 # 拼音行文字颜色 inline_preedit: true # 拼音位于： 候选框 false | 行内 true wechat_dark: name: 微信键盘深色 horizontal: true # true横排，false竖排 back_color: 0x2e2925 # 候选条背景色 border_height: 0 # 窗口上下高度，大于圆角半径才生效 border_width: 8 # 窗口左右宽度，大于圆角半径才生效 candidate_format: &amp;#39;%c %@ &amp;#39; # 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间 comment_text_color: 0x999999 # 拼音等提示文字颜色 corner_radius: 5 # 窗口圆角 hilited_corner_radius: 5 # 高亮圆角 font_face: PingFangSC # 候选词字体 font_point: 16 # 候选字大小 hilited_candidate_back_color: 0x75B100 # 第一候选项背景色 hilited_candidate_text_color: 0xFFFFFF # 第一候选项文字颜色 label_font_point: 12 # 候选编号大小 text_color: 0x424242 # 拼音行文字颜色 label_color: 0x999999 # 预选栏编号颜色 candidate_text_color: 0xe9e9ea # 预选项文字颜色 inline_preedit: true # 拼音位于： 候选框 false | 行内 true 更新和同步词库 我这边采用的备份方案是 Dropbox，别的也都类似，可以实现多台设备之间词库互相同步。修改 installation.</description>
      <content:encoded><![CDATA[<blockquote>
<p>之前有用过 Mac 原生输入法、搜狗输入法。原生输入法缺点就是词库太烂了，很多时候打出来的侯选词都不是我想要的。而搜狗输入法的词库是无可挑剔的，毕竟是联网的词库，但是会有一定的隐私安全。直到我在 Twitter 看到 <a href="https://twitter.com/luoleiorg">luolei</a> 用上了 Rime。</p>
</blockquote>
<p>我第一次接触 Rime 估计过去了快一年了，第一次配置简直是噩梦，因为 Rime 可以自定义的东西太多了，几乎你能想到的一切都可以自定义，这就导致了你要弄明白每一个设置的参数是干什么用的。配置完之后，使用的体验也不算太好，很多时候都出现不了我想要的侯选词，不过随着个人词库的训练，会变得越来越“智能”。老实说，放在以前我不会向你推荐 Rime，我相信很多朋友刚设置完没几天就换回 <strong>搜狗</strong> 了。直到 <strong><a href="https://github.com/iDvel/rime-ice">雾凇拼音</a></strong> 的出现。<strong>雾凇拼音</strong> 的好处我就不多赘述了，直接来说说使用方法吧！</p>
<h3 id="1-安装-rime-squirrel">1. 安装 Rime (Squirrel)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install --cask squirrel
</span></span></code></pre></div><h3 id="2-安装-东风破-plum">2. 安装 东风破 (plum)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ~/Library/Rime
</span></span><span class="line"><span class="cl">git clone --depth<span class="o">=</span><span class="m">1</span> https://github.com/rime/plum
</span></span></code></pre></div><h3 id="3-安装-雾凇拼音">3. 安装 雾凇拼音</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> plum
</span></span><span class="line"><span class="cl">bash rime-install iDvel/rime-ice:others/recipes/full
</span></span></code></pre></div><p>到这里安装部分基本上已经是完成了。你已经可以开始使用了。下面的部分是一些优化和高阶玩法的部分。</p>
<h3 id="使用-微信输入法-mac-的主题">使用 微信输入法 Mac 的主题</h3>
<p>修改 <code>squirrel.custom.yaml</code> 文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># squirrel.custom.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">patch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># 通知栏显示方式以及 ascii_mode 应用，与外观无关</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">show_notifications_via_notification_center</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># 以下软件默认英文模式</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">app_options</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">com.svend.uPic</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ascii_mode</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 如果想要修改皮肤，直接更改 color_scheme 的值即可</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">style</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">color_scheme</span><span class="p">:</span><span class="w"> </span><span class="l">wechat_light</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">color_scheme_dark</span><span class="p">:</span><span class="w"> </span><span class="l">wechat_dark</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">preset_color_schemes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">wechat_light</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">微信键盘浅色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">horizontal</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">                          </span><span class="c"># true横排，false竖排</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">back_color</span><span class="p">:</span><span class="w"> </span><span class="l">0xFFFFFF                     </span><span class="w"> </span><span class="c"># 候选条背景色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">border_height</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">                          </span><span class="c"># 窗口上下高度，大于圆角半径才生效</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">border_width</span><span class="p">:</span><span class="w"> </span><span class="m">8</span><span class="w">                           </span><span class="c"># 窗口左右宽度，大于圆角半径才生效</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">candidate_format</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;%c %@ &#39;</span><span class="w">                </span><span class="c"># 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">comment_text_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x999999</span><span class="w">              </span><span class="c"># 拼音等提示文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">corner_radius</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">                          </span><span class="c"># 窗口圆角</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_corner_radius</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">                  </span><span class="c"># 高亮圆角</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">font_face</span><span class="p">:</span><span class="w"> </span><span class="l">PingFangSC                    </span><span class="w"> </span><span class="c"># 候选词字体</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">font_point</span><span class="p">:</span><span class="w"> </span><span class="m">16</span><span class="w">                            </span><span class="c"># 候选字大小</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_candidate_back_color</span><span class="p">:</span><span class="w"> </span><span class="l">0x75B100   </span><span class="w"> </span><span class="c"># 第一候选项背景色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_candidate_text_color</span><span class="p">:</span><span class="w"> </span><span class="l">0xFFFFFF   </span><span class="w"> </span><span class="c"># 第一候选项文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">label_font_point</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">                      </span><span class="c"># 候选编号大小</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">text_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x424242</span><span class="w">                      </span><span class="c"># 拼音行文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inline_preedit</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">                      </span><span class="c"># 拼音位于： 候选框 false | 行内 true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">wechat_dark</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">微信键盘深色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">horizontal</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">                          </span><span class="c"># true横排，false竖排</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">back_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x2e2925</span><span class="w">                      </span><span class="c"># 候选条背景色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">border_height</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">                          </span><span class="c"># 窗口上下高度，大于圆角半径才生效</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">border_width</span><span class="p">:</span><span class="w"> </span><span class="m">8</span><span class="w">                           </span><span class="c"># 窗口左右宽度，大于圆角半径才生效</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">candidate_format</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;%c %@ &#39;</span><span class="w">                </span><span class="c"># 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">comment_text_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x999999</span><span class="w">              </span><span class="c"># 拼音等提示文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">corner_radius</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">                          </span><span class="c"># 窗口圆角</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_corner_radius</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">                  </span><span class="c"># 高亮圆角</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">font_face</span><span class="p">:</span><span class="w"> </span><span class="l">PingFangSC                    </span><span class="w"> </span><span class="c"># 候选词字体</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">font_point</span><span class="p">:</span><span class="w"> </span><span class="m">16</span><span class="w">                            </span><span class="c"># 候选字大小</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_candidate_back_color</span><span class="p">:</span><span class="w"> </span><span class="l">0x75B100   </span><span class="w"> </span><span class="c"># 第一候选项背景色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hilited_candidate_text_color</span><span class="p">:</span><span class="w"> </span><span class="l">0xFFFFFF   </span><span class="w"> </span><span class="c"># 第一候选项文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">label_font_point</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">                      </span><span class="c"># 候选编号大小</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">text_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x424242</span><span class="w">                      </span><span class="c"># 拼音行文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">label_color</span><span class="p">:</span><span class="w"> </span><span class="m">0x999999</span><span class="w">                     </span><span class="c"># 预选栏编号颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">candidate_text_color</span><span class="p">:</span><span class="w"> </span><span class="m">0xe9e9ea</span><span class="w">            </span><span class="c"># 预选项文字颜色</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inline_preedit</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">                      </span><span class="c"># 拼音位于： 候选框 false | 行内 true</span><span class="w">
</span></span></span></code></pre></div><h3 id="更新和同步词库">更新和同步词库</h3>
<p>我这边采用的备份方案是 <strong>Dropbox</strong>，别的也都类似，可以实现多台设备之间词库互相同步。修改 <code>installation.yaml</code> 文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># installation.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">distribution_code_name</span><span class="p">:</span><span class="w"> </span><span class="l">Squirrel</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">distribution_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;鼠鬚管&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">distribution_version</span><span class="p">:</span><span class="w"> </span><span class="m">0.16.2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">install_time</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Mon May  8 15:13:26 2023&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">installation_id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mac-mini&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sync_dir</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/Users/vincent/Library/CloudStorage/Dropbox/Rime/&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">rime_version</span><span class="p">:</span><span class="w"> </span><span class="m">1.8.5</span><span class="w">
</span></span></span></code></pre></div><p>更新词库脚本，你可以配置 Mac 计划任务，每天或者每隔几个小时自动执行。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">cd</span> ~/Library/Rime/plum
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Updating rime...&#34;</span>
</span></span><span class="line"><span class="cl">bash rime-install iDvel/rime-ice:others/recipes/full
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sleep <span class="m">3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Syncing rime...&#34;</span>
</span></span><span class="line"><span class="cl">/Library/Input<span class="se">\ </span>Methods/Squirrel.app/Contents/MacOS/Squirrel --sync
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Deploying rime...&#34;</span>
</span></span><span class="line"><span class="cl">/Library/Input<span class="se">\ </span>Methods/Squirrel.app/Contents/MacOS/Squirrel --reload
</span></span></code></pre></div><p>别的一些非常具体的设置，我在这里就不介绍了，<a href="https://dvel.me/posts/rime-ice/">雾凇拼音官方介绍</a> 写的非常详细，可以仔细阅读。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Himo Mini Program Security Issues</title>
      <link>https://missuo.me/posts/himo-security/</link>
      <pubDate>Mon, 29 May 2023 00:31:40 +0800</pubDate>
      
      <guid>https://missuo.me/posts/himo-security/</guid>
      <description>因为预约了 6 月头在香港的 F1 签证，所以需要准备一张 签证照，在家这边的小城市，也没什么选择，没有 天真蓝，最好的就是 海马体 了。海马体生意还挺好，当天都约不到，只能约到 5 月 14 日星期天
在 2023 年 5 月 16 日我已经向海马体的技术团队提交了 可能存在的安全问题。直到今天（2023 年 5 月 29 日），我没有收到海马体技术团队的任何回信，我决定在我的个人博客公开。 2023 年 5 月 31 日我收到了海马体技术团队的邮件，已经修复了该问题。
我在拍完照之后，现场等待了一会，大概也就不到半个小时，小姐姐就基本上修好了，让我确认一下是否有需要修改的地方，没有的话就开始打印了。打印完之后，她告诉我电子版随时可以在 海马体小程序 随时下载。这一点我觉得非常方便。
晚上在家的时候，突然想到海马体小程序的这回事，我在想这些个人的照片应该是存储在 OSS 上的，但是我在想会不会有可能是订单号+编号这样子的文件名来存储的，简单说就是这个图片的链接是有规律的。如果真的是这样的话，我就可以轻松拿到所有用户的照片。
我在 iPhone 上开启了抓包，结果发现所有的照片的外链确实是固定的，只不过文件名是随机的一串字符串，似乎没有任何规律，应该就是完全随机的。然而有一个 API 会返回这个用户所有的照片的文件名，这个 API 传递的参数似乎没有类似于 userID 这类的参数，也就是说完全按照 Cookie 来判断哪位用户的。到这里，想拿到别的用户的照片外链的计划算是泡汤了。
我又想到因为每一次的照片肯定是和订单绑定的，也就是说一个 签证照 订单，理论上应该就固定的只有 4 张图。我又仔细地看了一下订单返回的参数，比较有价值的就是用户名、手机号这些，别的都是预约的门店、门店地址、门店联系电话、订单价格之类的一些东西。但是有一个意外的惊喜，我发现订单详情的 API 在 GET 请求的时候携带了 orderNo 参数，我赶紧使用 API 测试工具，发起了请求，把 orderNo 改一个数字，API 返回了 “订单不存在”。心里窃喜，竟然返回的是订单不存在，而不是无权限，说明我的 Cookie 应该可以查看别人的订单信息，我可以拿到任何注册 海马体小程序 用户的 联系方式。</description>
      <content:encoded><![CDATA[<blockquote>
<p>因为预约了 6 月头在香港的 F1 签证，所以需要准备一张 <strong>签证照</strong>，在家这边的小城市，也没什么选择，没有 <strong>天真蓝</strong>，最好的就是 <strong>海马体</strong> 了。海马体生意还挺好，当天都约不到，只能约到 5 月 14 日星期天</p>
</blockquote>
<p>在 2023 年 5 月 16 日我已经向海马体的技术团队提交了 <strong>可能存在的安全问题</strong>。<del>直到今天（2023 年 5 月 29 日），我没有收到海马体技术团队的任何回信，我决定在我的个人博客公开。</del> 2023 年 5 月 31 日我收到了海马体技术团队的邮件，已经修复了该问题。</p>
<p>我在拍完照之后，现场等待了一会，大概也就不到半个小时，小姐姐就基本上修好了，让我确认一下是否有需要修改的地方，没有的话就开始打印了。打印完之后，她告诉我电子版随时可以在 <strong>海马体小程序</strong> 随时下载。这一点我觉得非常方便。</p>
<p>晚上在家的时候，突然想到海马体小程序的这回事，我在想这些个人的照片应该是存储在 <strong>OSS</strong> 上的，但是我在想会不会有可能是订单号+编号这样子的文件名来存储的，简单说就是这个图片的链接是有规律的。如果真的是这样的话，我就可以轻松拿到所有用户的照片。</p>
<p>我在 iPhone 上开启了抓包，结果发现所有的照片的外链确实是固定的，只不过文件名是随机的一串字符串，似乎没有任何规律，应该就是完全随机的。然而有一个 API 会返回这个用户所有的照片的文件名，这个 API 传递的参数似乎没有类似于 <strong>userID</strong> 这类的参数，也就是说完全按照 <strong>Cookie</strong> 来判断哪位用户的。到这里，想拿到别的用户的照片外链的计划算是泡汤了。</p>
<p>我又想到因为每一次的照片肯定是和订单绑定的，也就是说一个 <strong>签证照</strong> 订单，理论上应该就固定的只有 4 张图。我又仔细地看了一下订单返回的参数，比较有价值的就是用户名、手机号这些，别的都是预约的门店、门店地址、门店联系电话、订单价格之类的一些东西。但是有一个意外的惊喜，我发现订单详情的 API 在 GET 请求的时候携带了 <strong>orderNo</strong> 参数，我赶紧使用 API 测试工具，发起了请求，把 <strong>orderNo</strong> 改一个数字，API 返回了 “订单不存在”。心里窃喜，竟然返回的是订单不存在，而不是无权限，说明我的 <strong>Cookie</strong> 应该可以查看别人的订单信息，我可以拿到任何注册 <strong>海马体小程序</strong> 用户的 <strong>联系方式</strong>。</p>
<p>我的订单的 <strong>orderNo</strong> 是 <strong>T2023051413359999</strong>，以首字母 T 开头，前 8 位是当天的日期，后面的 8 个纯数字应该是随机的，但是这难不倒我，手搓一个 <strong>Python</strong> 脚本，从 <strong>00000000</strong> 穷举到 <strong>99999999</strong> 不就完事了，在多线程的帮助下，简直是小菜一碟。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 这是示例代码，不能直接运行</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">threading</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">httpx</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;app-key&#34;</span><span class="p">:</span> <span class="s2">&#34;himo-wx-mini-program&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;content-type&#34;</span><span class="p">:</span> <span class="s2">&#34;application/json&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;X-Stream-Id&#34;</span><span class="p">:</span> <span class="s2">&#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;User-Agent&#34;</span><span class="p">:</span> <span class="s2">&#34;Mozilla/5.0 (iPhone; CPU iPhone OS 16_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MicroMessenger/8.0.37(0x18002528) NetType/WIFI Language/en&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;Referer&#34;</span><span class="p">:</span> <span class="s2">&#34;https://servicewechat.com/xxxxx/456/page-frame.html&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">semaphore</span> <span class="o">=</span> <span class="n">threading</span><span class="o">.</span><span class="n">Semaphore</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">getOrderDetails</span><span class="p">(</span><span class="n">orderId</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">with</span> <span class="n">semaphore</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;https://api-gateway.hzmantu.com/appointment_platform/order/order/order_detail?orderNo=T20230515</span><span class="si">{</span><span class="n">orderId</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="n">resp</span> <span class="o">=</span> <span class="n">httpx</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="n">resp</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">				<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;result.json&#34;</span><span class="p">,</span> <span class="s2">&#34;a&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">					<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">				<span class="nb">print</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">finally</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">semaphore</span><span class="o">.</span><span class="fm">__exit__</span><span class="p">(</span><span class="kc">None</span><span class="p">,</span> <span class="kc">None</span><span class="p">,</span> <span class="kc">None</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			
</span></span><span class="line"><span class="cl"><span class="n">threads</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">orderId</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10013132</span><span class="p">,</span> <span class="mi">99999999</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">thread</span> <span class="o">=</span> <span class="n">threading</span><span class="o">.</span><span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">getOrderDetails</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="n">orderId</span><span class="p">,))</span>
</span></span><span class="line"><span class="cl">	<span class="n">thread</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="n">threads</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">thread</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">thread</span> <span class="ow">in</span> <span class="n">threads</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">thread</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</span></span></code></pre></div><p>很快，Python 的程序跑出了结果，验证了我的猜想。来自 <strong>武汉</strong> 的一位幸运网友。（<strong>为了保护他人隐私，已将关键信息打码</strong>）</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/202305295XA9GS.png" alt="202305295XA9GS"  />
</p>
<p>我在 5 月 15 日凌晨发了一条朋友圈和微博，在微博艾特了 <strong>缦图摄影</strong> 和 <strong>海马体照相馆</strong>。很荣幸，在微博私信和我的邮箱都有工作人员联系我，下午醒来的时候我及时地回复了邮件，很遗憾的是过去了接近 2 周的时间，我没有收到任何回信，我不知道他们是修复了这个问题，还是说直接忽略了。之后我也没有再去验证。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20230529fzK3kq.png" alt="20230529fzK3kq"  />
</p>
<p>其实我写这篇博客，只是想分享这一段有趣的小研究，也算是为海马体做出一点点贡献。<strong>海马体小程序</strong> 其实只是一个很好的例子，其实他们并不是一家小公司，而是一家在中国大陆范围内规模挺大的公司。除了海马体，在过去的时间里我还有研究过很多类似的小程序，很遗憾，大部分小程序都没有在 <strong>用户个人信息</strong> 做到很好保护。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>U.S. Visa Waiting Time View</title>
      <link>https://missuo.me/posts/us-visa/</link>
      <pubDate>Wed, 17 May 2023 21:18:24 +0800</pubDate>
      
      <guid>https://missuo.me/posts/us-visa/</guid>
      <description>Selected Embassy U.S. Visa Waiting Times View
Information Last updated on: 2023-06-29 17:07:28 (Updated every 3 hours)
Beijing - P24 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 119 2023-10-26 Yes Students/Exchange Visitors (F, M, J) 31 2023-07-30 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 43 2023-08-11 Yes Crew and Transit (C, D, C1/D) 52 2023-08-20 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Shanghai - P187 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 128 2023-11-04 Yes Students/Exchange Visitors (F, M, J) 30 2023-07-29 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 50 2023-08-18 Yes Crew and Transit (C, D, C1/D) 42 2023-08-10 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Guangzhou - P73 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 145 2023-11-21 Yes Students/Exchange Visitors (F, M, J) 23 2023-07-22 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 51 2023-08-19 Yes Crew and Transit (C, D, C1/D) 42 2023-08-10 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Shenyang - P188 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 75 2023-09-12 Yes Students/Exchange Visitors (F, M, J) 20 2023-07-19 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 31 2023-07-30 Yes Crew and Transit (C, D, C1/D) 75 2023-09-12 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Hong Kong - P84 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 68 2023-09-05 Yes Students/Exchange Visitors (F, M, J) 4 2023-07-03 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 2 2023-07-01 Yes Crew and Transit (C, D, C1/D) 2 2023-07-01 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Bangkok - P22 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 240 2024-02-24 Yes Students/Exchange Visitors (F, M, J) 4 2023-07-03 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 4 2023-07-03 Yes Crew and Transit (C, D, C1/D) 4 2023-07-03 Waiver Students/Exchange Visitors (F, M, J) 28 2023-07-27 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) None None Waiver Crew and Transit (C, D, C1/D) None None Waiver Visitors (B1/B2) 28 2023-07-27 Tokyo - P205 Interview Required Visa Type Waiting Time (Calendar Days) Estimated Time Yes Visitors (B1/B2) 79 2023-09-16 Yes Students/Exchange Visitors (F, M, J) 3 2023-07-02 Yes Petition-Based Temporary Workers (H, L, O, P, Q) 10 2023-07-09 Yes Crew and Transit (C, D, C1/D) 3 2023-07-02 Waiver Students/Exchange Visitors (F, M, J) 1 2023-06-30 Waiver Petition-Based Temporary Workers (H, L, O, P, Q) 1 2023-06-30 Waiver Crew and Transit (C, D, C1/D) 1 2023-06-30 Waiver Visitors (B1/B2) 1 2023-06-30 Data Source https://travel.</description>
      <content:encoded><![CDATA[<blockquote>
<p>Selected Embassy U.S. Visa Waiting Times View</p>
</blockquote>
<h2 id="information">Information</h2>
<p><strong>Last updated on: 2023-06-29 17:07:28</strong> (Updated every 3 hours)</p>
<h3 id="beijing---p24">Beijing - P24</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>119</td>
<td>2023-10-26</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>31</td>
<td>2023-07-30</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>43</td>
<td>2023-08-11</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>52</td>
<td>2023-08-20</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h3 id="shanghai---p187">Shanghai - P187</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>128</td>
<td>2023-11-04</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>30</td>
<td>2023-07-29</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>50</td>
<td>2023-08-18</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>42</td>
<td>2023-08-10</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h3 id="guangzhou---p73">Guangzhou - P73</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>145</td>
<td>2023-11-21</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>23</td>
<td>2023-07-22</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>51</td>
<td>2023-08-19</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>42</td>
<td>2023-08-10</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h3 id="shenyang---p188">Shenyang - P188</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>75</td>
<td>2023-09-12</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>20</td>
<td>2023-07-19</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>31</td>
<td>2023-07-30</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>75</td>
<td>2023-09-12</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h3 id="hong-kong---p84">Hong Kong - P84</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>68</td>
<td>2023-09-05</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>4</td>
<td>2023-07-03</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>2</td>
<td>2023-07-01</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>2</td>
<td>2023-07-01</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h3 id="bangkok---p22">Bangkok - P22</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>240</td>
<td>2024-02-24</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>4</td>
<td>2023-07-03</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>4</td>
<td>2023-07-03</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>4</td>
<td>2023-07-03</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>28</td>
<td>2023-07-27</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>None</td>
<td>None</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>None</td>
<td>None</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>28</td>
<td>2023-07-27</td>
</tr>
</tbody>
</table>
<h3 id="tokyo---p205">Tokyo - P205</h3>
<table>
<thead>
<tr>
<th>Interview Required</th>
<th>Visa Type</th>
<th>Waiting Time (Calendar Days)</th>
<th>Estimated Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes</td>
<td>Visitors (B1/B2)</td>
<td>79</td>
<td>2023-09-16</td>
</tr>
<tr>
<td>Yes</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>3</td>
<td>2023-07-02</td>
</tr>
<tr>
<td>Yes</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>10</td>
<td>2023-07-09</td>
</tr>
<tr>
<td>Yes</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>3</td>
<td>2023-07-02</td>
</tr>
<tr>
<td>Waiver</td>
<td>Students/Exchange Visitors (F, M, J)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Petition-Based Temporary Workers (H, L, O, P, Q)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Crew and Transit (C, D, C1/D)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
<tr>
<td>Waiver</td>
<td>Visitors (B1/B2)</td>
<td>1</td>
<td>2023-06-30</td>
</tr>
</tbody>
</table>
<h2 id="data-source">Data Source</h2>
<p><a href="https://travel.state.gov">https://travel.state.gov</a></p>
<h2 id="author">Author</h2>
<p><strong>USVisa</strong> © <a href="https://github.com/missuo">Vincent Young</a>, Released under the <a href="https://github.com/missuo/USVisa/raw/main/LICENSE">MIT</a> License.<br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Bank of China Hong Kong Account Opening Guide</title>
      <link>https://missuo.me/posts/bochk-open-account/</link>
      <pubDate>Sun, 16 Apr 2023 22:18:24 +0800</pubDate>
      
      <guid>https://missuo.me/posts/bochk-open-account/</guid>
      <description>本篇文章的部分信息来自于 推友 @forecho 的 来香港办香港银行卡。感谢！
前往香港 这里我就简单说了，我这次的旅程有些复杂，HGH 飞往 ZUH。巴士到达拱北口岸，拱北口岸巴士到达深圳大学站。第二天从深圳湾口岸 B3X 前往屯门市中心（当然深圳湾口岸有巴士直接去市中心的，比如前往尖沙咀）。我是屯马线屯门站上车，美孚站换乘荃湾线到金钟站，再换乘港岛线到湾仔站。到达时间是 4 月 14 日周五下午三点左右，依次去了 forecho 推荐的 湾仔分行 和 铜锣湾分行，都被告知今天名额满了。出门刚好看到附近还有 HSBC HK，也进去问了一下，被告知如果没有预约的话无法办理，目前预约已经排到了五月份。
最后前往了我的好朋友 Sark 推荐的 广东道分行，这个分行相对来说几乎是没什么客户的。前台的中年阿姨告知我，可以开卡，但是必须要存款 100 万港币。在我的来回拉扯下，我以朋友没存款 100 万港币开户成功，说她区别对待客户。最后到 4 点 45 分左右，她让我坐着等待让经理过来。但是因为我转运中国的货物在这个时候收到短信抵达了香港自提仓库，不得不直接离开 广东道分行（自提仓库周末不开门，如果周五不取只能下周一），前往荃湾线的倒数第二站 —— 大窝口。在下班前三分钟顺利取到了货物。
办卡当天 第二天周六，我八点就出发了，这一次学聪明了，去了一家相对来说比较偏僻的，不过周六所有的分行下午 1 点下班。大概是 9 点 10 分左右到达东铁线上水站，立马赶到 上水银行服务中心（新界上水新丰路 136 号），排队的最后一个小姐姐告诉我她是最后一个开户的号码 #30。此刻银行开门只有 10 分钟左右。请注意，附近的 上水分行（新界上水新丰路 61 号）是不开户的。
于是，我就去了上水站另一头的 上水中心分行（新界上水上水中心第一层 1005-1009 号），进去之后询问是否可以开户，得到了肯定的回答，我感到很惊喜。本来不抱希望了，还想着立马赶到 广东道分行（该分行不太一样，是中银理财中心，简单说就是正常情况下只接待高端用户）去再和大堂的阿姨对线一下看看能不能给我开户。结果，这个上水中心分行比较烦的是，反复追问办卡需求，我说投资理财买保险。她会追问今天办好卡是否能立马存钱，能存多少万等等。如果当天存不了，需要你提供存款 / 余额证明等等。感觉最近某些分行因为每天大陆过去开户的客户太多，故意提高了这些门槛。
不过这些资产证明、收入证明之类的她是不用拍照留存、复印、扫描的，也不用上传系统的，只是柜员看一下而已。最后在我的瞎扯之下，她给我了一张 #20 的号。我以为应该很快就轮到我了，她让我一个小时后再来，我找了一家附近的麦当劳吃了个早饭，玩了会手机。大概 10 点半赶过去，她让我坐下来在 BOCHK App 填了一下开户基本信息。接着等着被叫号就行了。结果又等了两个多小时。而且这家分行只有一个座位，也就是意味着几乎所有人都是站着等。效率大概是一个号 30-50 分钟，非常慢。而且办理窗口只有一个。我前面有位 #17 的老哥，看样子也不会说粤语，应该也是来自内地非广东地区的。拿出了一个顺丰快递的文件信封来证明自己的住址。结果被柜员小姐姐狠狠地教育了一顿，说这个不是信件，这个是信封，无法证明你的住址。两个人嗓门很大，争执了很长一段时间，老哥说这次第五次来开户了，每次让我准备这个准备那个，结果这次带了信封还是不行。最后灰溜溜地离开了。</description>
      <content:encoded><![CDATA[<blockquote>
<p>本篇文章的部分信息来自于 推友 <a href="https://twitter.com/caizhenghai">@forecho</a> 的 <a href="https://blog.forecho.com/coming-to-hong-kong-to-get-a-hong-kong-bank-card.html">来香港办香港银行卡</a>。感谢！</p>
</blockquote>
<h2 id="前往香港">前往香港</h2>
<p>这里我就简单说了，我这次的旅程有些复杂，HGH 飞往 ZUH。巴士到达拱北口岸，拱北口岸巴士到达深圳大学站。第二天从深圳湾口岸 B3X 前往屯门市中心（当然深圳湾口岸有巴士直接去市中心的，比如前往尖沙咀）。我是屯马线屯门站上车，美孚站换乘荃湾线到金钟站，再换乘港岛线到湾仔站。到达时间是 4 月 14 日周五下午三点左右，依次去了 forecho 推荐的 <strong>湾仔分行</strong> 和 <strong>铜锣湾分行</strong>，都被告知今天名额满了。出门刚好看到附近还有 HSBC HK，也进去问了一下，被告知如果没有预约的话无法办理，目前预约已经排到了五月份。</p>
<p>最后前往了我的好朋友 <a href="https://sarkxing.design">Sark</a> 推荐的 <strong>广东道分行</strong>，这个分行相对来说几乎是没什么客户的。前台的中年阿姨告知我，可以开卡，但是必须要存款 100 万港币。在我的来回拉扯下，我以朋友没存款 100 万港币开户成功，说她区别对待客户。最后到 4 点 45 分左右，她让我坐着等待让经理过来。但是因为我转运中国的货物在这个时候收到短信抵达了香港自提仓库，不得不直接离开 <strong>广东道分行</strong>（自提仓库周末不开门，如果周五不取只能下周一），前往荃湾线的倒数第二站 —— 大窝口。在下班前三分钟顺利取到了货物。</p>
<h2 id="办卡当天">办卡当天</h2>
<p>第二天周六，我八点就出发了，这一次学聪明了，去了一家相对来说比较偏僻的，不过周六所有的分行下午 1 点下班。大概是 9 点 10 分左右到达东铁线上水站，立马赶到 <strong>上水银行服务中心</strong>（新界上水新丰路 136 号），排队的最后一个小姐姐告诉我她是最后一个开户的号码 #30。此刻银行开门只有 10 分钟左右。请注意，附近的 <strong>上水分行</strong>（新界上水新丰路 61 号）是不开户的。</p>
<p>于是，我就去了上水站另一头的 <strong>上水中心分行</strong>（新界上水上水中心第一层 1005-1009 号），进去之后询问是否可以开户，得到了肯定的回答，我感到很惊喜。本来不抱希望了，还想着立马赶到 <strong>广东道分行</strong>（该分行不太一样，是中银理财中心，简单说就是正常情况下只接待高端用户）去再和大堂的阿姨对线一下看看能不能给我开户。结果，这个上水中心分行比较烦的是，反复追问办卡需求，我说投资理财买保险。她会追问今天办好卡是否能立马存钱，能存多少万等等。如果当天存不了，需要你提供存款 / 余额证明等等。感觉最近某些分行因为每天大陆过去开户的客户太多，故意提高了这些门槛。</p>
<p>不过这些资产证明、收入证明之类的她是不用拍照留存、复印、扫描的，也不用上传系统的，只是柜员看一下而已。最后在我的瞎扯之下，她给我了一张 #20 的号。我以为应该很快就轮到我了，她让我一个小时后再来，我找了一家附近的麦当劳吃了个早饭，玩了会手机。大概 10 点半赶过去，她让我坐下来在 BOCHK App 填了一下开户基本信息。接着等着被叫号就行了。结果又等了两个多小时。而且这家分行只有一个座位，也就是意味着几乎所有人都是站着等。效率大概是一个号 30-50 分钟，非常慢。而且办理窗口只有一个。我前面有位 #17 的老哥，看样子也不会说粤语，应该也是来自内地非广东地区的。拿出了一个顺丰快递的文件信封来证明自己的住址。结果被柜员小姐姐狠狠地教育了一顿，说这个不是信件，这个是信封，无法证明你的住址。两个人嗓门很大，争执了很长一段时间，老哥说这次第五次来开户了，每次让我准备这个准备那个，结果这次带了信封还是不行。最后灰溜溜地离开了。</p>
<p>12 点 56 分轮到了我，刚坐下来就问我开户需求，我说投资理财，她说投资什么，我说可能就港股，她让我给她看 A 股的投资经验，我说我没玩过股票，大学刚毕业。她要我提供工作证明，我给她看了之前的工作邮箱截图，她说这上面没有公司名，我说邮箱后缀还不能说明公司嘛。最后看这看那看了一通之后，她还是表现地不给开。她说没有投资经验你就玩港股我可以有权利不给你开户。我问她初学者不能直接入门港股？最后她一定要我提供资产证明。我让她出示开户相关条件的文件。最后在我的一再回怼下，我跟她说这些所谓的你需要的材料你也不需要上传系统，也不需要复印，也不需要留档。为什么一定要咬着不放呢？她说开户之后必须要保证账户里面有 10000 港币，我问她不到怎么办，她说会影响功能。我问她什么功能，她回答不上，就说会影响功能。我问她有没有账户管理费之类的，她说没有。</p>
<p>最后就是开户的流程了，就是给她看身份证、港澳通行证、入境小票。接着就是设置密码，两个食指按指纹。大概 10 多分钟就搞定了。开户实际用时非常短，主要是前面那些问题非常恶心。我完成所有手续大概是下午的 1 点 34 分。</p>
<p>我是上水中心分行周六的最后一个客户，也就是意味着到下午 1 点最多只能完成 20 个号，实际上只完成了不到 10 个号，因为很多客户等不及就走掉了，就跳过了。所以这个效率真的很感人。我预计如果是周一到周五的话，也最多完成 40-50 个号。</p>
<h2 id="开户材料准备">开户材料准备</h2>
<ul>
<li>中国大陆身份证原件</li>
<li>港澳通行证</li>
<li>入境小票</li>
<li>地址证明文件（可选）：<strong>关于地址证明是如果你收实体卡片的地址不是你身份证上的地址，那么就必须要提供地址证明文件，常见的可以是大陆信用卡的账单，正常的大陆银行每个月会给你预留的邮箱发送一份 PDF 文件，如果没有可以向银行索要。你可以准备近三个月的信用卡账单，但是不能是 PDF 版本的，必须得是打印好的实体件。你可以留意一下是否包含你的名字和你的地址，一般情况下都是有的。</strong></li>
<li>手机号码：<strong>我用的是香港手机号，大陆手机号应该也可以，但是必须要在入境香港前向您的运营商开通漫游服务，否则你的手机卡会一直显示无服务的状态，无法收发短信。</strong></li>
<li>BOCHK App：<strong>强烈建议提前在手机上下载好 BOCHK App。</strong></li>
</ul>
<h2 id="一些建议">一些建议</h2>
<h3 id="分行选择">分行选择</h3>
<p>不要选择 <strong>中港城分行</strong> 这些。在尖沙咀附近那块的分行应该人不会少。可以选择 <strong>上水中心分行</strong>、<strong>粉岭中心分行</strong>、<strong>荃湾分行</strong>、<strong>屯门市广场分行</strong> 这些相对来说比较冷门一点的地方。当然如果你有兴趣的话，我倒是希望你可以去一下 <strong>广东道分行</strong>，这个号称只接待高端用户的中银理财中心能不能开户成功。</p>
<h3 id="时间段选择">时间段选择</h3>
<p>不要选择周六，除非你愿意 9 点前就赶到门口排队。周一到周五也尽量选择 10 点前到达。</p>
<h3 id="实体卡邮寄">实体卡邮寄</h3>
<p>柜员说是 30 天之内到，据说是平邮，查不到邮寄信息，只能多去信箱看看了。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Summary of University Life</title>
      <link>https://missuo.me/posts/university-life/</link>
      <pubDate>Wed, 15 Mar 2023 01:46:47 +0800</pubDate>
      
      <guid>https://missuo.me/posts/university-life/</guid>
      <description>时间过得真的很快，从小学毕业到现在快十年了，还有三个月我就要本科毕业了。最近的生活没什么压力，可以让我静下来思考很多东西。
小学的时候第一次接触电脑，在当时看来如此神奇的东西。那时候最新的操作系统还只是 Windows XP，而有些人还在用着古老的 Windows 2000/98。那时候是我第一次接触键盘，开始练习打字，实在记不起来当时的那款打字游戏叫什么，只记得只有不断的打字才能逃跑，后面有警察一直在追着你，如果被抓到了就输了。是啊，在现在看来可能有些幼稚，那时候打字比赛获得了一等奖。不过那时候没有什么机会好好玩电脑，最多用的软件可能就是 QQ 吧。直到我小学六年级毕业那个暑假，我有了很多的时间可以去琢磨，我第一次接触的编程语言是易语言，那时候流行用易语言来做钓鱼程序盗号，我也有玩过。
再后来去了初中，那是 2013 年，我开始接触 Scratch 和 VB，也是在那时认识了那个让我爱上编程的老师，幸运的是现在我还和他有保持联系。除了玩 Scratch 做一些小游戏，VB 写一些简单的程序之外，我在初三的时候开始接触服务器、域名和博客。那时候用的叫 Hostker 的虚拟主机，现在好像还活着。我买了一个域名，用一个 HTML 单文件搭建了我的第一个博客。后来也买了一个我初中全拼的域名，搭建了 Disquz 校园论坛。
再后来就是高中，但是老实说我的高中几乎没有接触电脑，都是在玩手机。那个时候王者荣耀很火，微信也慢慢开始不仅仅是支付工具。高中也有技术课，甚至高考也会考相关的知识，但是那个时候提不起什么兴趣，老师上课也只是让你记住知识点，也不会给你解释为什么。所以相对来说，有些枯燥乏味。
直到大学，我记得那是 2019 年 8 月，我收到了我的第一台 Macbook Pro，开始了我的编程生涯。从 C 语言开始，再到 Java。但是老实说除了在上那两门课之后，我再也没写过 C 和 Java。感觉 C 语言我一般不太用的到，只有在写 Arduino 的写过一些 C++。至于 Java，我似乎没有机会写，坚决不用 Java 写 Backend，我只是觉得明明有更好的选择，不想变得复杂化。我自学了 Python，JS，Shell，PHP，Golang。我会用 Python 写一些简单的爬虫，又或者是数据的处理，它真的太方便了。我也在 PyPi 贡献了一些我写的 Package。至于 JS，有时候在写 H5 的时候会偶尔用到，我也用 JS 写过项目的 Backend，称不上喜欢，但也不讨厌，自己很少用，因为我讨厌在服务器上部署 Node 环境。Shell 是我最常用的之一，我用它写了不少好用的脚本，实现了一些自动化或者是一键安装。PHP 我会用它写一些简单的 PHP，毕竟只要把它丢到网站根目录就好啦，太方便了。Golang 是我最晚接触的，大概也就是在半年前，我现在主要用它来写 Web API，Gin 和 Grom 太方便了。
好好回忆起大学的这四年，我好像几乎都在学一些我自己喜欢的东西，和 Leo 一起玩 VPS，一起探索世界互联网五花八门的路由，一起在 GitHub 做开源贡献。这确实很快乐。我们可以一起在图书馆或者工作室玩一整天关于 XrayR、Nginx、CDN，还有好多奇怪的玩法。我们也会测试学校的一些系统的 API 是否可以 SQL 注入。也许在这些时间里，让我更加热爱计算机。</description>
      <content:encoded><![CDATA[<p>时间过得真的很快，从小学毕业到现在快十年了，还有三个月我就要本科毕业了。最近的生活没什么压力，可以让我静下来思考很多东西。</p>
<p>小学的时候第一次接触电脑，在当时看来如此神奇的东西。那时候最新的操作系统还只是 Windows XP，而有些人还在用着古老的 Windows 2000/98。那时候是我第一次接触键盘，开始练习打字，实在记不起来当时的那款打字游戏叫什么，只记得只有不断的打字才能逃跑，后面有警察一直在追着你，如果被抓到了就输了。是啊，在现在看来可能有些幼稚，那时候打字比赛获得了一等奖。不过那时候没有什么机会好好玩电脑，最多用的软件可能就是 QQ 吧。直到我小学六年级毕业那个暑假，我有了很多的时间可以去琢磨，我第一次接触的编程语言是易语言，那时候流行用易语言来做钓鱼程序盗号，我也有玩过。</p>
<p>再后来去了初中，那是 2013 年，我开始接触 Scratch 和 VB，也是在那时认识了那个让我爱上编程的老师，幸运的是现在我还和他有保持联系。除了玩 Scratch 做一些小游戏，VB 写一些简单的程序之外，我在初三的时候开始接触服务器、域名和博客。那时候用的叫 Hostker 的虚拟主机，现在好像还活着。我买了一个域名，用一个 HTML 单文件搭建了我的第一个博客。后来也买了一个我初中全拼的域名，搭建了 Disquz 校园论坛。</p>
<p>再后来就是高中，但是老实说我的高中几乎没有接触电脑，都是在玩手机。那个时候王者荣耀很火，微信也慢慢开始不仅仅是支付工具。高中也有技术课，甚至高考也会考相关的知识，但是那个时候提不起什么兴趣，老师上课也只是让你记住知识点，也不会给你解释为什么。所以相对来说，有些枯燥乏味。</p>
<p>直到大学，我记得那是 2019 年 8 月，我收到了我的第一台 Macbook Pro，开始了我的编程生涯。从 C 语言开始，再到 Java。但是老实说除了在上那两门课之后，我再也没写过 C 和 Java。感觉 C 语言我一般不太用的到，只有在写 Arduino 的写过一些 C++。至于 Java，我似乎没有机会写，坚决不用 Java 写 Backend，我只是觉得明明有更好的选择，不想变得复杂化。我自学了 Python，JS，Shell，PHP，Golang。我会用 Python 写一些简单的爬虫，又或者是数据的处理，它真的太方便了。我也在 PyPi 贡献了一些我写的 Package。至于 JS，有时候在写 H5 的时候会偶尔用到，我也用 JS 写过项目的 Backend，称不上喜欢，但也不讨厌，自己很少用，因为我讨厌在服务器上部署 Node 环境。Shell 是我最常用的之一，我用它写了不少好用的脚本，实现了一些自动化或者是一键安装。PHP 我会用它写一些简单的 PHP，毕竟只要把它丢到网站根目录就好啦，太方便了。Golang 是我最晚接触的，大概也就是在半年前，我现在主要用它来写 Web API，Gin 和 Grom 太方便了。</p>
<p>好好回忆起大学的这四年，我好像几乎都在学一些我自己喜欢的东西，和 Leo 一起玩 VPS，一起探索世界互联网五花八门的路由，一起在 GitHub 做开源贡献。这确实很快乐。我们可以一起在图书馆或者工作室玩一整天关于 XrayR、Nginx、CDN，还有好多奇怪的玩法。我们也会测试学校的一些系统的 API 是否可以 SQL 注入。也许在这些时间里，让我更加热爱计算机。</p>
<h3 id="大一">大一</h3>
<p>在之前的博客里写过，在我大一的时候，其实没有花太多的时间在学习上，我遇到了一个女孩子，她是上海人，我们是因为一个朋友认识的。在和她相处的时间里，非常充实，我们除了上课的时间之外，下午下课，晚自习下课几乎都一起在学校里闲逛，甚至晚上在寝室还会一直打电话聊天。她陪我过了我的 19 岁生日，这是第一次有朋友陪我过生日。不过这样的日子持续了没多久，我主动选择了不再继续。虽然现在想起来如果当初没那样做，我们会不会有更多的故事，也许会吧，但是很多事情不能从头来过。大一下学期，疫情爆发，那一个学期开始在家上网课，我也开始了疯狂熬夜，昼夜颠倒，网课也不好好听，几乎都是在边睡觉边听课。</p>
<h3 id="大二">大二</h3>
<p>大二的时候我加入了我从大一就非常想去的社团（一个开发的社团），可惜的是错过了开学的时候的时间，中途是不能加入社团的。到大二的时候我终于等到了招募新成员，我顺利地通过了三次面试。后来才知道，社长是和我同城的。也许也有这方面的原因，我们关系越来越好，后来我也被推荐去参加各种比赛，而且还都获奖了。除了社长之外，我还认识了两位很特别的朋友。他们都是我的学长，直到现在，我们还在保持联系，他们帮了我很多忙。不出意外的话，未来我们也会一直保持联系。</p>
<p>记得很清楚，那一年的寒假，大概是在 2021 年的 2 月的时候，推出了一款 App————Clubhouse，最初的时候是邀请制的，而且每个人邀请的人数有上限，那个时候有一个北京的网友 <strong>意峰（后来从他的公众号得知，他是一个特别励志的人）</strong> 邀请了我。后来我加入了一个聊天室————哈哈。那里面的基本都是在北美，基本就是加拿大和美国，也有几个在英国。那个时候因为疫情，大家都在家里很闲，所以基本上一直都在有人在分享故事。那段时间我几乎每天有 10 多个小时在和他们互动，后来我们也有了微信群。认识了现在 PolyU HK 读硕士的 Cindy，还有在纽约工作的 Rose，还有在加拿大工作的 Kevin。我记得当时有一位小姐姐，是在 Amazon 总部工作，主要的方向是 Database，据他所说，他的家人都是做开发的，在美国留学毕业之后就去了 Amazon，当时也有听一个在美国的资深程序员分享工作的体验。慢慢地，我开始觉得我毕业之后在国内没有什么前途，我尝试了很多次向 <strong>字节跳动</strong> 投简历，从大一到大四，从来都没有获得过面试的机会，简历筛选之后直接流程中止，这让我很受挫。从那个时候开始，我开始计划去美国读 Master。然后通过 OPT 留在美国实习，再碰碰运气能不能抽中 H1B。后来在 2022 年的 4 月我入职了 PwC AC Shanghai，这是我的第一份实习，也是我第一次加入一家外企。它确实是一家非常人性化的工作，我们可以一直 Work From Home，我们不需要上下班打卡考勤，我们有一个月一次的带薪 Sick Day。只不过后来我因为我部分开发的方向和我未来想从事的方向有些偏差，我主动申请了离职。不过从这一次的实习中，让我更坚定地决定了之后一定要去外企工作。</p>
<h3 id="大三">大三</h3>
<p>大三刚开始之后，我和爸妈商量了去美国去 Master 的想法，他们同意了我的计划。在这里我要感谢我的爸妈，从我上大学之后，给我了很多了自由，我自己几乎可以做任何选择。我从那一年的 2021 年 11 月左右开始学习雅思、托福（由于一开始哪个更适合我，所以我都体验了一下）。不过那个时候非常辛苦，由于我的学校非常偏僻，又加上考虑到寒假上课，我选择的是杭州的培训机构，所以那个时候我每周五都会回家，然后周六在杭州上课，周日回上海。坚持了差不多有一两个月。后来寒假就是每天在杭州上课，一个星期 7 天只有 1 天休息。2022 年的 3 月疫情又爆发了，趁上海封城，学校封校之后我就已经回家了。我就开始了一段时间的网课。也开始寻找留学中介，一直在准备留学的事情。</p>
<h3 id="大四">大四</h3>
<p>大四的时候，几乎没去过学校，一直都在家里，筹备申请的材料，开始学习如何申请研究生。也慢慢开始准备我的毕业设计、毕业论文，还有各种各样的答辩等等。直到我写这篇文章的时候（2023年5月），我已经完成了所有的毕业材料的递交。近期正在准备美签的材料，打算在 5 月底或 6 月初前往香港办理面签。8 月就正式开始上学。</p>
<h3 id="总结和未来">总结和未来</h3>
<p>大学这四年，因为疫情的原因，其实几乎只有不到一半的时间在学校，大学生活的体验不算太好，没有谈一场恋爱。但是很开心的是，我遇到了很多真诚的人，这些人可能会是我这辈子最好的朋友。至于未来，接下里的目标是完成 Master 的课程顺利毕业，然后去 Apple、Google 或者 Amazon 实习，有机会的话希望可以转正。我正在朝着我的梦想一步一步往前，希望一切顺利。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Git Enable Commit Signing</title>
      <link>https://missuo.me/posts/git-commit-enable-signing/</link>
      <pubDate>Tue, 07 Mar 2023 04:12:33 +0800</pubDate>
      
      <guid>https://missuo.me/posts/git-commit-enable-signing/</guid>
      <description>Generate GPG key $ gpg --full-generate-key Choose RSA and RS and 4096. Please make sure the email is the same as your Git.
Export GPG Key $ gpg --list-secret-keys --keyid-format LONG gpg: checking the trustdb gpg: marginals needed: 3 completes needed: 1 trust model: pgp gpg: depth: 0 valid: 2 signed: 0 trust: 0-, 0q, 0n, 0m, 0f, 2u /Users/vincent/.gnupg/pubring.kbx --------------------------------- sec rsa3072/A035553B8A2F45A2 2022-09-10 [SC] 21B1DADC35757E3C1680ABF0A035553B8A2F45A2 uid [ultimate] Vincent Young &amp;lt;i@yyt.</description>
      <content:encoded><![CDATA[<h3 id="generate-gpg-key">Generate GPG key</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ gpg --full-generate-key
</span></span></code></pre></div><p>Choose <code>RSA and RS</code> and <code>4096</code>. Please make sure the email is the same as your Git.</p>
<h3 id="export-gpg-key">Export GPG Key</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ gpg --list-secret-keys --keyid-format LONG
</span></span><span class="line"><span class="cl">gpg: checking the trustdb
</span></span><span class="line"><span class="cl">gpg: marginals needed: <span class="m">3</span>  completes needed: <span class="m">1</span>  trust model: pgp
</span></span><span class="line"><span class="cl">gpg: depth: <span class="m">0</span>  valid:   <span class="m">2</span>  signed:   <span class="m">0</span>  trust: 0-, 0q, 0n, 0m, 0f, 2u
</span></span><span class="line"><span class="cl">/Users/vincent/.gnupg/pubring.kbx
</span></span><span class="line"><span class="cl">---------------------------------
</span></span><span class="line"><span class="cl">sec   rsa3072/A035553B8A2F45A2 2022-09-10 <span class="o">[</span>SC<span class="o">]</span>
</span></span><span class="line"><span class="cl">      21B1DADC35757E3C1680ABF0A035553B8A2F45A2
</span></span><span class="line"><span class="cl">uid                 <span class="o">[</span>ultimate<span class="o">]</span> Vincent Young &lt;i@yyt.moe&gt;
</span></span><span class="line"><span class="cl">ssb   rsa3072/FDE12D34BDBDE80E 2022-09-10 <span class="o">[</span>E<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sec   rsa4096/84A0830C90354A56 2023-03-06 <span class="o">[</span>SC<span class="o">]</span>
</span></span><span class="line"><span class="cl">      7BF3AA3C919F20EA1A36CCD984A0830C90354A56
</span></span><span class="line"><span class="cl">uid                 <span class="o">[</span>ultimate<span class="o">]</span> Vincent Young <span class="o">(</span>Git<span class="o">)</span> &lt;missuo@pm.me&gt;
</span></span><span class="line"><span class="cl">ssb   rsa4096/D611020AF7422B8D 2023-03-06 <span class="o">[</span>E<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ gpg --armor --export 84A0830C90354A56
</span></span><span class="line"><span class="cl">-----BEGIN PGP PUBLIC KEY BLOCK-----
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">-----END PGP PUBLIC KEY BLOCK-----
</span></span></code></pre></div><h3 id="fill-in-your-github">Fill in your GitHub</h3>
<p><a href="https://github.com/settings/gpg/new">Add new GPG Key</a></p>
<h3 id="configure-git">Configure Git</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git config --global user.signingkey 84A0830C90354A56
</span></span><span class="line"><span class="cl">$ git config --global commit.gpgsign <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Avoid entering your password every time</span>
</span></span><span class="line"><span class="cl">brew install gpg-suite --cask
</span></span></code></pre></div><h3 id="configure-vscode">Configure VSCode</h3>
<p>Check the box in the settings <code>Git: Enable Commit Signing</code>.</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20230307sUo8Vy.png" alt="20230307sUo8Vy"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Automatically update Homebrew versions using Action</title>
      <link>https://missuo.me/posts/brew-version-update/</link>
      <pubDate>Sat, 04 Mar 2023 02:42:51 +0800</pubDate>
      
      <guid>https://missuo.me/posts/brew-version-update/</guid>
      <description>Homebrew 可以说是 Mac 上必装的命令行工具之一。它真的太好用太方便的。但是你在维护一个 Homebrew Tap 的时候，如果你的程序有新的 Release 发布时，需要在对应的 .rb 文件中修改版本号以及对应的二进制文件的 sha256，这显然会有些繁琐，或者说不太优雅。
我习惯使用 GitHub Action 去交叉编译各种 Release，重要的是 Action 可以帮助我自动发布。其实在每一次 Action 发布之后，可以添加一个 Step，去更新 Casks 或者 Formula 的 .rb。为了方便，你可以创建一个 .sh 文件来做这件事。
部分代码（以 DeepL X 为例） 更新版本号 Get the latest version of Deeplx last_version=$(curl -Ls &amp;#34;https://api.github.com/repos/OwO-Network/DeepLX/releases/latest&amp;#34; | grep &amp;#39;&amp;#34;tag_name&amp;#34;:&amp;#39; | sed -E &amp;#39;s/.*&amp;#34;([^&amp;#34;]+)&amp;#34;.*/\1/&amp;#39; | sed &amp;#39;s/v//g&amp;#39;) # Update the version number in the formula sed -i &amp;#34;s/version \&amp;#34;.*/version \&amp;#34;${last_version}\&amp;#34;/g&amp;#34; Formula/deeplx.rb 更新 sha256 # Download the new binaries wget -O deeplx_darwin_amd64 https://github.</description>
      <content:encoded><![CDATA[<p>Homebrew 可以说是 Mac 上必装的命令行工具之一。它真的太好用太方便的。但是你在维护一个 Homebrew Tap 的时候，如果你的程序有新的 Release 发布时，需要在对应的 <code>.rb</code> 文件中修改版本号以及对应的二进制文件的 sha256，这显然会有些繁琐，或者说不太优雅。</p>
<p>我习惯使用 GitHub Action 去交叉编译各种 Release，重要的是 Action 可以帮助我自动发布。其实在每一次 Action 发布之后，可以添加一个 Step，去更新 Casks 或者 Formula 的 <code>.rb</code>。为了方便，你可以创建一个 <code>.sh</code> 文件来做这件事。</p>
<h2 id="部分代码以-deepl-x-为例">部分代码（以 DeepL X 为例）</h2>
<h4 id="更新版本号">更新版本号</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">Get the latest version of Deeplx
</span></span><span class="line"><span class="cl"><span class="nv">last_version</span><span class="o">=</span><span class="k">$(</span>curl -Ls <span class="s2">&#34;https://api.github.com/repos/OwO-Network/DeepLX/releases/latest&#34;</span> <span class="p">|</span> grep <span class="s1">&#39;&#34;tag_name&#34;:&#39;</span> <span class="p">|</span> sed -E <span class="s1">&#39;s/.*&#34;([^&#34;]+)&#34;.*/\1/&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/v//g&#39;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Update the version number in the formula</span>
</span></span><span class="line"><span class="cl">sed -i <span class="s2">&#34;s/version \&#34;.*/version \&#34;</span><span class="si">${</span><span class="nv">last_version</span><span class="si">}</span><span class="s2">\&#34;/g&#34;</span> Formula/deeplx.rb
</span></span></code></pre></div><h4 id="更新-sha256">更新 sha256</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"> <span class="c1"># Download the new binaries</span>
</span></span><span class="line"><span class="cl">wget -O deeplx_darwin_amd64 https://github.com/OwO-Network/DeepLX/releases/download/v<span class="si">${</span><span class="nv">last_version</span><span class="si">}</span>/deeplx_darwin_amd64
</span></span><span class="line"><span class="cl">wget -O deeplx_darwin_arm64 https://github.com/OwO-Network/DeepLX/releases/download/v<span class="si">${</span><span class="nv">last_version</span><span class="si">}</span>/deeplx_darwin_arm64
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Calculate the SHA256 hash for the new binaries</span>
</span></span><span class="line"><span class="cl"><span class="nv">amd64_sha256</span><span class="o">=</span><span class="k">$(</span>sha256sum deeplx_darwin_amd64 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f 1<span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">arm64_sha256</span><span class="o">=</span><span class="k">$(</span>sha256sum deeplx_darwin_arm64 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f 1<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Update the SHA256 hashes in the formula</span>
</span></span><span class="line"><span class="cl">sed -i <span class="s2">&#34;8s/.*/    sha256 \&#34;</span><span class="si">${</span><span class="nv">arm64_sha256</span><span class="si">}</span><span class="s2">\&#34;/&#34;</span> Formula/deeplx.rb
</span></span><span class="line"><span class="cl">sed -i <span class="s2">&#34;11s/.*/    sha256 \&#34;</span><span class="si">${</span><span class="nv">amd64_sha256</span><span class="si">}</span><span class="s2">\&#34;/&#34;</span> Formula/deeplx.rb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Delete the new binaries</span>
</span></span><span class="line"><span class="cl">rm -f deeplx_darwin*
</span></span></code></pre></div><p>在Action发布到Release之后，触发这个shell文件就可以啦。这样的话，当你有新的Release发布的时候，无需去维护Homebrew Tap。用户可以直接获取到最新的版本。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unlock ChatGPT with Cloudflare WARP</title>
      <link>https://missuo.me/posts/cloudflare-warp-chatgpt/</link>
      <pubDate>Sat, 11 Feb 2023 13:33:35 +0800</pubDate>
      
      <guid>https://missuo.me/posts/cloudflare-warp-chatgpt/</guid>
      <description>原理分析 Cloudflare WARP 拥有很多 IP，而 ChatGPT 的 CDN 又是 Cloudflare 提供的，也就是说，能不能访问完全取决于 Cloudflare。因此使用 Cloudflare 自己的 IP 大概率不会被 Ban。除了 WARP 之外，iCloud Private Relay 也是 Cloudflare 的 IP 哦。
具体步骤 本文的方案仅改变 IPv6 出口 IP，不会改变 IPv4 出口 IP，更不会改变路由。
准备一台 VPS，需要是 OpenGPT 支持的 161 个国家之一。因为你的网络在哪里，WARP 就会使用你所在地的 IP。比如香港就不行。 Supported countries and territories
使用以下命令安装 WARP。 bash &amp;lt;(curl -fsSL git.io/warp.sh) proxy 配置 XrayR/V2Ray 的出站规则和路由。（以 XrayR 为例，XrayR/V2Ray 的使用本文略过） # custom_outbound.json { &amp;#34;tag&amp;#34;: &amp;#34;socks5-warp&amp;#34;, &amp;#34;protocol&amp;#34;: &amp;#34;socks&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;servers&amp;#34;: [{ &amp;#34;address&amp;#34;: &amp;#34;127.</description>
      <content:encoded><![CDATA[<h2 id="原理分析">原理分析</h2>
<p><strong>Cloudflare WARP</strong> 拥有很多 IP，而 ChatGPT 的 CDN 又是 Cloudflare 提供的，也就是说，能不能访问完全取决于 Cloudflare。因此使用 Cloudflare 自己的 IP 大概率不会被 Ban。除了 WARP 之外，iCloud Private Relay 也是 Cloudflare 的 IP 哦。</p>
<h2 id="具体步骤">具体步骤</h2>
<p><strong>本文的方案仅改变 IPv6 出口 IP，不会改变 IPv4 出口 IP，更不会改变路由。</strong></p>
<ol>
<li>准备一台 VPS，需要是 OpenGPT 支持的 161 个国家之一。因为你的网络在哪里，WARP 就会使用你所在地的 IP。比如香港就不行。</li>
</ol>
<p><a href="https://platform.openai.com/docs/supported-countries">Supported countries and territories</a></p>
<ol start="2">
<li>使用以下命令安装 WARP。</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -fsSL git.io/warp.sh) proxy
</span></span></code></pre></div><ol start="3">
<li>配置 XrayR/V2Ray 的出站规则和路由。（以 XrayR 为例，XrayR/V2Ray 的使用本文略过）</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">#</span> <span class="err">custom_outbound.json</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;tag&#34;</span><span class="p">:</span> <span class="s2">&#34;socks5-warp&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;protocol&#34;</span><span class="p">:</span> <span class="s2">&#34;socks&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;servers&#34;</span><span class="p">:</span> <span class="p">[{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;address&#34;</span><span class="p">:</span> <span class="s2">&#34;127.0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;port&#34;</span><span class="p">:</span> <span class="mi">40000</span>
</span></span><span class="line"><span class="cl">        <span class="p">}]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">#</span> <span class="err">route.json</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;field&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;outboundTag&#34;</span><span class="p">:</span> <span class="s2">&#34;socks5-warp&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ip&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;::/0&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>简单解释一下，出站规则是指出站走 40000 端口的 SOCKS 代理。路由规则是指所有 IPv6 出站均走 SOCKS 代理。</p>
<ol start="4">
<li>如果你只是想让 OpenAI 走 WARP 的 IPv6，可以这样写。</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">#</span> <span class="err">route.json</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;field&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;outboundTag&#34;</span><span class="p">:</span> <span class="s2">&#34;socks5-warp&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;domain&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;openai.com&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>I subscribed to ChatGPT Plus</title>
      <link>https://missuo.me/posts/chatgpt-plus/</link>
      <pubDate>Sat, 11 Feb 2023 07:04:11 +0800</pubDate>
      
      <guid>https://missuo.me/posts/chatgpt-plus/</guid>
      <description>ChatGPT Plus 功能 Available even when demand is high 即使在需求大的时候也可以使用 Faster response speed 更快的反应速度 Priority access to new features 优先获得新功能 订阅 正常方式 填写 表格 并等待官方给你发送电子邮件获取资格。
漏洞 在中国时间的 2 月 10 日下午，看到群里有很多朋友说出现了 Upgrade Plan 的按钮，我立即登陆了我的帐号发现确实也有了，但是因为中国信用卡无法支付，导致开通失败。2 月 11 日我再次登录的时候发现已经消失了这个按钮。
我翻看了我的 Chrome 历史记录，找到了一个 pay.openai.com 的链接，点进去发现还是熟悉的 Stripe 的界面。但是奇怪的事情是 我无法填写地址信息，但是没有地址信息无法提交。无奈之下，当然是按下 F12，找到填写地址的每一个 input 标签，把 disable 全部改为 enable，顺利地填写了信息。在我的好朋友 Ming 的帮助下，用他的美国卡支付，没有显示成功的界面，一直显示处理中，但是收到了订阅成功的邮件。回到 chat.openai.com 发现已经开通好了。
体验 Plus 版本有两个模式，分别是 Default 和 Turbo。
根据描述和实际体验，Turbo 模式显然要快很多，回复速度比免费版有了很大的提升，很少有遇到崩溃的情况。当然英文提问会比中文回复速度快很多。
IP 的问题 无法访问 ChatGPT 封锁了很多机房的 IP，因为 ChatGPT 使用的是 Cloudflare 的服务，我猜测是使用了 Country 匹配，也就是说只有在指定国家可用，目前是 161 个国家。除此之外，应该还加入了 Threat Score 和 Known Bots 的判断。意味着你的 IP 要想顺利访问，需要具备两个条件，IP 属于来自 161 个国家之一，并且你的 IP 危险分数足够低。</description>
      <content:encoded><![CDATA[<h2 id="chatgpt-plus-功能">ChatGPT Plus 功能</h2>
<ul>
<li>Available even when demand is high 即使在需求大的时候也可以使用</li>
<li>Faster response speed 更快的反应速度</li>
<li>Priority access to new features 优先获得新功能</li>
</ul>
<h2 id="订阅">订阅</h2>
<h3 id="正常方式">正常方式</h3>
<p>填写 <a href="https://docs.google.com/forms/d/e/1FAIpQLScee6ST3o-kZDjlw1ROfUNyjuRBwGdcoewxjCULNejbP5hdzQ/viewform">表格</a> 并等待官方给你发送电子邮件获取资格。</p>
<h3 id="漏洞">漏洞</h3>
<p>在中国时间的 2 月 10 日下午，看到群里有很多朋友说出现了 <strong>Upgrade Plan</strong> 的按钮，我立即登陆了我的帐号发现确实也有了，但是因为中国信用卡无法支付，导致开通失败。2 月 11 日我再次登录的时候发现已经消失了这个按钮。</p>
<p>我翻看了我的 <strong>Chrome 历史记录</strong>，找到了一个 <a href="https://pay.openai.com">pay.openai.com</a> 的链接，点进去发现还是熟悉的 <strong>Stripe</strong> 的界面。但是奇怪的事情是 <strong>我无法填写地址信息</strong>，但是没有地址信息无法提交。无奈之下，当然是按下 F12，找到填写地址的每一个 <strong>input</strong> 标签，把 <strong>disable</strong> 全部改为 <strong>enable</strong>，顺利地填写了信息。在我的好朋友 <strong>Ming</strong> 的帮助下，用他的美国卡支付，没有显示成功的界面，一直显示处理中，但是收到了订阅成功的邮件。回到 <a href="https://chat.openai.com">chat.openai.com</a> 发现已经开通好了。</p>
<h2 id="体验">体验</h2>
<p>Plus 版本有两个模式，分别是 <strong>Default</strong> 和 <strong>Turbo</strong>。<br>
<img loading="lazy" src="https://static.nisekoo.com/blog/202302114W6T0j.png" alt="202302114W6T0j"  />
</p>
<p>根据描述和实际体验，<strong>Turbo</strong> 模式显然要快很多，回复速度比免费版有了很大的提升，很少有遇到崩溃的情况。当然英文提问会比中文回复速度快很多。</p>
<h2 id="ip-的问题">IP 的问题</h2>
<h3 id="无法访问">无法访问</h3>
<p>ChatGPT 封锁了很多机房的 IP，因为 ChatGPT 使用的是 <a href="https://cloudflare.com">Cloudflare</a> 的服务，我猜测是使用了 <strong>Country</strong> 匹配，也就是说只有在指定国家可用，目前是 161 个国家。除此之外，应该还加入了 <strong>Threat Score</strong> 和 <strong>Known Bots</strong> 的判断。意味着你的 IP 要想顺利访问，需要具备两个条件，IP 属于来自 161 个国家之一，并且你的 IP 危险分数足够低。</p>
<h3 id="我的方案">我的方案</h3>
<p>在 2022 年 3 月 28 日，我在 RIPE 申请到了 ASN，也就意味着我可以持有 IPv4 和 IPv6，我目前持有两个/48 的 IPv6。我目前的 IPv6 分别来自 <strong>台湾</strong> 和 <strong>英国</strong>，都在 161 个国家之内，危险分数都是 0。我建立了 BGP Session，完全可以使用自己的 IP 来访问 OpenAI 的服务。<br>
<img loading="lazy" src="https://static.nisekoo.com/blog/20230211Dlnlje.png" alt="20230211Dlnlje"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Prefixes:
</span></span><span class="line"><span class="cl">2401:95c0:f001::/48
</span></span><span class="line"><span class="cl">2a0f:9400:6907::/48
</span></span></code></pre></div><h3 id="检测是否可用">检测是否可用</h3>
<p>为了验证当前IP是否能够正常使用OpenAI服务，我用Shell写了一个检测脚本——<a href="https://github.com/missuo/OpenAI-Checker">OpenAI-Checker</a>。使用方法也非常简单，仅需要在任何Linux/macOS上执行以下命令。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -Ls https://cpp.li/openai<span class="o">)</span>
</span></span></code></pre></div><p>检测结果示例：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; bash &lt;(curl -Ls https://cpp.li/openai)
</span></span><span class="line"><span class="cl">OpenAI Access Checker. Made by Vincent
</span></span><span class="line"><span class="cl">https://github.com/missuo/OpenAI-Checker
</span></span><span class="line"><span class="cl">-------------------------------------
</span></span><span class="line"><span class="cl">[IPv4]
</span></span><span class="line"><span class="cl">Your IPv4: 205.185.1.1 - FranTech Solutions
</span></span><span class="line"><span class="cl">Your IP supports access to OpenAI. Region: US
</span></span><span class="line"><span class="cl">-------------------------------------
</span></span><span class="line"><span class="cl">[IPv6]
</span></span><span class="line"><span class="cl">Your IPv6: 2401: 95c0: f001:: 1 - Vincent Yang
</span></span><span class="line"><span class="cl">Your IP supports access to OpenAI. Region: TW
</span></span><span class="line"><span class="cl">-------------------------------------
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>ChatGPT Plus的订阅价格为20美元/月，其实我觉得还可以，毕竟它能让你的体验更好，它能帮助你做很多事。只是中国大陆用户需要解决网络、绑定手机和支付问题，这一下子提高了使用门槛。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Create query API for 500 million Weibo data</title>
      <link>https://missuo.me/posts/weibo-data-searcher/</link>
      <pubDate>Thu, 09 Feb 2023 03:32:33 +0800</pubDate>
      
      <guid>https://missuo.me/posts/weibo-data-searcher/</guid>
      <description>Preparation Clickhouse Database Linux/Windows/macOS Server Data Import First you need to deploy Clickhouse and finish creating a brand new database. Create two tables. Table For Query Weibo Uid.
CREATE TABLE wb_uid( uid String, mobile String )ENGINE = MergeTree() ORDER BY (uid) PRIMARY KEY (uid); Table For Query Mobile Phone Number
CREATE TABLE wb_mobile( uid String, mobile String )ENGINE = MergeTree() ORDER BY (mobile) PRIMARY KEY (mobile); Query Data WeiboSearcher is an API program written in Golang.</description>
      <content:encoded><![CDATA[<h2 id="preparation">Preparation</h2>
<ul>
<li>Clickhouse Database</li>
<li>Linux/Windows/macOS Server</li>
</ul>
<h2 id="data-import">Data Import</h2>
<ol>
<li>First you need to deploy Clickhouse and finish creating a brand new database.</li>
<li>Create two tables.</li>
</ol>
<p>Table For Query Weibo Uid.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">wb_uid</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">uid</span><span class="w"> </span><span class="n">String</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mobile</span><span class="w"> </span><span class="n">String</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="n">ENGINE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MergeTree</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w">  </span><span class="p">(</span><span class="n">uid</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="n">uid</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>Table For Query Mobile Phone Number</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">wb_mobile</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">uid</span><span class="w"> </span><span class="n">String</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mobile</span><span class="w"> </span><span class="n">String</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="n">ENGINE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MergeTree</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w">  </span><span class="p">(</span><span class="n">mobile</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="n">mobile</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><h2 id="query-data">Query Data</h2>
<p><a href="https://github.com/OwO-Network/WeiboSearcher">WeiboSearcher</a> is an API program written in Golang. But he is not out of the box, because there is no configuration file that allows you to modify the database information, which will be supported in the future. But you can modify some of the configuration code and recompile it yourself.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">./weibo_linux_amd64
</span></span></code></pre></div><h2 id="qa">Q&amp;A</h2>
<ul>
<li>Why not use a MySQL database?</li>
</ul>
<blockquote>
<p>Because even after building indexes, sorting, and splitting tables, MySQL data is much worse than Clickhouse, I gave up on optimizing MySQL query speed.</p>
</blockquote>
<ul>
<li>Why use two tables?</li>
</ul>
<blockquote>
<p>Because two tables are used and the indexes are different fields. It can greatly speed up the query efficiency.</p>
</blockquote>
<ul>
<li>Where is the data downloaded from?</li>
</ul>
<blockquote>
<p>We do not provide any data, and we do not keep any data. Please find your own data sources.</p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Remove National Anti-Fraud Center on MIUI</title>
      <link>https://missuo.me/posts/fuck-miui/</link>
      <pubDate>Sat, 04 Feb 2023 00:01:04 +0000</pubDate>
      
      <guid>https://missuo.me/posts/fuck-miui/</guid>
      <description>Uninstall Directly(Recommended) ROOT is not required, but it may be reinstalled after updating the system.
Connect your phone to your computer and turn on ADB debugging.
Install ADB CLI tools on your computer.
# macOS brew install android-platform-tools or https://dl.google.com/android/repository/platform-tools-latest-darwin.zip # Windows https://dl.google.com/android/repository/platform-tools-latest-windows.zip Execute the following code. adb shell pm list package | grep com.miui.guardprovider adb uninstall --user 0 com.miui.guardprovider adb shell pm list users # if you find other users on your phone, please execute the following command.</description>
      <content:encoded><![CDATA[<h2 id="uninstall-directlyrecommended">Uninstall Directly(Recommended)</h2>
<blockquote>
<p>ROOT is not required, but it may be reinstalled after updating the system.</p>
</blockquote>
<ol>
<li>
<p>Connect your phone to your computer and turn on <code>ADB</code> debugging.</p>
</li>
<li>
<p>Install <code>ADB</code> CLI tools on your computer.</p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># macOS
</span></span><span class="line"><span class="cl">brew install android-platform-tools
</span></span><span class="line"><span class="cl">or
</span></span><span class="line"><span class="cl">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Windows
</span></span><span class="line"><span class="cl">https://dl.google.com/android/repository/platform-tools-latest-windows.zip
</span></span></code></pre></div><ol start="3">
<li>Execute the following code.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">adb</span> <span class="nx">shell</span> <span class="nx">pm</span> <span class="nx">list</span> <span class="kn">package</span> <span class="p">|</span> <span class="nx">grep</span> <span class="nx">com</span><span class="p">.</span><span class="nx">miui</span><span class="p">.</span><span class="nx">guardprovider</span>
</span></span><span class="line"><span class="cl"><span class="nx">adb</span> <span class="nx">uninstall</span> <span class="o">--</span><span class="nx">user</span> <span class="mi">0</span> <span class="nx">com</span><span class="p">.</span><span class="nx">miui</span><span class="p">.</span><span class="nx">guardprovider</span>
</span></span><span class="line"><span class="cl"><span class="nx">adb</span> <span class="nx">shell</span> <span class="nx">pm</span> <span class="nx">list</span> <span class="nx">users</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">#</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">find</span> <span class="nx">other</span> <span class="nx">users</span> <span class="nx">on</span> <span class="nx">your</span> <span class="nx">phone</span><span class="p">,</span> <span class="nx">please</span> <span class="nx">execute</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">command</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="nx">adb</span> <span class="nx">uninstall</span> <span class="o">--</span><span class="nx">user</span> <span class="p">[</span><span class="nx">USERID</span><span class="p">]</span> <span class="nx">com</span><span class="p">.</span><span class="nx">miui</span><span class="p">.</span><span class="nx">guardprovider</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://static.nisekoo.com/blog/20230204UJZpcM.png" alt="20230204UJZpcM"  />
</p>
<h2 id="install-magisk-module">Install Magisk Module</h2>
<blockquote>
<p>ROOT is required, but updating the system works just as well.</p>
</blockquote>
<p><a href="https://github.com/MinaMichita/AntiAntiDefraud/">MinaMichita/AntiAntiDefraud/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Bandwagonhost $99 THE PLAN</title>
      <link>https://missuo.me/posts/bandwagonhost/</link>
      <pubDate>Fri, 13 Jan 2023 02:21:54 +0800</pubDate>
      
      <guid>https://missuo.me/posts/bandwagonhost/</guid>
      <description>CPU: 2 cores Memory: 2 GB Hard drive: 40 GB SSD Traffic: 1000 GB/month Bandwidth: up to 2.5 Gbps Server room: HK85/Japan Softbank/DC6/DC9, etc. Migration: 17 server rooms at will Price: $29/quarter, $99/year Link: https://bandwagonhost.com/aff.php?aff=69823&amp;amp;pid=129
Promo Code: BWHNCXNVXV</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">CPU: 2 cores
</span></span><span class="line"><span class="cl">Memory: 2 GB
</span></span><span class="line"><span class="cl">Hard drive: 40 GB SSD
</span></span><span class="line"><span class="cl">Traffic: 1000 GB/month
</span></span><span class="line"><span class="cl">Bandwidth: up to 2.5 Gbps
</span></span><span class="line"><span class="cl">Server room: HK85/Japan Softbank/DC6/DC9, etc.
</span></span><span class="line"><span class="cl">Migration: 17 server rooms at will
</span></span><span class="line"><span class="cl">Price: $29/quarter, $99/year
</span></span></code></pre></div><p>Link: <a href="https://bandwagonhost.com/aff.php?aff=69823&amp;pid=129">https://bandwagonhost.com/aff.php?aff=69823&amp;pid=129</a></p>
<p>Promo Code: <code>BWHNCXNVXV</code></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Migrate from Gridea to Hexo</title>
      <link>https://missuo.me/posts/migrate-from-gridea-to-hexo/</link>
      <pubDate>Thu, 05 Jan 2023 04:47:07 +0000</pubDate>
      
      <guid>https://missuo.me/posts/migrate-from-gridea-to-hexo/</guid>
      <description>由于 Gridea 的作者几乎已经放弃了 Gridea客户端 的更新和维护，直到现在还没有支持 Apple ARM。作者主要把重心放在了收费的网页版上。恰好我在 Gridea 上使用的主题，也有移植到 Hexo 上，于是就决定迁移。
迁移过程 部署新博客样式 因为是同一个主题，我用的是 Pure，之前改过一遍这个主题，所以现在第二次改还是比较熟悉的。主要是去除掉一些本身我觉得不需要的功能，把显示语言改成英文，最后再加上一些我比较喜欢的内容。总共耗时了 1-2 小时。Hexo 的好处也相当明显，之后写博客，只需要使用像 Obsidian、VSCode 或者 MWeb 这类 Markdown 编辑器即可，非常方便，不需要依赖特定的博客系统客户端。除此之外，Hexo 会生成纯静态的文件，可以部署到 GitHub Pages 上，或者你可以直接上传到网站的目录。
迁移文章 复制所有的 .md 文件放入新博客的 _posts 下即可。唯一需要变动的，可能是 Post 的几个属性。
评论系统 老的博客，Gridea 使用的是 Disqus，虽然 Hexo 也一样支持，但是似乎 Disqus 在中国大陆会出现加载失败的情况，所以这次索性放弃了之前的所有评论，采用了 GitHub 的 Gitalk。对于开发者来说，体验还是非常棒的。</description>
      <content:encoded><![CDATA[<blockquote>
<p>由于 Gridea 的作者几乎已经放弃了 <code>Gridea客户端</code> 的更新和维护，直到现在还没有支持 Apple ARM。作者主要把重心放在了收费的网页版上。恰好我在 Gridea 上使用的主题，也有移植到 Hexo 上，于是就决定迁移。</p>
</blockquote>
<h2 id="迁移过程">迁移过程</h2>
<h3 id="部署新博客样式">部署新博客样式</h3>
<p>因为是同一个主题，我用的是 <a href="https://github.com/renbaoshuo/hexo-theme-pure">Pure</a>，之前改过一遍这个主题，所以现在第二次改还是比较熟悉的。主要是去除掉一些本身我觉得不需要的功能，把显示语言改成英文，最后再加上一些我比较喜欢的内容。总共耗时了 1-2 小时。Hexo 的好处也相当明显，之后写博客，只需要使用像 Obsidian、VSCode 或者 MWeb 这类 Markdown 编辑器即可，非常方便，不需要依赖特定的博客系统客户端。除此之外，Hexo 会生成纯静态的文件，可以部署到 GitHub Pages 上，或者你可以直接上传到网站的目录。</p>
<h3 id="迁移文章">迁移文章</h3>
<p>复制所有的 <code>.md</code> 文件放入新博客的 <code>_posts</code> 下即可。唯一需要变动的，可能是 <code>Post</code> 的几个属性。</p>
<h3 id="评论系统">评论系统</h3>
<p>老的博客，Gridea 使用的是 <code>Disqus</code>，虽然 Hexo 也一样支持，但是似乎 <code>Disqus</code> 在中国大陆会出现加载失败的情况，所以这次索性放弃了之前的所有评论，采用了 GitHub 的 <code>Gitalk</code>。对于开发者来说，体验还是非常棒的。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>2022 year-end summary</title>
      <link>https://missuo.me/posts/summary-2022/</link>
      <pubDate>Sun, 01 Jan 2023 00:16:35 +0000</pubDate>
      
      <guid>https://missuo.me/posts/summary-2022/</guid>
      <description>根据相关法律法规，我的 2022 总结和 2023 展望不予显示。</description>
      <content:encoded><![CDATA[<p>根据相关法律法规，我的 2022 总结和 2023 展望不予显示。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unblock the Sina Weibo account</title>
      <link>https://missuo.me/posts/unblock-weibo/</link>
      <pubDate>Sat, 31 Dec 2022 00:09:40 +0000</pubDate>
      
      <guid>https://missuo.me/posts/unblock-weibo/</guid>
      <description>被封 2022 年 10 月 14 日，我和往常一样傍晚出门的时候打开微博刷，因为收到了转运公司给的邮件。告知，我购买的 Yubikey 硬件密钥无法转运。当时非常烦躁，于是想发个微博吐槽一下。结果出现了弹窗，告知我的微博异常。
我的微博没发过政治相关的任何东西，我想发的 Yubikey 那条微博中仅仅包含了 在中国大陆真难啊 字样。平时也不爱评论政治相关的内容。也不会和别人因为意见不同而吵架。所以我自己的微博被封，其实还是挺震惊的。我有很多社交平台的帐号，这还是头一回被封。
被封之后，我不能发微博，不能评论别人，不能转发别人的微博，不能给他人发私信，当然其他人甚至都看不到我。我也无法取关或者关注任何人。
解封 在被限制功能的弹窗里面，会有个“申请解除”的按钮，进入之后需要你填写一个“原因“。据网友反馈，这个你反馈几十次都没人会理你。虽然我还是反馈了，但是完全不抱希望。
我又在网上搜索了一些别的方法，看了一圈，比较靠谱的还是使用 互联网信息服务投诉平台。我立即提交了我的情况，并且说明我在微博平台有很高的信用分，是微博的 VIP7 用户，是微博的十年用户，也是微博的认证用户。
过了大概一周左右的时间，我收到了微博给我的一条短信。
我大概看了一下，需要我上传我的短信截图、入网证明、手持身份证、保证书等等材料，等待审核。一开始为了省事，于是就没有上传保证书，我写的理由是“可能账号被盗”。微博给我的反馈是检测到帐号一切正常，没有被盗的情况。意思是微博认为违规行为一定是我本人所为。
我去打印了保证书，又一次提交了。微博反馈我的手持身份证照片不清晰，看不清证件信息。
我重新拍了手持身份证照片，再次提交。这一次的反馈是我在保证书中违规原因写的不正确。
但是问题是我真的不知道是因为哪条微博导致的违规。我就什么都没改重新提交了一次。
这一次微博反馈说，我在 2022 年 10 月 8 日发布了违规评论。（但是我至今都不知道我发了什么）
OK，既然他们这样说，我就按照客服给我的反馈，我写违规原因“由于 2022 年 10 月 8 日 21: 54: 27 发布了违规评论违反 xxx 规定”。还是被拒绝了，让我正确手写保证书。
我又去打印了一张空白的保证书，所有内容全部手写。又一次提交了，这一次微博反馈给我，让我正确填写违规原因。但是我真的不知道该怎么写了。
我实在无奈，又一次去 互联网信息服务投诉平台 反馈了。幸运的是，这一次微博给我的短信和上一次不一样。
这一次的提交入口也和之前不一样，之前是“异常帐号处理”，这一次是“刷单兼职”。我似乎是明白了，是因为我在 10 月 8 日晚上发布的言论涉嫌“兼职刷单“，虽然我不知道我发了什么，但是我就照着这个理由填写。又一次提交了。
很快收到了这个短信，大概意思是材料算是齐全了。让我继续等。都过去了两个半月了，我其实也一点都不着急了。
在 2022 年的倒数第二天，我又收到了微博给我的短信，我的帐号解封了。
总结 我一共消耗了两个多月的时间。其中提交了有差不多 10 次材料审核。整个过程还是非常地曲折，而且其中最恶心的是，微博没有人工客服。你根本没办法知道你是因为什么被封，但是他必须要你填写”违规原因“。这就等于是一个死循环。而且你每一次提交给你反馈的原因都是不一样的。意味着你可能需要尝试很多很多次。
这还是一个很奇妙的过程，不过解封之后，我可能不太会使用新浪微博了。</description>
      <content:encoded><![CDATA[<h2 id="被封">被封</h2>
<p>2022 年 10 月 14 日，我和往常一样傍晚出门的时候打开微博刷，因为收到了转运公司给的邮件。告知，我购买的 <code>Yubikey</code> 硬件密钥无法转运。当时非常烦躁，于是想发个微博吐槽一下。结果出现了弹窗，告知我的微博异常。</p>
<p>我的微博没发过政治相关的任何东西，我想发的 <code>Yubikey</code> 那条微博中仅仅包含了 <code>在中国大陆真难啊</code> 字样。平时也不爱评论政治相关的内容。也不会和别人因为意见不同而吵架。所以我自己的微博被封，其实还是挺震惊的。我有很多社交平台的帐号，这还是头一回被封。</p>
<p>被封之后，我不能发微博，不能评论别人，不能转发别人的微博，不能给他人发私信，当然其他人甚至都看不到我。我也无法取关或者关注任何人。</p>
<h2 id="解封">解封</h2>
<p>在被限制功能的弹窗里面，会有个“申请解除”的按钮，进入之后需要你填写一个“原因“。据网友反馈，这个你反馈几十次都没人会理你。虽然我还是反馈了，但是完全不抱希望。</p>
<p>我又在网上搜索了一些别的方法，看了一圈，比较靠谱的还是使用 <a href="https://ts.isc.org.cn/#/home">互联网信息服务投诉平台</a>。我立即提交了我的情况，并且说明我在微博平台有很高的信用分，是微博的 VIP7 用户，是微博的十年用户，也是微博的认证用户。</p>
<p>过了大概一周左右的时间，我收到了微博给我的一条短信。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221230ZPzKtX.PNG" alt="20221230ZPzKtX"  />
</p>
<p>我大概看了一下，需要我上传我的短信截图、入网证明、手持身份证、保证书等等材料，等待审核。一开始为了省事，于是就没有上传保证书，我写的理由是“可能账号被盗”。微博给我的反馈是检测到帐号一切正常，没有被盗的情况。意思是微博认为违规行为一定是我本人所为。</p>
<p>我去打印了保证书，又一次提交了。微博反馈我的手持身份证照片不清晰，看不清证件信息。</p>
<p>我重新拍了手持身份证照片，再次提交。这一次的反馈是我在保证书中违规原因写的不正确。</p>
<p>但是问题是我真的不知道是因为哪条微博导致的违规。我就什么都没改重新提交了一次。</p>
<p>这一次微博反馈说，我在 2022 年 10 月 8 日发布了违规评论。（但是我至今都不知道我发了什么）</p>
<p>OK，既然他们这样说，我就按照客服给我的反馈，我写违规原因“由于 2022 年 10 月 8 日 21: 54: 27 发布了违规评论违反 xxx 规定”。还是被拒绝了，让我正确手写保证书。</p>
<p>我又去打印了一张空白的保证书，所有内容全部手写。又一次提交了，这一次微博反馈给我，让我正确填写违规原因。但是我真的不知道该怎么写了。</p>
<p>我实在无奈，又一次去 <a href="https://ts.isc.org.cn/#/home">互联网信息服务投诉平台</a> 反馈了。幸运的是，这一次微博给我的短信和上一次不一样。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221231lRofWz.PNG" alt="20221231lRofWz"  />
</p>
<p>这一次的提交入口也和之前不一样，之前是“异常帐号处理”，这一次是“刷单兼职”。我似乎是明白了，是因为我在 10 月 8 日晚上发布的言论涉嫌“兼职刷单“，虽然我不知道我发了什么，但是我就照着这个理由填写。又一次提交了。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221231HXFKxm.PNG" alt="20221231HXFKxm"  />
</p>
<p>很快收到了这个短信，大概意思是材料算是齐全了。让我继续等。都过去了两个半月了，我其实也一点都不着急了。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/202212313DzYXf.JPG" alt="202212313DzYXf"  />
</p>
<p>在 2022 年的倒数第二天，我又收到了微博给我的短信，我的帐号解封了。</p>
<h2 id="总结">总结</h2>
<p>我一共消耗了两个多月的时间。其中提交了有差不多 10 次材料审核。整个过程还是非常地曲折，而且其中最恶心的是，微博没有人工客服。你根本没办法知道你是因为什么被封，但是他必须要你填写”违规原因“。这就等于是一个死循环。而且你每一次提交给你反馈的原因都是不一样的。意味着你可能需要尝试很多很多次。</p>
<p>这还是一个很奇妙的过程，不过解封之后，我可能不太会使用新浪微博了。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Add the English name to the passport</title>
      <link>https://missuo.me/posts/english-name-passport/</link>
      <pubDate>Fri, 30 Dec 2022 00:47:14 +0000</pubDate>
      
      <guid>https://missuo.me/posts/english-name-passport/</guid>
      <description>只是在护照的备注页添加您的 英文名，护照主页的英文名字只能是你中文名的拼音形式。
用途 可以使用该英文名字购买火车票、机票等。（飞猪不支持使用护照购买机票，但是大部分航空公司自己的 App 或者官网应该可以） 可以使用该名字作为您在境外的主要名字，例如学生卡、驾驶证等。 该名字理论上是你的法定名字之一，因此应该和你的中文名，以及中文名拼音有一样的效果。 准备材料 声明书原件或复印件（经过公证的） 身份证原件 护照原件 建议先电话联系当地的 出入境管理局，询问 护照加注英文名需要哪些材料。一般情况下，上述这些材料一定是可以成功加注的，但是不同地区的规定可能不一样。而且上述的材料中，公证书需要花费较高的费用，如果有其他材料替代的话，或许可以剩下一笔费用。例如，跨国公司提供的全英文合同，在境外公司的员工卡，境外上学的学生证，境外大学提供的 Offer 等包含您英文名的所有正式的文件。但是如果您提供这些文件的，不能是仅仅一份，具体需要多少文件需要由出入境管理局的工作人员评判。当然如果您不愿意麻烦，可以按照上述材料准备。
声明书 样式 声明书 声明人：张三，2000年12月12日出生，公民身份证号码：130011200012121111。 本人姓名 张三，因境外工作学习需要，本人声明：MIKE ZHANG 为本人在中华人民共和国境内和境外唯一使用的英文姓名，MIKE ZHANG 与本人的中文姓名 张三 和拼音 ZHANG SAN 均为本人使用。 因此本人的英文名 MIKE ZHANG 在中华人民共和国境外的所有行为均由本人承担所有法律后果。 特此声明。 声明人：张三 二〇二二年六月二十二日 公证 据我所知，公证只能在户籍所在地的公证处办理。当然某宝也可以帮忙办理这类中英文同一人的公证，但是收费一般在2000元人民币以上，非常不建议。我在浙江省办理的声明书公证，花费400元人民币，包含一份公证书，当然您可以要求多份，每一份加20元。我强烈建议要两份，其中的一份可能会被出入境管理局收走存档，当然我去的出入境管理局仅需要复印件，他们会帮你复印。但是我还是直接给了原件。
重点：建议提前打电话询问您户籍所在地的公证处是否愿意办理此类公证。有的可能需要向领导请示，因为这类公证办理的人非常少。请注意，不是外国人的中英文名公证。
公证书是当天办理，立马可以取走的。建议安排在同一天，办理完公证可以直接前往出入境管理局。
费用和耗时 全程仅有公证需要花费400元人民币，护照加注是完全免费的。如果您没有护照，新办护照需要花费160元人民币。当然，在新办护照时直接加注不确定是否可以，您可以尝试。
一般情况下，在公证处需要花费1小时左右，因为公证书确定之后，需要上级领导审批，审批完之后需要打印装订。材料齐全的话，递交给出入境管理局仅需要15分钟左右。当然在护照上加注是无法立刻取回护照的，一般需要寄到省公安厅出入境制证中心。例如浙江省在杭州市萧山区。预计等待时间为7个工作日，我是在周三办理的，下周三从杭州寄出，在周四收到的快递。
寄往省公安厅出入境制证中心由当地出入境管理局完成，寄回给您是由省公安厅出入境制证中心完成。一般是通过EMS寄回，并且是已经支付运费的。</description>
      <content:encoded><![CDATA[<blockquote>
<p>只是在护照的备注页添加您的 <code>英文名</code>，护照主页的英文名字只能是你中文名的拼音形式。</p>
</blockquote>
<h2 id="用途">用途</h2>
<ol>
<li>可以使用该英文名字购买火车票、机票等。（飞猪不支持使用护照购买机票，但是大部分航空公司自己的 App 或者官网应该可以）</li>
<li>可以使用该名字作为您在境外的主要名字，例如学生卡、驾驶证等。</li>
<li>该名字理论上是你的法定名字之一，因此应该和你的中文名，以及中文名拼音有一样的效果。</li>
</ol>
<h2 id="准备材料">准备材料</h2>
<ol>
<li>声明书原件或复印件（经过公证的）</li>
<li>身份证原件</li>
<li>护照原件</li>
</ol>
<p><strong>建议先电话联系当地的 <code>出入境管理局</code>，询问 <code>护照加注英文名需要哪些材料</code>。一般情况下，上述这些材料一定是可以成功加注的，但是不同地区的规定可能不一样。而且上述的材料中，公证书需要花费较高的费用，如果有其他材料替代的话，或许可以剩下一笔费用。例如，跨国公司提供的全英文合同，在境外公司的员工卡，境外上学的学生证，境外大学提供的 Offer 等包含您英文名的所有正式的文件。但是如果您提供这些文件的，不能是仅仅一份，具体需要多少文件需要由出入境管理局的工作人员评判。当然如果您不愿意麻烦，可以按照上述材料准备。</strong></p>
<h2 id="声明书">声明书</h2>
<h3 id="样式">样式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">声明书
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">声明人：张三，2000年12月12日出生，公民身份证号码：130011200012121111。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">本人姓名 张三，因境外工作学习需要，本人声明：MIKE ZHANG 为本人在中华人民共和国境内和境外唯一使用的英文姓名，MIKE ZHANG 与本人的中文姓名 张三 和拼音 ZHANG SAN 均为本人使用。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">因此本人的英文名 MIKE ZHANG 在中华人民共和国境外的所有行为均由本人承担所有法律后果。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">特此声明。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">声明人：张三
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">二〇二二年六月二十二日
</span></span></code></pre></div><h3 id="公证">公证</h3>
<p>据我所知，公证只能在户籍所在地的公证处办理。当然某宝也可以帮忙办理这类<code>中英文同一人</code>的公证，但是收费一般在2000元人民币以上，非常不建议。我在浙江省办理的声明书公证，花费400元人民币，包含一份公证书，当然您可以要求多份，每一份加20元。我强烈建议要两份，其中的一份可能会被出入境管理局收走存档，当然我去的出入境管理局仅需要复印件，他们会帮你复印。但是我还是直接给了原件。</p>
<p><strong>重点：建议提前打电话询问您户籍所在地的公证处是否愿意办理此类公证。有的可能需要向领导请示，因为这类公证办理的人非常少。请注意，不是外国人的中英文名公证。</strong></p>
<p>公证书是当天办理，立马可以取走的。建议安排在同一天，办理完公证可以直接前往出入境管理局。</p>
<h2 id="费用和耗时">费用和耗时</h2>
<p>全程仅有公证需要花费400元人民币，护照加注是完全免费的。如果您没有护照，新办护照需要花费160元人民币。当然，在新办护照时直接加注不确定是否可以，您可以尝试。</p>
<p>一般情况下，在公证处需要花费1小时左右，因为公证书确定之后，需要上级领导审批，审批完之后需要打印装订。材料齐全的话，递交给出入境管理局仅需要15分钟左右。当然在护照上加注是无法立刻取回护照的，一般需要寄到<code>省公安厅出入境制证中心</code>。例如浙江省在杭州市萧山区。预计等待时间为7个工作日，我是在周三办理的，下周三从杭州寄出，在周四收到的快递。</p>
<p><strong>寄往<code>省公安厅出入境制证中心</code>由<code>当地出入境管理局</code>完成，寄回给您是由<code>省公安厅出入境制证中心</code>完成。一般是通过EMS寄回，并且是已经支付运费的。</strong></p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221230GKbnuj.jpg" alt="20221230GKbnuj"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Spend $8 to buy Affinity Universial License</title>
      <link>https://missuo.me/posts/affinity-universial-license/</link>
      <pubDate>Wed, 21 Dec 2022 11:30:33 +0000</pubDate>
      
      <guid>https://missuo.me/posts/affinity-universial-license/</guid>
      <description>关于全系通行证的介绍，就不多介绍，简单说就是可以在所有设备上激活所有 Affinity 产品（Photo, Designer, Publisher）。
相关介绍 https://affinity.serif.com/en-us/
价格 1439.40ARS = 57CNY = 8USD 由于需要代付（代购），实际成本大概在 13-15USD。
开通方法 需要一台 Windows 电脑，并且必须要有 Microsoft Store。如果部分精简版系统砍掉了，请自行搜索如何恢复，或者换电脑或重装系统。 在系统设置内，切换国家与地区到 阿根廷。（一开始以为跟 IP 有关，后来才知道根本没关系） 打开 Microsoft Store 直接下载 Affinity Photo 2，打开该软件会提示你购买。 关于代付 我尝试了自己的信用卡支付失败，应该像网上说的，只能使用阿根廷的 Debit/Credit Card。之前看到的帖子是找某宝，但是因为活动已经过去一个月左右，做代付的某宝商家已经学聪明了，直接将 Affinity通行证 摆上货架，常见收费 158-180CNY。非常不划算，等于是原价的三倍。而且态度极差，会告诉你低于这个价格你哪里都买不到。
找了很多办法，阿根廷也没有礼品卡这一说，虚拟信用卡我也尝试了，没有阿根廷手机号和身份证无法开通。最后在 UpWork 发了一个帖子，邀请了几个人，其中有一个 美女小姐姐 接受了邀请。小姐姐很靠谱，花了 10 来分钟就帮我搞定了。我是让她登录我的帐号帮我购买。购买之后移除她自己的付款方式，并且我移除她的设备。（建议合作之前说清楚，他需要花费 1440ARS 的成本，但是可以得到 15USD）</description>
      <content:encoded><![CDATA[<blockquote>
<p>关于全系通行证的介绍，就不多介绍，简单说就是可以在所有设备上激活所有 <code>Affinity</code> 产品（Photo, Designer, Publisher）。</p>
</blockquote>
<h2 id="相关介绍">相关介绍</h2>
<p><a href="https://affinity.serif.com/en-us/">https://affinity.serif.com/en-us/</a></p>
<h2 id="价格">价格</h2>
<p>1439.40ARS = 57CNY = 8USD
由于需要代付（代购），实际成本大概在 13-15USD。</p>
<h2 id="开通方法">开通方法</h2>
<ol>
<li>需要一台 <code>Windows</code> 电脑，并且必须要有 <code>Microsoft Store</code>。如果部分精简版系统砍掉了，请自行搜索如何恢复，或者换电脑或重装系统。</li>
<li>在系统设置内，切换国家与地区到 <code>阿根廷</code>。（一开始以为跟 IP 有关，后来才知道根本没关系）</li>
<li>打开 <code>Microsoft Store</code> 直接下载 <code>Affinity Photo 2</code>，打开该软件会提示你购买。</li>
</ol>
<h2 id="关于代付">关于代付</h2>
<p>我尝试了自己的信用卡支付失败，应该像网上说的，只能使用阿根廷的 <code>Debit/Credit Card</code>。之前看到的帖子是找某宝，但是因为活动已经过去一个月左右，做代付的某宝商家已经学聪明了，直接将 <code>Affinity通行证</code> 摆上货架，常见收费 158-180CNY。非常不划算，等于是原价的三倍。而且态度极差，会告诉你低于这个价格你哪里都买不到。</p>
<p>找了很多办法，阿根廷也没有礼品卡这一说，虚拟信用卡我也尝试了，没有阿根廷手机号和身份证无法开通。最后在 <code>UpWork</code> 发了一个帖子，邀请了几个人，其中有一个 <code>美女小姐姐</code> 接受了邀请。小姐姐很靠谱，花了 10 来分钟就帮我搞定了。我是让她登录我的帐号帮我购买。购买之后移除她自己的付款方式，并且我移除她的设备。（建议合作之前说清楚，他需要花费 1440ARS 的成本，但是可以得到 15USD）</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/202212218l1ys8.png" alt="202212218l1ys8"  />
</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/202212216pcvcg.png" alt="202212216pcvcg"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Twitter using NFT avatar</title>
      <link>https://missuo.me/posts/twitter-nft-avatar/</link>
      <pubDate>Sun, 06 Nov 2022 22:52:42 +0000</pubDate>
      
      <guid>https://missuo.me/posts/twitter-nft-avatar/</guid>
      <description>准备工作 OpenSea 帐号 MetaMask 钱包 Coinbase 钱包 开通步骤 开通 Twitter Blue 推荐使用 iPhone 打开 Twitter 官方客户端，我的 Apple ID 是美区的，可以直接通过内购开通，价格为每月 4.99USD。
往你的 MetaMask 钱包充钱 正常情况下，等值 2USD 的 ETH 足够了。因为我是用 OKX 向我的 MetaMask 转账的，OKX 的最低转账是 0.01ETH，所以我充值了大概 130CNY 全部买成 ETH。（0.01ETH 大概可以生成 6-7 个 NFT 头像）
请注意最好是复制粘贴你的 MetaMask 的 ETH 收款地址，输错无法找回。
以上这笔费用，主要是用于转移你的 NFT 头像头像的手续费。大概不到 2USD。
在 OpenSea 上传你的头像 点击 Create 按扭。上传你的头像，并且取一个名字即可。
转移你的头像到 Coinbase 点击红色框框内的 转移 图标。输入你的 Coinbase ETH 地址，这个时候会需要你支付手续费。你直接支付即可。
更换 Twitter 头像 在 Twitter 上点击更换头像，选择 NFT，这个时候会提示你连接你的 ETH 钱包，你连接你的 Coinbase 钱包之后，会发现已经有一个可选的头像了。换好之后就是六边形的 NFT 专属头像。</description>
      <content:encoded><![CDATA[<h2 id="准备工作">准备工作</h2>
<ul>
<li>OpenSea 帐号</li>
<li>MetaMask 钱包</li>
<li>Coinbase 钱包</li>
</ul>
<h2 id="开通步骤">开通步骤</h2>
<h3 id="开通-twitter-blue">开通 Twitter Blue</h3>
<p>推荐使用 iPhone 打开 Twitter 官方客户端，我的 Apple ID 是美区的，可以直接通过内购开通，价格为每月 <code>4.99USD</code>。</p>
<h3 id="往你的-metamask-钱包充钱">往你的 MetaMask 钱包充钱</h3>
<p>正常情况下，等值 2USD 的 ETH 足够了。因为我是用 OKX 向我的 MetaMask 转账的，OKX 的最低转账是 0.01ETH，所以我充值了大概 130CNY 全部买成 ETH。（0.01ETH 大概可以生成 6-7 个 NFT 头像）</p>
<p><strong>请注意最好是复制粘贴你的 MetaMask 的 ETH 收款地址，输错无法找回。</strong></p>
<p>以上这笔费用，主要是用于转移你的 NFT 头像头像的手续费。大概不到 2USD。</p>
<h3 id="在-opensea-上传你的头像">在 OpenSea 上传你的头像</h3>
<p>点击 <a href="https://opensea.io/asset/create">Create</a> 按扭。上传你的头像，并且取一个名字即可。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221106KsQLZo.png" alt="20221106KsQLZo"  />
</p>
<h3 id="转移你的头像到-coinbase">转移你的头像到 Coinbase</h3>
<p>点击红色框框内的 <code>转移</code> 图标。输入你的 Coinbase ETH 地址，这个时候会需要你支付手续费。你直接支付即可。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221106gfwJSy.png" alt="20221106gfwJSy"  />
</p>
<h3 id="更换-twitter-头像">更换 Twitter 头像</h3>
<p>在 Twitter 上点击更换头像，选择 NFT，这个时候会提示你连接你的 ETH 钱包，你连接你的 Coinbase 钱包之后，会发现已经有一个可选的头像了。换好之后就是六边形的 NFT 专属头像。</p>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20221106rcFWOB.jpg" alt="20221106rcFWOB"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Withdrawal from Chinese social media platforms</title>
      <link>https://missuo.me/posts/chinese-social-media/</link>
      <pubDate>Fri, 14 Oct 2022 23:41:14 +0000</pubDate>
      
      <guid>https://missuo.me/posts/chinese-social-media/</guid>
      <description>2022 年 8 月 15 日，我做了两个小时视频，准备在 哔哩哔哩 发布。当我上传完成后，静静等待审核。结果竟然是审核不通过。开始对 哔哩哔哩 感到失望。之后再也没有更新过任何视频。
2022 年 10 月 13 日，和往常一样傍晚出去散步，收到了转运公司给我发的邮件，提示我购买的 硬件密钥 是禁运品，无法转运到中国大陆。于是我发布了下面的 Twitter。
前几天 Cloudflare x Yubico 活动，买了两个 Yubikey 5C NFC。到达转运仓库之后，被告知是违禁品，只能退回。退货运费比商品总价还高。在中国大陆真难啊。
当我复制之后，想要在 新浪微博 发布时，提示我账号异常。也就意味着在那一刻我的账号被封禁了，无法点赞、评论、转发、关注、取关。并且直接在别人的微博上消失。当时我就傻眼了，从 2013 年注册微博到现在，已经用了近 10 年了。从来没有发布过任何违规的内容，不参与任何政治话题和热搜话题，不在微博吵架骂人。微博会员开了 8 年，目前已经是 VIP7，微博认证了摄影博主，微博实名认证且微博名就是实名。我真的不知道我到底是因为什么被封禁，是因为我想发的那条微博，还是之前发布的微博。自己又翻了一下，几乎都是日常，并没有什么敏感词。
于是，我打开了 Twitter，开始搜索关键词—— 微博炸。搜到了好多和我类似遭遇的朋友，有的是因为发布了“我看到了”被封号了。也有不少人是和我一样什么都没发就号没了。也算是心里找到了一丝安慰，毕竟不是只有我一个人遭遇了这个问题。
之后，我就开始搜索各种资料，寻找解封的方式。微博官网当然是提供了 解除异常 的按钮，但是根据网友的经验，这种官方的方式基本上是不可能得到任何回应的，或者就是审核失败。另外，值得一提的是，微博有人工客服等于没有，因为你根本找不到人工/在线客服的人口。后来我选择了 互联网信息服务投诉平台，投诉了 新浪微博。目前还在处理中。
通过这两件事，让我对中国的社交平台非常失望。老实说，其实很想脱离国内的社交平台。但是从小学用到大学的这些账号，对我来说意味着太多。就比如通过微博，我认识了很多有意思的人，有很多本来是网友，现在是关系不错的朋友。更重要的是，有很多我喜欢的博主会在微博上更新。当然，即使解封了我可能不会再更新任何内容。
经过了两天的思考，我决定退出中国的所有社交平台，包括 哔哩哔哩 知乎 等等。本来我很喜欢在这些社交平台上贡献我的一些经验，或者是一些有趣的发现。但是由于太多的限制，迫使我不得不永久停止更新。我已经将所有平台的签名修改为 永久停止更新。之后可能慢慢地，也会远离 微信。近些年，朋友圈发的本来就很少，因为微信加了太多家人、老师、朋友和陌生人。很多时候都不想发朋友圈，怕打扰到大家。微博本身是我的一个情绪窗口，我会分享我的日常，当然大部分我都是分享比较正能量的内容。
之后的计划是会按照以前的频率在 Twitter 上更新，另外会考虑重新开始更新 YouTube 频道。除此之外，我会尽量少使用社交平台，把更多的精力放在开发这件事上。我会持续的 GitHub 社区以及 PyPi 更新我写的 Projects 。
如果你想联系我，请不要联系 微信。请联系我的 Discord 或 Telegram。你可以在这两个平台上随时找到我，并且和我说任何你想说的。
Discord: missuo#7448</description>
      <content:encoded><![CDATA[<p>2022 年 8 月 15 日，我做了两个小时视频，准备在 <code>哔哩哔哩</code> 发布。当我上传完成后，静静等待审核。结果竟然是审核不通过。开始对 <code>哔哩哔哩</code> 感到失望。之后再也没有更新过任何视频。</p>
<p>2022 年 10 月 13 日，和往常一样傍晚出去散步，收到了转运公司给我发的邮件，提示我购买的 <code>硬件密钥</code> 是禁运品，无法转运到中国大陆。于是我发布了下面的 <code>Twitter</code>。</p>
<blockquote>
<p>前几天 Cloudflare x Yubico 活动，买了两个 Yubikey 5C NFC。到达转运仓库之后，被告知是违禁品，只能退回。退货运费比商品总价还高。在中国大陆真难啊。</p>
</blockquote>
<p>当我复制之后，想要在 <code>新浪微博</code> 发布时，提示我账号异常。也就意味着在那一刻我的账号被封禁了，无法点赞、评论、转发、关注、取关。并且直接在别人的微博上消失。当时我就傻眼了，从 2013 年注册微博到现在，已经用了近 10 年了。从来没有发布过任何违规的内容，不参与任何政治话题和热搜话题，不在微博吵架骂人。微博会员开了 8 年，目前已经是 VIP7，微博认证了摄影博主，微博实名认证且微博名就是实名。我真的不知道我到底是因为什么被封禁，是因为我想发的那条微博，还是之前发布的微博。自己又翻了一下，几乎都是日常，并没有什么敏感词。</p>
<p>于是，我打开了 <code>Twitter</code>，开始搜索关键词—— <code>微博炸</code>。搜到了好多和我类似遭遇的朋友，有的是因为发布了“我看到了”被封号了。也有不少人是和我一样什么都没发就号没了。也算是心里找到了一丝安慰，毕竟不是只有我一个人遭遇了这个问题。</p>
<p>之后，我就开始搜索各种资料，寻找解封的方式。微博官网当然是提供了 <code>解除异常</code> 的按钮，但是根据网友的经验，这种官方的方式基本上是不可能得到任何回应的，或者就是审核失败。另外，值得一提的是，微博有人工客服等于没有，因为你根本找不到人工/在线客服的人口。后来我选择了 <code>互联网信息服务投诉平台</code>，投诉了 <code>新浪微博</code>。目前还在处理中。</p>
<p>通过这两件事，让我对中国的社交平台非常失望。老实说，其实很想脱离国内的社交平台。但是从小学用到大学的这些账号，对我来说意味着太多。就比如通过微博，我认识了很多有意思的人，有很多本来是网友，现在是关系不错的朋友。更重要的是，有很多我喜欢的博主会在微博上更新。当然，即使解封了我可能不会再更新任何内容。</p>
<p>经过了两天的思考，我决定退出中国的所有社交平台，包括 <code>哔哩哔哩</code> <code>知乎</code> 等等。本来我很喜欢在这些社交平台上贡献我的一些经验，或者是一些有趣的发现。但是由于太多的限制，迫使我不得不永久停止更新。我已经将所有平台的签名修改为 <code>永久停止更新</code>。之后可能慢慢地，也会远离 <code>微信</code>。近些年，朋友圈发的本来就很少，因为微信加了太多家人、老师、朋友和陌生人。很多时候都不想发朋友圈，怕打扰到大家。微博本身是我的一个情绪窗口，我会分享我的日常，当然大部分我都是分享比较正能量的内容。</p>
<p>之后的计划是会按照以前的频率在 <code>Twitter</code> 上更新，另外会考虑重新开始更新 <code>YouTube</code> 频道。除此之外，我会尽量少使用社交平台，把更多的精力放在开发这件事上。我会持续的 <code>GitHub</code> 社区以及 <code>PyPi</code> 更新我写的 <code>Projects</code> 。</p>
<p>如果你想联系我，请不要联系 <code>微信</code>。请联系我的 <code>Discord</code> 或 <code>Telegram</code>。你可以在这两个平台上随时找到我，并且和我说任何你想说的。</p>
<p>Discord: <a href="https://discordapp.com/users/missuo#7448">missuo#7448</a><br>
Telegram: <a href="https://t.me/missuo">missuo</a></p>
<p>最后我想说的是，我希望我是一个很好的例子，希望悲剧不会重演。尽量还是少发表言论吧，你永远不会知道会不会出发某些敏感词。官方永远是宁愿误封，也不会漏掉一个人。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>About WeChat Multi-opening on iOS</title>
      <link>https://missuo.me/posts/tf-wechat/</link>
      <pubDate>Tue, 13 Sep 2022 04:02:43 +0000</pubDate>
      
      <guid>https://missuo.me/posts/tf-wechat/</guid>
      <description>正常情况下，在 iOS 设备上是不可能安装两个一模一样的 App。但是大部分人对于 微信 这款 App 都希望能够有 2 个及以上。工作和个人两个号，互不打扰。也能够及时的看到两个账号的消息，这是最完美的事情。
如果要做到以上的情况需要怎么做呢，大部分的选择可能是去某宝购买。某宝的价格基本上在 40-100 元不等，非常昂贵。平均下来，买一次最多使用 1-3 个月左右。淘宝售卖的是各种品牌的微信多开，但是按大类来分，无非就是两种，TestFlight(TF) 和 企业证书。我不展开说这两个版本有什么区别，如果要我硬是选择一个更好的，我会选择 TF 版本。
既然某宝那么贵到底成本有多少呢，理论上除去开发成本，成本应该只有一个 Apple Developer 订阅的账号(688 元)的成本吧。因此，会有很多叫做 卡密网 的网站以非常低的价格售卖微信多开。基本上价格在 5-40 元之间，10-20 元居多。我曾经也买了很多次，最后总结的经验就是，基本上在三个月之内，作者必定会跑路。也就是意味着你三个月之后就用不了了，而且最恶心的事情是，作者会更换一个名字，三个月后重新开始售卖。典型的改名继续圈钱。
正常的流程，买的是一个激活码，然后第一次打开这个多开的时候，需要输入激活码进行验证。验证成功后可以正常使用。我想，是否有办法去绕过这个验证呢？
直接屏蔽验证接口 一般情况下，作者为了控制激活码的有效性，简单来说，如果你退款了，他可以立刻封禁你的激活码让你无法使用。所以他们一般会在每次打开 App 的时候，向服务器发起一个请求，如果服务端验证通过，会返回一些东西，例如“成功”等等。这种验证方式，其实还是有办法解决的，我们只要拿到正常的激活码，Response 的内容是什么，我们通过强大的 QuanX 或者 Surge 这类工具，开启 MITM，重写 Response 即可。在我测试的过程中，有遇到过直接 Reject 接口也可以绕过验证。
DOMAIN-SUFFIX, xxx.com, Reject 当然有些开发者可能已经考虑到我们会这样做，于是他直接将验证的代码写在了本地。这类程序几乎是无法绕过的。
自己获取激活码 由于被薅过太多次羊毛，每次三个月就跑路。我就开始想，有没有办法薅作者的羊毛。初步的想法是搞明白作者的激活码的规律。但是这显然不靠谱，因为这些基本随机生成的，当然肯定有一定的规律，只是我们不是开发者本人，几乎是不可能猜到的。
既然找不到规律，就只能开始暴力破解。我发现大部分的多开的激活码都是 YW-XXXXXX，前面两个字母是产品名字的首字母，例如云微是 YW，云彩是 YC 等等。然后后面的这一串 XXXXXX 是随机的六个字母。也就是说激活码的可能性只存在于 AAAAAA-ZZZZZZ 之中。这个可能性非常大，但是交给我们的服务器去做，简直是小菜一碟。
pool = threadpool.ThreadPool(99) while True: code = create_code() tasks = threadpool.makeRequests(run, code) [pool.</description>
      <content:encoded><![CDATA[<p>正常情况下，在 iOS 设备上是不可能安装两个一模一样的 App。但是大部分人对于 <code>微信</code> 这款 App 都希望能够有 2 个及以上。工作和个人两个号，互不打扰。也能够及时的看到两个账号的消息，这是最完美的事情。</p>
<p>如果要做到以上的情况需要怎么做呢，大部分的选择可能是去某宝购买。某宝的价格基本上在 40-100 元不等，非常昂贵。平均下来，买一次最多使用 1-3 个月左右。淘宝售卖的是各种品牌的微信多开，但是按大类来分，无非就是两种，<code>TestFlight(TF)</code> 和 <code>企业证书</code>。我不展开说这两个版本有什么区别，如果要我硬是选择一个更好的，我会选择 TF 版本。</p>
<p>既然某宝那么贵到底成本有多少呢，理论上除去开发成本，成本应该只有一个 Apple Developer 订阅的账号(688 元)的成本吧。因此，会有很多叫做 <code>卡密网</code> 的网站以非常低的价格售卖微信多开。基本上价格在 5-40 元之间，10-20 元居多。我曾经也买了很多次，最后总结的经验就是，基本上在三个月之内，作者必定会跑路。也就是意味着你三个月之后就用不了了，而且最恶心的事情是，作者会更换一个名字，三个月后重新开始售卖。典型的改名继续圈钱。</p>
<p>正常的流程，买的是一个激活码，然后第一次打开这个多开的时候，需要输入激活码进行验证。验证成功后可以正常使用。我想，是否有办法去绕过这个验证呢？</p>
<h3 id="直接屏蔽验证接口">直接屏蔽验证接口</h3>
<p>一般情况下，作者为了控制激活码的有效性，简单来说，如果你退款了，他可以立刻封禁你的激活码让你无法使用。所以他们一般会在每次打开 App 的时候，向服务器发起一个请求，如果服务端验证通过，会返回一些东西，例如“成功”等等。这种验证方式，其实还是有办法解决的，我们只要拿到正常的激活码，<code>Response</code> 的内容是什么，我们通过强大的 <code>QuanX</code> 或者 <code>Surge</code> 这类工具，开启 <code>MITM</code>，重写 <code>Response</code> 即可。在我测试的过程中，有遇到过直接 <code>Reject</code> 接口也可以绕过验证。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">DOMAIN-SUFFIX, xxx.com, Reject
</span></span></code></pre></div><p>当然有些开发者可能已经考虑到我们会这样做，于是他直接将验证的代码写在了本地。这类程序几乎是无法绕过的。</p>
<h3 id="自己获取激活码">自己获取激活码</h3>
<p>由于被薅过太多次羊毛，每次三个月就跑路。我就开始想，有没有办法薅作者的羊毛。初步的想法是搞明白作者的激活码的规律。但是这显然不靠谱，因为这些基本随机生成的，当然肯定有一定的规律，只是我们不是开发者本人，几乎是不可能猜到的。</p>
<p>既然找不到规律，就只能开始暴力破解。我发现大部分的多开的激活码都是 <code>YW-XXXXXX</code>，前面两个字母是产品名字的首字母，例如云微是 <code>YW</code>，云彩是 <code>YC</code> 等等。然后后面的这一串 <code>XXXXXX</code> 是随机的六个字母。也就是说激活码的可能性只存在于 <code>AAAAAA</code>-<code>ZZZZZZ</code> 之中。这个可能性非常大，但是交给我们的服务器去做，简直是小菜一碟。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pool = threadpool.ThreadPool(99)
</span></span><span class="line"><span class="cl">while True:
</span></span><span class="line"><span class="cl">	code = create_code()
</span></span><span class="line"><span class="cl">	tasks = threadpool.makeRequests(run, code)
</span></span><span class="line"><span class="cl">	[pool.putRequest(req) for req in tasks]
</span></span><span class="line"><span class="cl">	pool.wait()
</span></span></code></pre></div><p>我开始编写脚本，采用多线程的方案去尝试。效果非常好，几分钟出现很多验证通过的结果。服务器运行 24 小时，可以出现上千个激活码。于是我就有了用不完的激活码，成功薅到了作者的羊毛。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Summary of low prices for subscription services</title>
      <link>https://missuo.me/posts/subscription-service/</link>
      <pubDate>Thu, 01 Sep 2022 19:37:47 +0000</pubDate>
      
      <guid>https://missuo.me/posts/subscription-service/</guid>
      <description>写在前面 以下提到的所有的方式都有可能导致账号被封、服务停用等不可控情况，如发生任何账号异常的情况，本人概不负责。请谨慎使用！
由于部分开通方式需要某宝购买礼品卡或者代充值，实际开通的价格比我标注的可能略高一些。
因为是一个汇总，开通的方法不会介绍太详细，如在开通过程中遇到任何问题，欢迎咨询。
以下汇率可能存在波动，请自行转换为实时汇率。
目录(主要都是我自用的一些服务) Spotify YouTube Premium Netflix Disney Plus Google One/Google Drive Dropbox iCloud Mega Infuse Xnip Surge Taio Telegram Premium Twitterrific 开通方法 1. Spotify - 菲律宾区 - 214 PHP/6 人 折合人民币 26.11 元 /月，人均不到 5 元。需要在某宝购买一张菲律宾电话卡(11 元)。需要用菲律宾 IP ，将你的账号切换到菲律宾。支付方式可以选择电话卡话费、Paymaya 、Gcash(推荐)。
2. YouTube Premium - 阿根廷区 - 179 ARS/6 人 折合人民币 8.9 元 /月，人均不到 1.5 元。需要添加阿根廷的付款之后后使用 Visa/Mastercard 付款即可。
3. Netflix - 巴基斯坦区 - 1100 PKR/5 人 折合人民币 34.</description>
      <content:encoded><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>以下提到的所有的方式都有可能导致账号被封、服务停用等不可控情况，如发生任何账号异常的情况，本人概不负责。请谨慎使用！</p>
<p>由于部分开通方式需要某宝购买礼品卡或者代充值，实际开通的价格比我标注的可能略高一些。</p>
<p>因为是一个汇总，开通的方法不会介绍太详细，如在开通过程中遇到任何问题，欢迎咨询。</p>
<p>以下汇率可能存在波动，请自行转换为实时汇率。</p>
<h1 id="目录主要都是我自用的一些服务">目录(主要都是我自用的一些服务)</h1>
<ol>
<li>Spotify</li>
<li>YouTube Premium</li>
<li>Netflix</li>
<li>Disney Plus</li>
<li>Google One/Google Drive</li>
<li>Dropbox</li>
<li>iCloud</li>
<li>Mega</li>
<li>Infuse</li>
<li>Xnip</li>
<li>Surge</li>
<li>Taio</li>
<li>Telegram Premium</li>
<li>Twitterrific</li>
</ol>
<h2 id="开通方法">开通方法</h2>
<h3 id="1-spotify---菲律宾区---214-php6-人">1. Spotify - 菲律宾区 - 214 PHP/6 人</h3>
<p>折合人民币 26.11 元 /月，人均不到 5 元。需要在某宝购买一张菲律宾电话卡(11 元)。需要用菲律宾 IP ，将你的账号切换到菲律宾。支付方式可以选择电话卡话费、Paymaya 、Gcash(推荐)。</p>
<h3 id="2-youtube-premium---阿根廷区---179-ars6-人">2. YouTube Premium - 阿根廷区 - 179 ARS/6 人</h3>
<p>折合人民币 8.9 元 /月，人均不到 1.5 元。需要添加阿根廷的付款之后后使用 Visa/Mastercard 付款即可。</p>
<h3 id="3-netflix---巴基斯坦区---1100-pkr5-人">3. Netflix - 巴基斯坦区 - 1100 PKR/5 人</h3>
<p>折合人民币 34.78 元 /月，人均不到 7 元。需要巴基斯坦 IP ，联系客服修改到巴基斯坦，接着正常使用 Visa/Mastercard 付款即可。</p>
<h3 id="4-disney-plus---土耳其区---3499-try7-人">4. Disney Plus - 土耳其区 - 349.9 TRY/7 人</h3>
<p>折合人民币 132.6 元 /年，人均不到 20 元。需要一个空白的谷歌账号，没有添加过付款资料的，或者之前添加过土耳其付款资料的账号。使用安卓手机下载 Disney+后，使用 Google Play 付款。开通后可以联系客服转到新加坡区，解锁 R18 等。iPhone 似乎也可以，可以自行研究。</p>
<h3 id="5-google-onegoogle-drive-2t---土耳其区---28999-try6-人">5. Google One/Google Drive 2T - 土耳其区 - 289.99 TRY/6 人</h3>
<p>折合人民币 109.9 元 /年，人均不到 20 元。需要土耳其 IP ，需要拥有土耳其付款资料的谷歌账号。接着正常使用 Visa/Mastercard 付款即可。</p>
<h3 id="6-dropbox-2t---土耳其区----13499-try6-人">6. Dropbox 2T - 土耳其区 -  134.99 TRY/6 人</h3>
<p>折合人民币 51.16 元 /月，人均不到 9 元。需要一个土耳其的 Apple ID ，通过苹果内购开通。土耳其账号充值需要某宝购买充值卡。</p>
<h3 id="7-icloud-2t---土耳其区---6499-try6-人">7. iCloud 2T - 土耳其区 - 64.99 TRY/6 人</h3>
<p>折合人民币 25 元 /月，人均不到 5 元。土耳其 ID 内购。注意，也可以在已有的家庭邀请一个土耳其账号，由土耳其账号共享 iCloud+。</p>
<h3 id="8-mega-400g---土耳其区---1299-try人">8. Mega 400G - 土耳其区 - 12.99 TRY/人</h3>
<p>折合人民币 4.92 元 /月。土耳其 ID 内购。</p>
<h3 id="9-infuse---土耳其区---999-try">9. Infuse - 土耳其区 - 9.99 TRY</h3>
<p>折合人民币 3.79 元 /月。土耳其 ID 内购。需要登陆土耳其账号恢复订阅。</p>
<h3 id="10-xnip---土耳其区---3299-try">10. Xnip - 土耳其区 - 32.99 TRY</h3>
<p>折合人民币 12.5 元 /年。土耳其 ID 内购。需要登陆土耳其账号恢复订阅。</p>
<h3 id="11-surge-pro---土耳其区---10299-try">11. Surge Pro - 土耳其区 - 102.99 TRY</h3>
<p>折合人民币 39.03 元 /年。土耳其 ID 内购。开通后不再需要恢复订阅，绑定账号。</p>
<h3 id="12-taio---土耳其区---8799-try">12. Taio - 土耳其区 - 87.99 TRY</h3>
<p>折合人民币 33.35 元 /年。土耳其 ID 内购。需要登陆土耳其账号恢复订阅。</p>
<h3 id="13-telegram-premium---土耳其区---1399-try">13. Telegram Premium - 土耳其区 - 13.99 TRY</h3>
<p>折合人民币 5.3 元 /月。土耳其 ID 内购。开通后不再需要恢复订阅，绑定账号。</p>
<h3 id="14-twitterrific---土耳其区---599-try">14. Twitterrific - 土耳其区 - 5.99 TRY</h3>
<p>折合人民币 2.27 元 /月。土耳其 ID 内购。需要登陆土耳其账号恢复订阅。</p>
<h2 id="附言">附言</h2>
<p>由于土耳其区 App Store 优惠的软件实在太多。可以自行研究。如没有独立账号的应用，土耳其区的内购可能会因为更新掉订阅，需要重新登录土耳其账号恢复订阅。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Information Security in China</title>
      <link>https://missuo.me/posts/information-security-in-china/</link>
      <pubDate>Sun, 03 Jul 2022 03:45:26 +0000</pubDate>
      
      <guid>https://missuo.me/posts/information-security-in-china/</guid>
      <description>信息安全，也许你从来也没有关注过这个词。又或者信息泄露这件事在你身上从来没有发生过，所以你根本不在乎。
其实，在上大学之前，我和大多数人一样几乎没有去关注过信息安全这个领域。直到上了大学，开始接触计算机相关的知识之后，我开始注重自己的个人隐私，试着在日常生活中尽可能地去保护自己的隐私。我的所有购物平台的收件人没有真名，几乎都是类似于库克之类的名字，我的收件地址都没有具体到几幢几室，所以一般都会被放在丰巢。但是这样做，还有一个非常不妥的地方，那就是你的手机号码必须要填写真实的，否则你搜不到丰巢的取件码。顺丰和京东是我最喜欢的快递公司，当然他们也是快递业内做的最大的，他们的运单上面用户的手机号都不是完整的，如果你平时注意的话，中间都是用 星号 代替的，快递员只能通过虚拟号码来拨打。而别的快递公司的运单上，几乎都是 11 位完整的电话号码。设想一下，如果小区的清洁人员和某个组织有所合作，每天就是收集垃圾堆里的快递运单上的手机号，那么几乎可以获取到整个小区业主的电话。这看起来似乎是个不太聪明的方法，如果找物业买，可以轻松得到所有的业主信息，据我所知，这样的事情的确在大部分物业都在做这样的事情。除了快递之外，外卖是另一个信息泄露的重要途径，虽然目前的主流外卖平台，饿了么和美团打印的外卖单上都是虚拟的号码，但是外卖单上有个比手机号更重要的信息就是非常具体的地址，我相信没有人会为了保护隐私地址写小区名字，不写几幢几室，然后每次都去小区门口自己拿外卖，这似乎就不能凸显外卖的优势了。注意不要去任何平台购买饿了么年费会员，很有可能会登录你的账号泄露你所有的外卖收货地址。
说完日常生活的快递和外卖，再来说说民宿和酒店，酒店需要登记入住人信息，但是我相信稍高档一些的酒店的信息只是录入系统传给公安。但是民宿呢，在 Airbnb 和美团等等软件上，在你订购的时候需要填写真实姓名和证件号码。但是奇怪的事情是，当你到了入住那天下午两点，跟房东询问如何入住时，大部分的房东都会要求你拍摄身份证正反面发给他（注意是通过微信的方式）。一般在这种情况下，我是非常反感的，通过微信这样的方式私底下要别人证件。大多数情况下，我会向房东解释，不通过平台是不能够索要身份证件的，有些房东还算好说话，也就不再追究下去了。而有的房东穷追不舍一定要你发给他，这个时候其实你有两个选择，一个简单的选择就是妥协，另一个选择就是坚持自己，那你就只能选择不住，或者就向平台反馈这件事情，但是第二种选择必定会给你带来不少麻烦，如果你选择不住，你得换一个地方，你也不确定你新找的地方是不是还是需要让你发身份证，你向平台投诉，平台客服又得找房东去核实，必然会浪费几十分钟甚至几个小时。回到最前面，如果你妥协了把身份证件发给房东了，你又如何保证房东除了出租民宿之外，还有一份副业会不会就是出售个人身份信息（当然我没有证据，只是恶意地揣测）。
那么除了日常和旅行之外，真的就没有别的信息泄露的途径了吗？真实情况远远不是这样的。在 2020 年的时候，我在一个群里看到了一个链接，只要打开链接，输入 QQ 号，就可以知道该 QQ 绑定的手机号，后来又有了微博号查绑定手机。这就是网上疯狂的 8 亿 QQ 和 5 亿微博，很荣幸我也亲眼见到过这两份数据库。这两份数据库的带来的后果是什么呢，只要 QQ 和微博是 2020 年之前注册的，你就可以轻松得到对方的手机号，可以添加微信，通过支付宝转账又可以知道对方的名字，通过手机号和名字又可以知道很多很多信息。这还不是最严重的，再后来我发现，只要通过一个名字就可以知道他的很多信息，包括教育经历等等。经过我的考证，在浙江省内接受过小学、初中、高中或者职校的几乎所有学生，只要通过名字都可以查到姓名、身份证号码、家长名字、家长电话、家庭住址、学校和班级。我有怀疑过是学校的工作人员出卖了数据，后来我否定了这样的想法，很有可能是教育局泄露了这份数据。当然学校也许也在卖，否则你上学的时候你爸妈手机为什么天天会收到培训机构的电话呢，甚至比你还先知道你期中考试考了多少分。
这些都是过去的数据泄露，来讲讲最近的。2022 年 6 月 21 日，超星学习通 1.7 亿用户数据泄露，虽然官方否定了这个传闻，但是经过证实，这就是事实，已经有人摆上货架售卖 500USDT，在某些地方也已经可以查到这份数据。没用过超星学习通可能不知道这意味着什么，毫不夸张地说，在中国大陆 80-90%的高校都在使用超星学习通教学，这就意味着所有正在读书的学生的信息都被泄露了。这份数据包括姓名、学号、性别、手机号和密码。官方轻描淡写地出来辟谣，还说密码是加密的，这个密码的问题之后会讲到。
如果说 1.7 亿，相比于中国 14 亿人口来说，不值得一提的话，那 2022 年 7 月 2 日的这个传闻泄露的数据包含 10 亿多中国公民，包含个人信息、犯罪记录、疫情数据。这是迄今为止中国大陆发生的最大的信息泄露事件。境外网站写的是 Shanghai GOV National Police 的漏洞泄露的数据，目前为得到证实，售价 10BTC。结合国内知名黑客 sunwear 的微博来看，应该是真的。
最后我想说说社交账号和密码问题。社交账号上建议，抖音号和微信号不要设置与自己的名字全拼、缩写、生日、手机号、QQ 号相关的。抖音个人简介里，尽量不要写自己的微博账号。给别人微信的时候，尽量不要给 QQ 号或者手机号。支付宝务必关闭手机号搜索。讲讲密码，我相信大部分人的习惯都一样，几乎所有平台的密码都是一样的，而且密码都是 ZJL021212，名字缩写加出生日期，或者出生日期加名字缩写。非常不建议采用这样的密码，最好是和你本人的个人信息没有任何关系的密码。如果不涉及财产的网站和软件，可以采用相同的密码，当然最好是每个平台都不一样，但是这样记密码的成本太高。请务必不要相信学习通所说的密码加密就不会被泄露。就举个例子，MD5 加密，这样的加密方式设计的时候就是不可逆的，例如 12345，加密后是 827ccb0eea8a706c4c34a16891f84e7b，你如果想知道 827ccb0eea8a706c4c34a16891f84e7b 的明文是什么，必须要 123、1234、12345 这样子的明文一个一个加密之后去比对，看似天衣无缝的加密算法，实际上目前 MD5 密文几乎都可以用彩虹表破解。所以加密后的密码被泄露也不一定是安全的。</description>
      <content:encoded><![CDATA[<blockquote>
<p>信息安全，也许你从来也没有关注过这个词。又或者信息泄露这件事在你身上从来没有发生过，所以你根本不在乎。</p>
</blockquote>
<p>其实，在上大学之前，我和大多数人一样几乎没有去关注过信息安全这个领域。直到上了大学，开始接触计算机相关的知识之后，我开始注重自己的个人隐私，试着在日常生活中尽可能地去保护自己的隐私。我的所有购物平台的收件人没有真名，几乎都是类似于库克之类的名字，我的收件地址都没有具体到几幢几室，所以一般都会被放在丰巢。但是这样做，还有一个非常不妥的地方，那就是你的手机号码必须要填写真实的，否则你搜不到丰巢的取件码。顺丰和京东是我最喜欢的快递公司，当然他们也是快递业内做的最大的，他们的运单上面用户的手机号都不是完整的，如果你平时注意的话，中间都是用 星号 代替的，快递员只能通过虚拟号码来拨打。而别的快递公司的运单上，几乎都是 11 位完整的电话号码。设想一下，如果小区的清洁人员和某个组织有所合作，每天就是收集垃圾堆里的快递运单上的手机号，那么几乎可以获取到整个小区业主的电话。这看起来似乎是个不太聪明的方法，如果找物业买，可以轻松得到所有的业主信息，据我所知，这样的事情的确在大部分物业都在做这样的事情。除了快递之外，外卖是另一个信息泄露的重要途径，虽然目前的主流外卖平台，饿了么和美团打印的外卖单上都是虚拟的号码，但是外卖单上有个比手机号更重要的信息就是非常具体的地址，我相信没有人会为了保护隐私地址写小区名字，不写几幢几室，然后每次都去小区门口自己拿外卖，这似乎就不能凸显外卖的优势了。注意不要去任何平台购买饿了么年费会员，很有可能会登录你的账号泄露你所有的外卖收货地址。</p>
<p>说完日常生活的快递和外卖，再来说说民宿和酒店，酒店需要登记入住人信息，但是我相信稍高档一些的酒店的信息只是录入系统传给公安。但是民宿呢，在 Airbnb 和美团等等软件上，在你订购的时候需要填写真实姓名和证件号码。但是奇怪的事情是，当你到了入住那天下午两点，跟房东询问如何入住时，大部分的房东都会要求你拍摄身份证正反面发给他（注意是通过微信的方式）。一般在这种情况下，我是非常反感的，通过微信这样的方式私底下要别人证件。大多数情况下，我会向房东解释，不通过平台是不能够索要身份证件的，有些房东还算好说话，也就不再追究下去了。而有的房东穷追不舍一定要你发给他，这个时候其实你有两个选择，一个简单的选择就是妥协，另一个选择就是坚持自己，那你就只能选择不住，或者就向平台反馈这件事情，但是第二种选择必定会给你带来不少麻烦，如果你选择不住，你得换一个地方，你也不确定你新找的地方是不是还是需要让你发身份证，你向平台投诉，平台客服又得找房东去核实，必然会浪费几十分钟甚至几个小时。回到最前面，如果你妥协了把身份证件发给房东了，你又如何保证房东除了出租民宿之外，还有一份副业会不会就是出售个人身份信息（当然我没有证据，只是恶意地揣测）。</p>
<p>那么除了日常和旅行之外，真的就没有别的信息泄露的途径了吗？真实情况远远不是这样的。在 2020 年的时候，我在一个群里看到了一个链接，只要打开链接，输入 QQ 号，就可以知道该 QQ 绑定的手机号，后来又有了微博号查绑定手机。这就是网上疯狂的 8 亿 QQ 和 5 亿微博，很荣幸我也亲眼见到过这两份数据库。这两份数据库的带来的后果是什么呢，只要 QQ 和微博是 2020 年之前注册的，你就可以轻松得到对方的手机号，可以添加微信，通过支付宝转账又可以知道对方的名字，通过手机号和名字又可以知道很多很多信息。这还不是最严重的，再后来我发现，只要通过一个名字就可以知道他的很多信息，包括教育经历等等。经过我的考证，在浙江省内接受过小学、初中、高中或者职校的几乎所有学生，只要通过名字都可以查到姓名、身份证号码、家长名字、家长电话、家庭住址、学校和班级。我有怀疑过是学校的工作人员出卖了数据，后来我否定了这样的想法，很有可能是教育局泄露了这份数据。当然学校也许也在卖，否则你上学的时候你爸妈手机为什么天天会收到培训机构的电话呢，甚至比你还先知道你期中考试考了多少分。</p>
<p>这些都是过去的数据泄露，来讲讲最近的。2022 年 6 月 21 日，超星学习通 1.7 亿用户数据泄露，虽然官方否定了这个传闻，但是经过证实，这就是事实，已经有人摆上货架售卖 500USDT，在某些地方也已经可以查到这份数据。没用过超星学习通可能不知道这意味着什么，毫不夸张地说，在中国大陆 80-90%的高校都在使用超星学习通教学，这就意味着所有正在读书的学生的信息都被泄露了。这份数据包括姓名、学号、性别、手机号和密码。官方轻描淡写地出来辟谣，还说密码是加密的，这个密码的问题之后会讲到。</p>
<p>如果说 1.7 亿，相比于中国 14 亿人口来说，不值得一提的话，那 2022 年 7 月 2 日的这个传闻泄露的数据包含 10 亿多中国公民，包含个人信息、犯罪记录、疫情数据。这是迄今为止中国大陆发生的最大的信息泄露事件。境外网站写的是 <strong>Shanghai GOV National Police</strong> 的漏洞泄露的数据，目前为得到证实，售价 10BTC。结合国内知名黑客 <strong>sunwear</strong> 的微博来看，应该是真的。</p>
<p>最后我想说说社交账号和密码问题。社交账号上建议，抖音号和微信号不要设置与自己的名字全拼、缩写、生日、手机号、QQ 号相关的。抖音个人简介里，尽量不要写自己的微博账号。给别人微信的时候，尽量不要给 QQ 号或者手机号。支付宝务必关闭手机号搜索。讲讲密码，我相信大部分人的习惯都一样，几乎所有平台的密码都是一样的，而且密码都是 ZJL021212，名字缩写加出生日期，或者出生日期加名字缩写。非常不建议采用这样的密码，最好是和你本人的个人信息没有任何关系的密码。如果不涉及财产的网站和软件，可以采用相同的密码，当然最好是每个平台都不一样，但是这样记密码的成本太高。请务必不要相信学习通所说的密码加密就不会被泄露。就举个例子，MD5 加密，这样的加密方式设计的时候就是不可逆的，例如 12345，加密后是 827ccb0eea8a706c4c34a16891f84e7b，你如果想知道 827ccb0eea8a706c4c34a16891f84e7b 的明文是什么，必须要 123、1234、12345 这样子的明文一个一个加密之后去比对，看似天衣无缝的加密算法，实际上目前 MD5 密文几乎都可以用彩虹表破解。所以加密后的密码被泄露也不一定是安全的。</p>
<p>最后的最后，希望中国能再多一些网络安全专家，希望我们每个人的隐私都能被好好地保护起来。</p>
<p><strong>以上信息不一定都是真实的，很多来自互联网，请理性看待。</strong></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Resigned from PwC</title>
      <link>https://missuo.me/posts/resigned-from-pwc/</link>
      <pubDate>Thu, 02 Jun 2022 03:15:23 +0000</pubDate>
      
      <guid>https://missuo.me/posts/resigned-from-pwc/</guid>
      <description>前天，也就是周二，2022 年 5 月 31 日。我从 PwC 主动申请离职了，办理好了所有的材料。直到今天，我的 PwC 员工账号和工作邮箱配置文件正式被移除，完全地离开了 PwC。
我在 4 月通过朋友的内推，参与了笔试、面试。面试的时候，其实感觉自己表现不太好。面试官只问 Java 相关的问题，但我平时 Java 的开发几乎没有，所以当时是觉得基本上凉了。没想到几天之后 HR 小姐姐告诉我我被录用了，跟我确认完一些信息后，给我发了 Offer 邮件。当我接到电话和收到的那一刻，其实内心还是很激动的，毕竟这是我的第一份正式的工作，还是一家挺不错的公司。
接下来的一个月时间，我都在准备入职的材料。包括体检报告、核酸报告、背景调查报告和在校证明等等，总之还是挺繁琐的，需要特别多的材料。直到 2022 年 5 月 16 日（周一），我正式入职。那一天下午，在内部群发了一个当天入职的所有人的 Domain，我才发现我被分配到了 Salesforce 部门。我瞬间有些崩溃，因为我从来没了解过 Salesforce 开发是做什么的。我立马打开谷歌查阅了相关资料，才发现相关的开发就是在 Salesforce 的云平台去做一些自定义的二次开发。显然，我这不是我喜欢的开发模式。我向 HR 提出了更换部门的请求。一开始询问了我想去什么部门，最后告诉我都换不了。
我实在没有办法，想过直接提离职，但是还是想熟悉一下 Salesforce 开发之后再做决定。所以在接下来上班的时间里，我努力去学习 Coach 发的 Trailhead 的相关课程，基本就一直处于自学的状态。老实说，短暂几天的自学，我发现其实 Salesforce 的开发并没有很难，反而是比较 傻瓜式 的。可以通过平台上的可视化界面对数据库进行几乎所有的操作，甚至还有低代码。但显然这不是我所喜欢的开发。
直到入职的第二周的周三，2022 年 5 月 25 日，我的 Coash 主动联系了我，要和我语音交流，我就知道应该是比较重要的事情。一般小事情我们都会通过 Teams 来交流。她询问了我对于 Salesforce 开发的兴趣，并且她已经得知了我想要更换部门的消息。我也没有再做任何掩饰，我坦诚地说明了我的想法，她和我聊了许久，还是希望我能够尝试去做相关的开发，给我几天时间让我再考虑考虑。我没有考虑，我很果断地决定更换部门，实在不行离职。
第二天我被告知无法更换部门，所以和刚开始预测的一样，我选择了离职。那天我发了一条微博，“不想再不喜欢的事情上浪费时间”。今天是离职的第二天，你要我会想这短暂的两周，打心底里说，PwC AC 上海真的是一家很不错的公司，有非常完善的新员工培训课程，最关键的是非常人性化的公司规定，没有加班，可以远程办公（没有疫情的时候也一样适用）。但是我不后悔所做的决定。
这一次非常短暂的实力经历，让我吸取了不少教训。我应聘的岗位是 助理软件工程师 。我收到的 Offer 邮件写的是 SF。如果你从来没听过 Salesforce ，一定不会知道 SF 代表的正是 Salesforce。最后在我离职前一天，我向 PwC AC Shanghai 的 Partner ，也就是上海加速中心的老板表达了我对 HR 招聘工作的一些建议。老板很快就回复了我的私信，表示会向 HR 部门反应，并且询问了我的兴趣，希望我之后有机会还能加入 PwC。</description>
      <content:encoded><![CDATA[<p>前天，也就是周二，2022 年 5 月 31 日。我从 PwC 主动申请离职了，办理好了所有的材料。直到今天，我的 PwC 员工账号和工作邮箱配置文件正式被移除，完全地离开了 PwC。</p>
<p>我在 4 月通过朋友的内推，参与了笔试、面试。面试的时候，其实感觉自己表现不太好。面试官只问 <strong>Java</strong> 相关的问题，但我平时 <strong>Java</strong> 的开发几乎没有，所以当时是觉得基本上凉了。没想到几天之后 <strong>HR</strong> 小姐姐告诉我我被录用了，跟我确认完一些信息后，给我发了 <strong>Offer</strong> 邮件。当我接到电话和收到的那一刻，其实内心还是很激动的，毕竟这是我的第一份正式的工作，还是一家挺不错的公司。</p>
<p>接下来的一个月时间，我都在准备入职的材料。包括体检报告、核酸报告、背景调查报告和在校证明等等，总之还是挺繁琐的，需要特别多的材料。直到 2022 年 5 月 16 日（周一），我正式入职。那一天下午，在内部群发了一个当天入职的所有人的 <strong>Domain</strong>，我才发现我被分配到了 <strong>Salesforce</strong> 部门。我瞬间有些崩溃，因为我从来没了解过 <strong>Salesforce</strong> 开发是做什么的。我立马打开谷歌查阅了相关资料，才发现相关的开发就是在 <strong>Salesforce</strong> 的云平台去做一些自定义的二次开发。显然，我这不是我喜欢的开发模式。我向 <strong>HR</strong> 提出了更换部门的请求。一开始询问了我想去什么部门，最后告诉我都换不了。</p>
<p>我实在没有办法，想过直接提离职，但是还是想熟悉一下 <strong>Salesforce</strong> 开发之后再做决定。所以在接下来上班的时间里，我努力去学习 <strong>Coach</strong> 发的 <strong>Trailhead</strong> 的相关课程，基本就一直处于自学的状态。老实说，短暂几天的自学，我发现其实 <strong>Salesforce</strong> 的开发并没有很难，反而是比较 <strong>傻瓜式</strong> 的。可以通过平台上的可视化界面对数据库进行几乎所有的操作，甚至还有低代码。但显然这不是我所喜欢的开发。</p>
<p>直到入职的第二周的周三，2022 年 5 月 25 日，我的 <strong>Coash</strong> 主动联系了我，要和我语音交流，我就知道应该是比较重要的事情。一般小事情我们都会通过 <strong>Teams</strong> 来交流。她询问了我对于 <strong>Salesforce</strong> 开发的兴趣，并且她已经得知了我想要更换部门的消息。我也没有再做任何掩饰，我坦诚地说明了我的想法，她和我聊了许久，还是希望我能够尝试去做相关的开发，给我几天时间让我再考虑考虑。我没有考虑，我很果断地决定更换部门，实在不行离职。</p>
<p>第二天我被告知无法更换部门，所以和刚开始预测的一样，我选择了离职。那天我发了一条微博，“不想再不喜欢的事情上浪费时间”。今天是离职的第二天，你要我会想这短暂的两周，打心底里说，PwC AC 上海真的是一家很不错的公司，有非常完善的新员工培训课程，最关键的是非常人性化的公司规定，没有加班，可以远程办公（没有疫情的时候也一样适用）。但是我不后悔所做的决定。</p>
<p>这一次非常短暂的实力经历，让我吸取了不少教训。我应聘的岗位是 <strong>助理软件工程师</strong> 。我收到的 <strong>Offer</strong> 邮件写的是 <strong>SF</strong>。如果你从来没听过 <strong>Salesforce</strong> ，一定不会知道 <strong>SF</strong> 代表的正是 <strong>Salesforce</strong>。最后在我离职前一天，我向 <strong>PwC AC Shanghai</strong> 的 <strong>Partner</strong> ，也就是上海加速中心的老板表达了我对 <strong>HR</strong> 招聘工作的一些建议。老板很快就回复了我的私信，表示会向 <strong>HR</strong> 部门反应，并且询问了我的兴趣，希望我之后有机会还能加入 <strong>PwC</strong>。</p>
<p>是的，正如这篇文章描述的一样，这一次的实习的确让我不太舒服，因为疫情，我甚至没有拿到员工卡，没有去过一次公司，就结束了。不管怎么样，还是很感恩遇见的所有人，特别是美国那边的同事耐心地帮我解决了问题。如果有机会的话，也许真的还会加入 <strong>PwC</strong>。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Makes Google Voice permanent</title>
      <link>https://missuo.me/posts/makes-google-voice-permanent/</link>
      <pubDate>Sat, 23 Apr 2022 20:05:32 +0000</pubDate>
      
      <guid>https://missuo.me/posts/makes-google-voice-permanent/</guid>
      <description>Google Voice 是由 Google 推出的 VOIP 服务，能够将个人所用的众多电话号码集中成为一个号码，同时提供许多加值服务，它在美加地区提供的免费语音通话和短信服务。
过去常用的方法是花 10 美元买一个新号，然后再花 20 美元永久保留旧号，总共需要花费 30 美元，但是现在仅需花费 10 美元低成本保留旧号。
准备工作 一张 Visa/Master/American Express Debit/Credit Card 一个美国 IP 的梯子 具体操作 打开 https://voice.google.com ，登陆你的账号。 进入 旧版控制台，由于现在谷歌已经隐藏了旧版工作台的入口，你无法直接进入，我们直接在地址栏，替换为 https://www.google.com/voice/b/1?noredirect = 1#phones ，按回车访问。 选择 Change / Port 进行换号。 选择 I want a new number。 换号 10 美元，点 Continue 继续。 选择一个你喜欢的号点 Continue 继续。 点 Purchase number 继续。 付款，换号成功，点 Done。 账号上已经有两个 Google Voice 号了，但旧 Google Voice 号后面有过期时间。 返回 新版控制台，访问 https://voice.</description>
      <content:encoded><![CDATA[<blockquote>
<p>Google Voice 是由 Google 推出的 VOIP 服务，能够将个人所用的众多电话号码集中成为一个号码，同时提供许多加值服务，它在美加地区提供的免费语音通话和短信服务。</p>
</blockquote>
<blockquote>
<p>过去常用的方法是花 10 美元买一个新号，然后再花 20 美元永久保留旧号，总共需要花费 30 美元，但是现在仅需花费 10 美元低成本保留旧号。</p>
</blockquote>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220423g8fPwZ.jpg" alt="20220423g8fPwZ"  />
</p>
<h2 id="准备工作">准备工作</h2>
<ul>
<li>一张 Visa/Master/American Express Debit/Credit Card</li>
<li>一个美国 IP 的梯子</li>
</ul>
<h2 id="具体操作">具体操作</h2>
<ol>
<li>
<p>打开 <a href="https://voice.google.com">https://voice.google.com</a> ，登陆你的账号。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423u3L6jx.jpg" alt="20220423u3L6jx"  />
</p>
</li>
<li>
<p>进入 <code>旧版控制台</code>，由于现在谷歌已经隐藏了旧版工作台的入口，你无法直接进入，我们直接在地址栏，替换为 <a href="https://www.google.com/voice/b/1?noredirect=1#phones">https://www.google.com/voice/b/1?noredirect = 1#phones</a> ，按回车访问。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423KzTqAj.jpg" alt="20220423KzTqAj"  />
</p>
</li>
<li>
<p>选择 <code>Change / Port</code> 进行换号。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423TqML9v.jpg" alt="20220423TqML9v"  />
</p>
</li>
<li>
<p>选择 <code>I want a new number</code>。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423Sxzvsc.jpg" alt="20220423Sxzvsc"  />
</p>
</li>
<li>
<p>换号 10 美元，点 <code>Continue</code> 继续。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423roSmPv.jpg" alt="20220423roSmPv"  />
</p>
</li>
<li>
<p>选择一个你喜欢的号点 <code>Continue</code> 继续。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423tDGH4h.jpg" alt="20220423tDGH4h"  />
</p>
</li>
<li>
<p>点 <code>Purchase number</code> 继续。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423NIY5tJ.jpg" alt="20220423NIY5tJ"  />
</p>
</li>
<li>
<p>付款，换号成功，点 <code>Done</code>。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423dLmuFA.jpg" alt="20220423dLmuFA"  />
</p>
</li>
<li>
<p>账号上已经有两个 Google Voice 号了，但旧 Google Voice 号后面有过期时间。
<img loading="lazy" src="https://static.nisekoo.com/blog/20220423Yfdup6.jpg" alt="20220423Yfdup6"  />
</p>
</li>
<li>
<p>返回 <code>新版控制台</code>，访问 <a href="https://voice.google.com">https://voice.google.com</a>  ，点右上角的设置 ⚙️ 图标。
<img loading="lazy" src="https://static.nisekoo.com/blog/202204235B4ldU.png" alt="202204235B4ldU"  />
</p>
</li>
<li>
<p>旧号码上会出现 <code>永久保留</code> 选项，点击这个按钮。
<img loading="lazy" src="https://static.nisekoo.com/blog/202204233zMpPp.jpg" alt="202204233zMpPp"  />
</p>
</li>
<li>
<p>会提示 <code>此号码将由您永久保留</code>。完成。</p>
</li>
</ol>
<h2 id="可靠性">可靠性</h2>
<blockquote>
<p>很多朋友可能都会疑惑，这样操作，两个号码是不是都会变成永久保留。针对这个问题，我特地给谷歌支持团队发了邮件咨询。</p>
</blockquote>
<p><strong>大概的意思是旧号码将会被 <code>永久保留</code>，但是新买的新号不会被永久保留，需要在六个月内保持活跃，通过主动发短信/打电话的方式来保号。</strong></p>
<h3 id="译文">译文</h3>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220423PhwlfY.png" alt="20220423PhwlfY"  />
</p>
<h3 id="原文">原文</h3>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220423aziEAw.JPEG" alt="20220423aziEAw"  />
</p>
<h2 id="感谢">感谢</h2>
<p>由于我已经操作完，部分截图来自 <a href="https://www.winvps.eu/279/">https://www.winvps.eu/279/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>April Voices - Shanghai Spring</title>
      <link>https://missuo.me/posts/april-voices-shanghai-spring/</link>
      <pubDate>Sat, 23 Apr 2022 01:05:14 +0000</pubDate>
      
      <guid>https://missuo.me/posts/april-voices-shanghai-spring/</guid>
      <description>This is a backup of the video of 永远的草莓园. Copyright 永远的草莓园. Since the original 2.53GB version was not collected, the 1.31GB HD version was used.
Quark - 1.31G Click Here
iCloud - 1.31G Click Here
Google Drive - 1.31G (VPN Required) Click Here
YouTube - 1.31G (VPN Required) Click Here
OneDrive - 1.31G Click Here
OpenSea NFT - Less than 100M (Limitations of OpenSea) Click Here
If you have the original video of 2.</description>
      <content:encoded><![CDATA[<blockquote>
<p>This is a backup of the video of <code>永远的草莓园</code>. Copyright <code>永远的草莓园</code>.
Since the original 2.53GB version was not collected, the 1.31GB HD version was used.</p>
</blockquote>
<h3 id="quark---131g">Quark - 1.31G</h3>
<p><a href="https://pan.quark.cn/s/ba744941e5d0">Click Here</a></p>
<h3 id="icloud---131g">iCloud - 1.31G</h3>
<p><a href="https://www.icloud.com/iclouddrive/046RG4kZRsAwCc3lg8QraAhWQ">Click Here</a></p>
<h3 id="google-drive---131g-vpn-required">Google Drive - 1.31G (VPN Required)</h3>
<p><a href="https://drive.google.com/file/d/10L-TsS1xUy_-yUeFCvPjeaJ2_X9D3gZy/view?usp=sharing">Click Here</a></p>
<h3 id="youtube---131g-vpn-required">YouTube - 1.31G (VPN Required)</h3>
<p><a href="https://youtu.be/CGcJ0YQ2nhE">Click Here</a></p>
<h3 id="onedrive---131g">OneDrive - 1.31G</h3>
<p><a href="https://loftss-my.sharepoint.com/%E2%9C%8C%EF%B8%8F/g/personal/u_nisekoo_com/EfROu3zXNttOhEzG3yvq3aUB5GlZyPkXzp2aRxlIlyCAfA?e=prr6jZ">Click Here</a></p>
<h3 id="opensea--nft---less-than-100m-limitations-of-opensea">OpenSea  NFT - Less than 100M (Limitations of OpenSea)</h3>
<p><a href="https://bafybeiami7tlkshd62rgg7fgnqsro5avyoiswgibyeo35nijmdmobcb2ea.ipfs.infura-ipfs.io/">Click Here</a></p>
<p><strong>If you have the original video of 2.53G, please contact me in the comment or <a href="https://t.me/missuo">Telegram</a>.</strong></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>COVID-19 in Shanghai</title>
      <link>https://missuo.me/posts/covid-19-in-shanghai/</link>
      <pubDate>Mon, 11 Apr 2022 06:49:12 +0000</pubDate>
      
      <guid>https://missuo.me/posts/covid-19-in-shanghai/</guid>
      <description>上海，是全中国最繁华的地方，也许没有之一。从小到大，由于离家不远，经常去上海。之前每次都会去南京路和外滩走走，因为这是在我的家乡小城市所看不到的。高中之后，我选择了去上海读大学，唯一的想法是希望未来可以在上海工作，在上海定居，爸妈也说上海大城市，教育质量一定也会更好一些。到目前为止的三年大学生活，我认识好多上海人，很多都成为了我最好的朋友，我们拥有共同的爱好，一起做着有趣的事。他们也会与我分享他们在上海不一样的童年故事。
直到一个月前，3 月 10 日，上海爆发了疫情。那个时候我在学校，那天下午和往常一年，我和朋友约好了下楼然后一起出校去吃「金拱门」，这基本上算是我们日常的生活。那天由于他的车需要充电，我们在等充电的时候聊了很多，他和我说这次的疫情很不简单，如果很严重的话，可能要全城全员核酸，但是目前根本不可能做到全员核酸，也不能封城。当天晚上，学校就安排了全员核酸，我隐约感觉到事情并没有那么简单。之后的日子，学校做了三次全员核酸，但是与之前所有的核酸不同的是，等了两天第一次核酸的结果迟迟不出。大家也都开始议论起来，是不是真的有「阳性」了，因为是十混一，还得做第二次才能直到结果。学校也开始执行严格的封校政策，禁止外卖。再后来，是三次结果全出，没有一个阳性。根据上海市教育局的规定，三次核酸全部阴性，本地学生可以离校申请回家上网课。由于我们整个专业几乎全是上海本地人，我是为数不多的外地人。跟我玩的不错的朋友几乎都在第一时间申请离校了。而在之后的 1-2 周里，大家都很开心，在家里可以住的很舒服，什么都不用担心，父母会帮忙安排好一切，更不需要出门上课。
而就在一两周前，这一切似乎都被打破了。4 月 1 日开始浦东、浦西开始封小区，刚开始只是说封几天，而从那之后，就再也没有解封过。从那以后，朋友圈每天就是被抢菜刷屏，几乎所有人都在抱怨抢不到菜。除了这些，每天微信群、朋友圈和抖音还会被各种新闻刷屏，有看到从全国各地援助上海的医务人员，有全国各地运往上海的蔬菜水果等等物资，这其实真的令人很感动。而除了这些之外呢，原来外地免费送往上海的蔬菜，是被居委会撕掉标签，摆摊天价售卖的。有贩子还在炫耀三月靠转卖蔬菜包赚了 3000 多万，500 块一包的蔬菜包可以赚 250 多元，20 个鸡蛋在上海可以卖到 600 元。有太多太多的人，是在靠国难发财。其实上海的物资完全够，如果没人疯狂囤货，没有黄牛垄断，完全能和平常一样顺利买得到，可惜没有如果。
而之后的新闻呢，只要主人阳性，宠物就会被一棍子打死。因为这个，我还特地去查了一些权威的信息，宠物即使阳性，其实也不会直接传给人。退一步讲，如果真的传染，也不至于直接打死。深圳，则建立了宠物方舱医院。
再后来，就上一周，似乎一切都变得越来越严重。我身边的一个朋友，住进了方舱。我第一次感觉到了原来新冠离我如此近。我在微信上询问了一下情况，她说她高烧去医院治疗，医生说她是阳性，就带她去方舱住下了。她说她这几周，从学校出来一直到去方舱就没出过门，一直都是在家，唯一被传染的可能就是小区集体下楼做核酸期间。其实几周前，她就跟我抱怨小区隔离楼有人已经确诊了，她说自己很害怕。而当她住进方舱的时候，在抖音发了一个视频，语气却显得非常平静，她没有哭，但是我能感觉到一个 20 岁女孩子在强忍泪水。当我问她，有没有的吃，她说早饭的花卷还不错，她挺喜欢。中饭和晚饭不是很合胃口，我猜她一定没吃几口吧。
而就在昨天，一段 19 分 28 秒的录音在网上疯传。一对夫妻与两位警察之间的对话。警察收到命令要带走这对夫妻去方舱隔离。而夫妻却有充足的证据证明自己是阴性，害怕自己去方舱之后被传染。而警察却不想听任何解释，表示只想完成上级的命令，19 分钟的哀求下，要求出示阳性报告和复核，最终还是强制被带走。从那一刻起，我彻底对上海这座城市感到失望，那两位警察没有温度，像是机器人一般。警察反复强调，「上级的指令」，即使带错人也不是他的责任。而如果不带人，则是他工作没有完成。可是如果真的带错人，就像录音中的妻子说的，阴性变阳性了，这样的责任谁来承担呢？「健康云」多次崩溃，有很多录音爆出来，所有阳性的「健康云」都会显示阴性，而真的阳性的人会被打电话通知，这些到底都是为了什么呢？为了防止舆论，防止泄露真实的阳性人数吗？这真的是正确的做法吗？
最后，我想来说说关于我的学校。就在昨天，我的学校有同学三次阳性被确诊并带去隔离了。然而可笑的是，朋友圈都在骂「翻墙出去买 KFC 而被传染」，这个说法来自于一条朋友圈底下的评论，并没有任何有力的证据。不少人在各种群里转发，朋友圈破口大骂，「不吃 KFC 会死吗」，之类的非常难听的话。而当那个同学的朋友和同班同学替他在群里辩解的时候，有人却跳出来说，「如果没有出去买 KFC 哪里来的病毒」，开始了阴谋论。而那个同学在朋友圈在隔离之后发了一条朋友圈，写道「那些喷子说的流言蜚语，你们终究会为自己买单」。在傍晚的时候，室友给我发消息，向我询问「上海市教育局」的电话，他和我说，因为今天中午开始有人阳性，所以临时开始了封寝室，但是中午连午饭都没送，直到晚上才有晚饭吃，但是是盲盒套餐，而且饭量也很少，根本吃不饱。差不多到十点，好多微信群的男孩子就开始喊肚子饿了，而可笑的是有人却在朋友圈嘲笑那些人，当时为什么不去超市囤点东西，认为他们活该挨饿。然而从今天开始的饭菜，学校要求学生自行在小程序上点餐，价格比平时略高一些，但是不能自选饭菜，份量也很少，最过分的是还限量，我室友就是属于没抢到的。我不知道今天他们该怎么办。
真的只有当疫情来临的时候，才能把一个人和一座城真实的样子表现出来。也许少一点恶意的揣测，多一点包容。少花一点心思在言论管控，撤热搜，删文章。多花一点时间在核酸信息核验，物资调配上会更有用吧。
一座 2700 万人的城，承载着多少人的梦想。
又有多少人，拼尽全力为了留在这座城。
而如今呢，他们会感到失望和后悔吗？</description>
      <content:encoded><![CDATA[<p>上海，是全中国最繁华的地方，也许没有之一。从小到大，由于离家不远，经常去上海。之前每次都会去南京路和外滩走走，因为这是在我的家乡小城市所看不到的。高中之后，我选择了去上海读大学，唯一的想法是希望未来可以在上海工作，在上海定居，爸妈也说上海大城市，教育质量一定也会更好一些。到目前为止的三年大学生活，我认识好多上海人，很多都成为了我最好的朋友，我们拥有共同的爱好，一起做着有趣的事。他们也会与我分享他们在上海不一样的童年故事。</p>
<p>直到一个月前，3 月 10 日，上海爆发了疫情。那个时候我在学校，那天下午和往常一年，我和朋友约好了下楼然后一起出校去吃「金拱门」，这基本上算是我们日常的生活。那天由于他的车需要充电，我们在等充电的时候聊了很多，他和我说这次的疫情很不简单，如果很严重的话，可能要全城全员核酸，但是目前根本不可能做到全员核酸，也不能封城。当天晚上，学校就安排了全员核酸，我隐约感觉到事情并没有那么简单。之后的日子，学校做了三次全员核酸，但是与之前所有的核酸不同的是，等了两天第一次核酸的结果迟迟不出。大家也都开始议论起来，是不是真的有「阳性」了，因为是十混一，还得做第二次才能直到结果。学校也开始执行严格的封校政策，禁止外卖。再后来，是三次结果全出，没有一个阳性。根据上海市教育局的规定，三次核酸全部阴性，本地学生可以离校申请回家上网课。由于我们整个专业几乎全是上海本地人，我是为数不多的外地人。跟我玩的不错的朋友几乎都在第一时间申请离校了。而在之后的 1-2 周里，大家都很开心，在家里可以住的很舒服，什么都不用担心，父母会帮忙安排好一切，更不需要出门上课。</p>
<p>而就在一两周前，这一切似乎都被打破了。4 月 1 日开始浦东、浦西开始封小区，刚开始只是说封几天，而从那之后，就再也没有解封过。从那以后，朋友圈每天就是被抢菜刷屏，几乎所有人都在抱怨抢不到菜。除了这些，每天微信群、朋友圈和抖音还会被各种新闻刷屏，有看到从全国各地援助上海的医务人员，有全国各地运往上海的蔬菜水果等等物资，这其实真的令人很感动。而除了这些之外呢，原来外地免费送往上海的蔬菜，是被居委会撕掉标签，摆摊天价售卖的。有贩子还在炫耀三月靠转卖蔬菜包赚了 3000 多万，500 块一包的蔬菜包可以赚 250 多元，20 个鸡蛋在上海可以卖到 600 元。有太多太多的人，是在靠国难发财。其实上海的物资完全够，如果没人疯狂囤货，没有黄牛垄断，完全能和平常一样顺利买得到，可惜没有如果。</p>
<p>而之后的新闻呢，只要主人阳性，宠物就会被一棍子打死。因为这个，我还特地去查了一些权威的信息，宠物即使阳性，其实也不会直接传给人。退一步讲，如果真的传染，也不至于直接打死。深圳，则建立了宠物方舱医院。</p>
<p>再后来，就上一周，似乎一切都变得越来越严重。我身边的一个朋友，住进了方舱。我第一次感觉到了原来新冠离我如此近。我在微信上询问了一下情况，她说她高烧去医院治疗，医生说她是阳性，就带她去方舱住下了。她说她这几周，从学校出来一直到去方舱就没出过门，一直都是在家，唯一被传染的可能就是小区集体下楼做核酸期间。其实几周前，她就跟我抱怨小区隔离楼有人已经确诊了，她说自己很害怕。而当她住进方舱的时候，在抖音发了一个视频，语气却显得非常平静，她没有哭，但是我能感觉到一个 20 岁女孩子在强忍泪水。当我问她，有没有的吃，她说早饭的花卷还不错，她挺喜欢。中饭和晚饭不是很合胃口，我猜她一定没吃几口吧。</p>
<p>而就在昨天，一段 19 分 28 秒的录音在网上疯传。一对夫妻与两位警察之间的对话。警察收到命令要带走这对夫妻去方舱隔离。而夫妻却有充足的证据证明自己是阴性，害怕自己去方舱之后被传染。而警察却不想听任何解释，表示只想完成上级的命令，19 分钟的哀求下，要求出示阳性报告和复核，最终还是强制被带走。从那一刻起，我彻底对上海这座城市感到失望，那两位警察没有温度，像是机器人一般。警察反复强调，「上级的指令」，即使带错人也不是他的责任。而如果不带人，则是他工作没有完成。可是如果真的带错人，就像录音中的妻子说的，阴性变阳性了，这样的责任谁来承担呢？「健康云」多次崩溃，有很多录音爆出来，所有阳性的「健康云」都会显示阴性，而真的阳性的人会被打电话通知，这些到底都是为了什么呢？为了防止舆论，防止泄露真实的阳性人数吗？这真的是正确的做法吗？</p>
<p>最后，我想来说说关于我的学校。就在昨天，我的学校有同学三次阳性被确诊并带去隔离了。然而可笑的是，朋友圈都在骂「翻墙出去买 KFC 而被传染」，这个说法来自于一条朋友圈底下的评论，并没有任何有力的证据。不少人在各种群里转发，朋友圈破口大骂，「不吃 KFC 会死吗」，之类的非常难听的话。而当那个同学的朋友和同班同学替他在群里辩解的时候，有人却跳出来说，「如果没有出去买 KFC 哪里来的病毒」，开始了阴谋论。而那个同学在朋友圈在隔离之后发了一条朋友圈，写道「那些喷子说的流言蜚语，你们终究会为自己买单」。在傍晚的时候，室友给我发消息，向我询问「上海市教育局」的电话，他和我说，因为今天中午开始有人阳性，所以临时开始了封寝室，但是中午连午饭都没送，直到晚上才有晚饭吃，但是是盲盒套餐，而且饭量也很少，根本吃不饱。差不多到十点，好多微信群的男孩子就开始喊肚子饿了，而可笑的是有人却在朋友圈嘲笑那些人，当时为什么不去超市囤点东西，认为他们活该挨饿。然而从今天开始的饭菜，学校要求学生自行在小程序上点餐，价格比平时略高一些，但是不能自选饭菜，份量也很少，最过分的是还限量，我室友就是属于没抢到的。我不知道今天他们该怎么办。</p>
<p>真的只有当疫情来临的时候，才能把一个人和一座城真实的样子表现出来。也许少一点恶意的揣测，多一点包容。少花一点心思在言论管控，撤热搜，删文章。多花一点时间在核酸信息核验，物资调配上会更有用吧。</p>
<p>一座 2700 万人的城，承载着多少人的梦想。</p>
<p>又有多少人，拼尽全力为了留在这座城。</p>
<p>而如今呢，他们会感到失望和后悔吗？</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Defending Rights in China</title>
      <link>https://missuo.me/posts/defending-rights-in-china/</link>
      <pubDate>Thu, 07 Apr 2022 04:56:46 +0000</pubDate>
      
      <guid>https://missuo.me/posts/defending-rights-in-china/</guid>
      <description>今天有早八的课，本来早该睡觉了。当我看了微博的一些关于上海疫情的新闻之后，引发了我的思考，突然精神起来了。
上海疫情 四周前，上海疫情爆发，我从学校跑回了家。本以为最多一周就能顺利回去继续上课，没想到这一回就转眼一个月了。时常看到朋友圈和微信群聊中的各种新闻：核酸阳性却统一全部改成阴性，素不相识的陌生人却要因为阳性在一个酒店房间隔离，外地免费捐给上海的蔬菜却要卖到100多元……本来在遭遇苦难的时刻，应该互相照顾、互相理解，但现实确实赤裸裸地展现了人性最丑陋的一面。有的人在担心自己和家人的生命安全，担心自己的孩子能不能每天有饭吃，而也有的人却在靠疫情发大财。
而看了这么多新闻，最让人愤怒的是，主要主人确诊了新冠，宠物必须要打死。我查阅了各种资料，并没有任何科学依据说明宠物感染新冠之后可以直接传染给人。我听了很多录音，有居委会的工作人员很确定地说，宠物会影响整个小区的安全，甚至还请所谓的专业医生讲解。我不知道对于他们来说一只猫或狗意味着什么，也许就像一只蚂蚁一样渺小和无存在感。虽然我没有养过宠物，但是从一只小猫小狗慢慢养大，主人要花费的不仅仅是金钱，更重要的是投入了很多时间和感情，猫和狗是有感情的动物，他们永远也不会伤害自己的主人，甚至在危险的时候会挺身而出保护自己的主人。养猫狗的人，已经把他们的宠物当成了家庭成员，甚至把他们当作自己的孩子一样对待。
而视频中的大白，却狠狠的一棍子打死了一只狗。在美国，虐待宠物是可以定罪的，而在中国，即使自己的宠物被打死了，似乎也只能在微博求助，即使报警也没人会来好好处理你的案子。而中国的社交媒体，撤热搜、封禁账号，什么事情都做得出来。因此在中国维权的成功率太低了。
在中国维权 说真的，我是一个很喜欢维权的人，但是在我的那么多次维权中，大部分都以失败告终。
曾经在我的家乡，一个雨夜，打了滴滴去找我的朋友。去的时候的司机因为下暴雨主动开车进小区送我到单元楼下。而当我准备回去的时候，我在单元楼下打车，一个司机给我打电话，告知我无法进入小区，并说没有找到小区大门。无奈之下，我只能撑着伞走出小区，但是实际上那晚风太大，伞根本撑不住，雨太大，小区的排水口根本来不及排水，地面上全是积水。当我走到小区门口的时候，我发现司机刚好停在小区门口，我拉开车门进去之后，刚好有一辆出租车开进小区，我就和司机说，你这不就是门口吗，你没看到出租车就从这里进去吗？司机有些愤怒，他说我又不知道这里是门，以无知来搪塞我。忽悠完就准备开车，我有些不开心，我说如果你不想开进来可以直接和我说实话，没必要这样忽悠我，和我说找不到小区门口。司机直接猛地打一个方向盘，急刹车，解开保险带，转过身来，抡起拳头想要打我。我瞬间有些害怕，没有再说话。后来我注意到，他一直在红灯的时候，用微信给他的朋友发着什么，等我到我家小区门口，他在小区门口停了许久，在打电话，似乎还在看我到底住在哪一幢。那一晚我很不爽，我在滴滴出行App上投诉了，并且向滴滴的CEO柳青（联想柳传志的女儿）以及另一位滴滴的高管发送了电子邮件，描述了我的遭遇，但是结果显然是没用的。滴滴出行的客服联系我说已经对司机进行教育，但是没有任何处罚，司机没有被停止接单，并且也不会给我任何补偿。后来，我有提出过对处理结果不满意，要求向领导反应情况，客服当时答应了，之后就再无后续。
这对于我来说，无疑是一件非常重要的事情，我第一次感觉到了滴滴出行的司机对我的人身安全造成了威胁。而滴滴出行却默许了司机这样的行为，这就是为什么总有新闻说滴滴司机对少女做出各种卑鄙的事情，平台的监管是在维护滴滴自身和司机的利益，而并不是在维护消费者利益。滴滴出行在中国的商店被下架是有原因的，一个把用户看的一文不值的企业必定不会越做越好。
我没有向运管局投诉，因为我很清楚，即使我做了，也只是在浪费时间罢了。资本能够操控的东西实在太多了，这就是为什么在中国维权如此难的原因。</description>
      <content:encoded><![CDATA[<blockquote>
<p>今天有早八的课，本来早该睡觉了。当我看了微博的一些关于<code>上海疫情</code>的新闻之后，引发了我的思考，突然精神起来了。</p>
</blockquote>
<h2 id="上海疫情">上海疫情</h2>
<p>四周前，上海疫情爆发，我从学校跑回了家。本以为最多一周就能顺利回去继续上课，没想到这一回就转眼一个月了。时常看到朋友圈和微信群聊中的各种新闻：核酸阳性却统一全部改成阴性，素不相识的陌生人却要因为阳性在一个酒店房间隔离，外地免费捐给上海的蔬菜却要卖到100多元……本来在遭遇苦难的时刻，应该互相照顾、互相理解，但现实确实赤裸裸地展现了人性最丑陋的一面。有的人在担心自己和家人的生命安全，担心自己的孩子能不能每天有饭吃，而也有的人却在靠疫情发大财。</p>
<p>而看了这么多新闻，最让人愤怒的是，主要主人确诊了新冠，宠物必须要打死。我查阅了各种资料，并没有任何科学依据说明宠物感染新冠之后可以直接传染给人。我听了很多录音，有居委会的工作人员很确定地说，宠物会影响整个小区的安全，甚至还请所谓的专业医生讲解。我不知道对于他们来说一只猫或狗意味着什么，也许就像一只蚂蚁一样渺小和无存在感。虽然我没有养过宠物，但是从一只小猫小狗慢慢养大，主人要花费的不仅仅是金钱，更重要的是投入了很多时间和感情，猫和狗是有感情的动物，他们永远也不会伤害自己的主人，甚至在危险的时候会挺身而出保护自己的主人。养猫狗的人，已经把他们的宠物当成了家庭成员，甚至把他们当作自己的孩子一样对待。</p>
<p>而视频中的大白，却狠狠的一棍子打死了一只狗。在美国，虐待宠物是可以定罪的，而在中国，即使自己的宠物被打死了，似乎也只能在微博求助，即使报警也没人会来好好处理你的案子。而中国的社交媒体，撤热搜、封禁账号，什么事情都做得出来。因此在中国维权的成功率太低了。</p>
<h2 id="在中国维权">在中国维权</h2>
<p>说真的，我是一个很喜欢维权的人，但是在我的那么多次维权中，大部分都以失败告终。</p>
<p>曾经在我的家乡，一个雨夜，打了滴滴去找我的朋友。去的时候的司机因为下暴雨主动开车进小区送我到单元楼下。而当我准备回去的时候，我在单元楼下打车，一个司机给我打电话，告知我无法进入小区，并说没有找到小区大门。无奈之下，我只能撑着伞走出小区，但是实际上那晚风太大，伞根本撑不住，雨太大，小区的排水口根本来不及排水，地面上全是积水。当我走到小区门口的时候，我发现司机刚好停在小区门口，我拉开车门进去之后，刚好有一辆出租车开进小区，我就和司机说，你这不就是门口吗，你没看到出租车就从这里进去吗？司机有些愤怒，他说我又不知道这里是门，以无知来搪塞我。忽悠完就准备开车，我有些不开心，我说如果你不想开进来可以直接和我说实话，没必要这样忽悠我，和我说找不到小区门口。司机直接猛地打一个方向盘，急刹车，解开保险带，转过身来，抡起拳头想要打我。我瞬间有些害怕，没有再说话。后来我注意到，他一直在红灯的时候，用微信给他的朋友发着什么，等我到我家小区门口，他在小区门口停了许久，在打电话，似乎还在看我到底住在哪一幢。那一晚我很不爽，我在滴滴出行App上投诉了，并且向滴滴的CEO柳青（联想柳传志的女儿）以及另一位滴滴的高管发送了电子邮件，描述了我的遭遇，但是结果显然是没用的。滴滴出行的客服联系我说已经对司机进行教育，但是没有任何处罚，司机没有被停止接单，并且也不会给我任何补偿。后来，我有提出过对处理结果不满意，要求向领导反应情况，客服当时答应了，之后就再无后续。</p>
<p>这对于我来说，无疑是一件非常重要的事情，我第一次感觉到了滴滴出行的司机对我的人身安全造成了威胁。而滴滴出行却默许了司机这样的行为，这就是为什么总有新闻说滴滴司机对少女做出各种卑鄙的事情，平台的监管是在维护滴滴自身和司机的利益，而并不是在维护消费者利益。滴滴出行在中国的商店被下架是有原因的，一个把用户看的一文不值的企业必定不会越做越好。</p>
<p>我没有向运管局投诉，因为我很清楚，即使我做了，也只是在浪费时间罢了。资本能够操控的东西实在太多了，这就是为什么在中国维权如此难的原因。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ASN Application | Use your own IP to access the Internet</title>
      <link>https://missuo.me/posts/as206729/</link>
      <pubDate>Mon, 04 Apr 2022 05:44:38 +0000</pubDate>
      
      <guid>https://missuo.me/posts/as206729/</guid>
      <description>ASN 是什么 自治系统(Autonomous System)，用通俗的语言来形容，就是一个互联网的独立王国，这一个个独立王国互联起来，就组成了互联网(Internet)。
每个王国有自己独立的国号，以区别于别的王国，这个国号用自治系统号 ASN(Autonomous System Number)，ASN 由两个字节组成，理论上取值范围为 1-65535，末尾的 1024 个 ASN 是私有自治号，用于王国内部的下属郡国使用，不能外泄（类似私有 IP，如果不小心外泄，别人也会忽略)
每一个互联网用户都置身于 AS 内，比如中国电信的 AS 号为 4809，那么中国电信的用户就置身于 4809 的独立王国，如果用户访问的服务器也是在这个 AS 内，那双向的流量都在王国里来回溜达。
但如果服务器 IP 位于中国移动 AS 内，如何跨运营商访问呢？
运营商之间会使用 BGP(Border Gateway Protocol)路由协议来交换各自的 lP 路由表，AS 号就是 BGP 协议用来辨识邻国的一个身份证，同时在交换的路由表信息里，会附上各自的 AS 号。
既然中国电信通过 BGP 学习到中国移动的路由信息，就会把用户的访问请求转发给中国移动的边界路由器，既然 IP 包进入中国移动的地界，接下来就任由中国移动的设备来处理了，假设顺利到达服务器，回程检查客户 IP，发现是电信的 IP，就会转发到电信的边界路由器，并到达用户。
我的 ASN 信息——AS206729 AS206729 Prefixes v6 2401:95c0:f001::/48
AS206729 Peers v6 Rank Description IPv6 Peer 1 FranTech Solutions 2401: 95c0: f001:: 1/128 AS53667 更多详情，前往 BGP.</description>
      <content:encoded><![CDATA[<h2 id="asn-是什么">ASN 是什么</h2>
<blockquote>
<p>自治系统(Autonomous System)，用通俗的语言来形容，就是一个互联网的独立王国，这一个个独立王国互联起来，就组成了互联网(Internet)。</p>
</blockquote>
<blockquote>
<p>每个王国有自己独立的国号，以区别于别的王国，这个国号用自治系统号 ASN(Autonomous System Number)，ASN 由两个字节组成，理论上取值范围为 1-65535，末尾的 1024 个 ASN 是私有自治号，用于王国内部的下属郡国使用，不能外泄（类似私有 IP，如果不小心外泄，别人也会忽略)</p>
</blockquote>
<blockquote>
<p>每一个互联网用户都置身于 AS 内，比如中国电信的 AS 号为 4809，那么中国电信的用户就置身于 4809 的独立王国，如果用户访问的服务器也是在这个 AS 内，那双向的流量都在王国里来回溜达。</p>
</blockquote>
<blockquote>
<p>但如果服务器 IP 位于中国移动 AS 内，如何跨运营商访问呢？</p>
</blockquote>
<blockquote>
<blockquote>
<p>运营商之间会使用 BGP(Border Gateway Protocol)路由协议来交换各自的 lP 路由表，AS 号就是 BGP 协议用来辨识邻国的一个身份证，同时在交换的路由表信息里，会附上各自的 AS 号。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>既然中国电信通过 BGP 学习到中国移动的路由信息，就会把用户的访问请求转发给中国移动的边界路由器，既然 IP 包进入中国移动的地界，接下来就任由中国移动的设备来处理了，假设顺利到达服务器，回程检查客户 IP，发现是电信的 IP，就会转发到电信的边界路由器，并到达用户。</p>
</blockquote>
</blockquote>
<h2 id="我的-asn-信息as206729">我的 ASN 信息——AS206729</h2>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402OuAhUS.jpg" alt="20220402OuAhUS"  />
</p>
<h3 id="as206729-prefixes-v6"><strong>AS206729 Prefixes v6</strong></h3>
<p><code>2401:95c0:f001::/48</code></p>
<h3 id="as206729-peers-v6"><strong>AS206729 Peers v6</strong></h3>
<table>
<thead>
<tr>
<th>Rank</th>
<th>Description</th>
<th>IPv6</th>
<th>Peer</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>FranTech Solutions</td>
<td>2401: 95c0: f001:: 1/128</td>
<td>AS53667</td>
</tr>
</tbody>
</table>
<h3 id="更多详情前往-bgptoolshttpsbgptoolsas206729-查看">更多详情，前往 <a href="https://bgp.tools/as/206729">BGP.TOOLS</a> 查看。</h3>
<h2 id="如何申请-asn">如何申请 ASN</h2>
<p>一般情况下，需要寻找 <code>APNIC</code> 或者 <code>RIPE</code> 的会员来作为你的 <code>LIR</code>。当然你也可以自己加入 <code>APNIC</code> 或者 <code>RIPE</code>，需要每年缴纳费用。</p>
<p>我找的是台湾的一个朋友 <code>Hostinginside LTD(AS9678)</code>，他作为我的 <code>LIR</code>，申请的是 <code>RIPE</code>。提供信息到签合同到补全信息，最后下号，花了不到一周的时间。<code>APNIC</code> 可能没那么快。</p>
<h3 id="ripe-准备的材料">RIPE 准备的材料</h3>
<ul>
<li>注册 <code>RIPE</code> 账号，新建一些 <code>Database</code> 的信息。</li>
<li>你的护照照片</li>
<li>你在欧洲拥有网络服务的证明（购买的订单截图、机房地址和管理员邮箱）</li>
<li>ISP 愿意给你接入 BGP 的证明</li>
<li>两个需要接入的 ASN</li>
</ul>
<h2 id="asn-下号">ASN 下号</h2>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402qbALxU.jpg" alt="20220402qbALxU"  />
</p>
<h2 id="接入-bgp-session以-buyvm-为例vultr-类似">接入 BGP Session（以 BuyVM 为例，Vultr 类似）</h2>
<ul>
<li>发 <code>Ticket</code> 告诉客服你的 ASN 号，客服一般会向该 ASN 的管理员邮箱发送一串随机字符串，需要在工单中回复，验证你是 ASN 的持有人。稍后，客服会在面板里面加入你的 ASN 和你的 IP 段。</li>
</ul>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402T4JgCU.png" alt="20220402T4JgCU"  />
</p>
<ul>
<li>在你的 VPS 上安装 <code>bird</code>。用于宣告你的 IP。</li>
<li>修改 /etc/bird/bird6.conf 的配置文件</li>
<li>修改配置中的 router id 改为自己的 IPv4 地址</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">router id 205.121.23.12;
</span></span></code></pre></div><ul>
<li>在文件的最后添加上</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">protocol bgp vultr
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  local as 你的 asn(开头不带 as);
</span></span><span class="line"><span class="cl">  source address 实例的 ipv6;
</span></span><span class="line"><span class="cl">  import none;
</span></span><span class="line"><span class="cl">  export all;
</span></span><span class="line"><span class="cl">  graceful restart on;
</span></span><span class="line"><span class="cl">  multihop 2;
</span></span><span class="line"><span class="cl">  neighbor 2001: 19f0: ffff:: 1 as 64515; #这个是服务器的 ip
</span></span><span class="line"><span class="cl">  password &#34;在申请广播的时候设置的 bgp 密码&#34;;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>寻找到 protocol static（没有的话自己加一个）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">protocol static
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  route  [v6 前缀] via [实例的 IPv6];
</span></span><span class="line"><span class="cl">  #route  2001: 2333: 2333::/48 via 4096: 4096: 4096: 338: 5400: 01ff: fecf: 596c;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>找到 protocol direct</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">protocol direct
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  interface &#34; dummy*&#34;;
</span></span><span class="line"><span class="cl">  import all;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>配置虚拟网卡以及 ip 地址</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ip link add dev dummy1 type dummy # 添加虚拟网卡
</span></span><span class="line"><span class="cl">ip link set dummy1 up
</span></span><span class="line"><span class="cl">ip addr add dev dummy1 [前缀内的任意一个地址] # 添加地址
</span></span></code></pre></div><ul>
<li>启动 bird6</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">service bird6 restart
</span></span></code></pre></div><ul>
<li>查看状态</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">birdc6 show route
</span></span><span class="line"><span class="cl">birdc6 show proto all
</span></span></code></pre></div><ul>
<li>如果想要开机自启 在 <code>/etc/netplan</code> 新增 <code>01.dummy.yaml</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">network:
</span></span><span class="line"><span class="cl">  version: 2
</span></span><span class="line"><span class="cl">  renderer: networkd
</span></span><span class="line"><span class="cl">  bridges:
</span></span><span class="line"><span class="cl">    dummy0:
</span></span><span class="line"><span class="cl">      dhcp4: no
</span></span><span class="line"><span class="cl">      dhcp6: no
</span></span><span class="line"><span class="cl">      accept-ra: no
</span></span><span class="line"><span class="cl">      interfaces: [ ]
</span></span><span class="line"><span class="cl">      addresses:
</span></span><span class="line"><span class="cl">        - 2401: 95c0: f001:: 1/128 #你的 IP
</span></span></code></pre></div><h2 id="配置-xrayr-的出站路由">配置 XrayR 的出站路由</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    &#34;domainStrategy&#34;: &#34;IPOnDemand&#34;,
</span></span><span class="line"><span class="cl">    &#34;rules&#34;: [
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;type&#34;: &#34;field&#34;,
</span></span><span class="line"><span class="cl">            &#34;outboundTag&#34;: &#34;block&#34;,
</span></span><span class="line"><span class="cl">            &#34;ip&#34;: [
</span></span><span class="line"><span class="cl">                &#34;geoip: private&#34;
</span></span><span class="line"><span class="cl">            ]
</span></span><span class="line"><span class="cl">        },
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;type&#34;: &#34;field&#34;,
</span></span><span class="line"><span class="cl">            &#34;outboundTag&#34;: &#34;block&#34;,
</span></span><span class="line"><span class="cl">            &#34;protocol&#34;: [
</span></span><span class="line"><span class="cl">                &#34;bittorrent&#34;
</span></span><span class="line"><span class="cl">            ]
</span></span><span class="line"><span class="cl">        },
</span></span><span class="line"><span class="cl">		# 指定域名走我自己的 IP
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;type&#34;: &#34;field&#34;,
</span></span><span class="line"><span class="cl">            &#34;outboundTag&#34;: &#34;bgp_session&#34;,
</span></span><span class="line"><span class="cl">            &#34;domain&#34;: [&#34;ipv6.ip.sb&#34;]
</span></span><span class="line"><span class="cl">        },
</span></span><span class="line"><span class="cl">		# Netflix 和 YouTube 走我自己的 IP
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;type&#34;: &#34;field&#34;,
</span></span><span class="line"><span class="cl">            &#34;outboundTag&#34;: &#34;bgp_session&#34;,
</span></span><span class="line"><span class="cl">            &#34;domain&#34;: [
</span></span><span class="line"><span class="cl">                &#34;geosite: netflix&#34;,
</span></span><span class="line"><span class="cl">                &#34;geosite: youtube&#34;
</span></span><span class="line"><span class="cl">            ]
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    ]
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>##上网测试</p>
<h3 id="ipsb">IP.SB</h3>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402WVLK3S.png" alt="20220402WVLK3S"  />
</p>
<h3 id="netflix解锁台湾-nf-所有片源">Netflix（解锁台湾 NF 所有片源）</h3>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402MRa9zP.png" alt="20220402MRa9zP"  />
</p>
<h3 id="youtube支持-premium-tw">YouTube（支持 Premium TW）</h3>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220402oAFKci.png" alt="20220402oAFKci"  />
</p>
<h2 id="参考文章">参考文章</h2>
<p><a href="https://hex.moe/p/d6a20b99/">年轻人的第一个私人 BGP(二) - 广播你的 IP</a><br>
<a href="https://blog.ni-co.moe/public/560.html">IP 广播: 使用 bird 广播(组播)ipv6</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>About</title>
      <link>https://missuo.me/about/</link>
      <pubDate>Mon, 04 Apr 2022 05:28:03 +0000</pubDate>
      
      <guid>https://missuo.me/about/</guid>
      <description>Welcome to my website, I am very happy to meet you!
🏠 About this site This site is mainly used for the personal life of the blogger.
👨‍💻 Who is the blogger Vincent(YingTao) Young Libra, born on October 10, 2000 From Zhejiang, about to go to Pennsylvania, USA Master Student, studying Computer Science at University of Pittsburgh ⛹ Interests Basketball (Golden State Warriors fans) Travel (love to go see the sea) Programming (working on learning Flutter) 📬 Contact me Email: i@yyt.</description>
      <content:encoded><![CDATA[<blockquote>
<p>Welcome to my website, I am very happy to meet you!</p>
</blockquote>
<h2 id="-about-this-site">🏠 About this site</h2>
<p>This site is mainly used for the personal life of the blogger.</p>
<h2 id="-who-is-the-blogger">👨‍💻 Who is the blogger</h2>
<ul>
<li>Vincent(YingTao) Young</li>
<li>Libra, born on October 10, 2000</li>
<li>From Zhejiang, about to go to Pennsylvania, USA</li>
<li>Master Student, studying Computer Science at <a href="https://www.pitt.edu">University of Pittsburgh</a></li>
</ul>
<h2 id="-interests">⛹ Interests</h2>
<ul>
<li>Basketball (Golden State Warriors fans)</li>
<li>Travel (love to go see the sea)</li>
<li>Programming (working on learning Flutter)</li>
</ul>
<h2 id="-contact-me">📬 Contact me</h2>
<p>Email: <a href="mailto:i@yyt.moe">i@yyt.moe</a><br>
Telegram: <a href="https://t.me/missuo">missuo</a><br>
Twitter: <a href="https://twitter.com/m1ssuo">m1ssuo</a><br>
Instagram: <a href="https://instagram.com/m1ssuo">m1ssuo</a><br>
GitHub: <a href="https://github.com/missuo">missuo</a></p>
<h2 id="-my-device">📱 My device</h2>
<p>MacBook Pro 2019<br>
Mac mini 2020<br>
iPad Air 4<br>
iPhone 12 Pro<br>
iPhone 12<br>
Xiaomi Civi<br>
Apple Watch SE<br>
AirPods 2<br>
AirPods Pro 2<br>
KeyChron K2<br>
Magic Keyboard<br>
SONGREN 4K Display</p>
<h2 id="sponsor">Sponsor</h2>
<iframe src="https://github.com/sponsors/missuo/button" title="Sponsor missuo" height="32" width="114" style="border: 0; border-radius: 6px;"></iframe>]]></content:encoded>
    </item>
    
    <item>
      <title>2019 Hong Kong Travel</title>
      <link>https://missuo.me/posts/2019-hong-kong-travel/</link>
      <pubDate>Sun, 30 Jun 2019 07:30:46 +0000</pubDate>
      
      <guid>https://missuo.me/posts/2019-hong-kong-travel/</guid>
      <description>Transportation Train T211(Jiaxing Railway Station - Shenzhen Railway Station) Bus B3X(Shenzhen Bay Port - Tuen Mun Town Centre) Accommodation USA Hostel Mirador Mansion, 54-56B Nathan Rd, Tsim Sha Tsui, Hong Kong
Photos </description>
      <content:encoded><![CDATA[<h2 id="transportation">Transportation</h2>
<ul>
<li>Train T211(Jiaxing Railway Station - Shenzhen Railway Station)</li>
<li>Bus B3X(Shenzhen Bay Port - Tuen Mun Town Centre)</li>
</ul>
<h2 id="accommodation">Accommodation</h2>
<blockquote>
<p>USA Hostel
Mirador Mansion, 54-56B Nathan Rd, Tsim Sha Tsui, Hong Kong</p>
</blockquote>
<h2 id="photos">Photos</h2>
<p><img loading="lazy" src="https://static.nisekoo.com/blog/20220404GungQY.jpg" alt="20220404GungQY"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404BqkUBO.jpg" alt="20220404BqkUBO"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/202204043kzvcF.jpg" alt="202204043kzvcF"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404w0ByDl.jpg" alt="20220404w0ByDl"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404xxc7wB.jpg" alt="20220404xxc7wB"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404l0AqoR.jpg" alt="20220404l0AqoR"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404b55pO8.jpg" alt="20220404b55pO8"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404G33Ynq.jpg" alt="20220404G33Ynq"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/202204041cCGL5.jpg" alt="202204041cCGL5"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404hzNLgr.jpg" alt="20220404hzNLgr"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404tMcTzi.jpg" alt="20220404tMcTzi"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404CuLOJu.jpg" alt="20220404CuLOJu"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404GHD7uq.jpg" alt="20220404GHD7uq"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404fcfSgj.jpg" alt="20220404fcfSgj"  />

<img loading="lazy" src="https://static.nisekoo.com/blog/20220404Dm0gOT.jpg" alt="20220404Dm0gOT"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://missuo.me/archives/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://missuo.me/archives/archives/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://missuo.me/tag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://missuo.me/tag/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
  </channel>
</rss>
